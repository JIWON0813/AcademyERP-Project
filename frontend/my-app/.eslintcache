[{"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\index.js":"1","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\App.js":"2","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\store.js":"3","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js":"4","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js":"5","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js":"6","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js":"7","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js":"8","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js":"9","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js":"10","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js":"11","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js":"12","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js":"13","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js":"14","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js":"15","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js":"16","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js":"17","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js":"18","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js":"19","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js":"20","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js":"21","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\masage.js":"22","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js":"23","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js":"24","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\StandByAuth.js":"25","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_apply.js":"26","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\calendar.js":"27","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_user.js":"28","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index.js":"29","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\getPayment\\getPayment.js":"30","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\index.js":"31","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\getPayment.js":"32","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\paymentData.js":"33","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index_view.js":"34","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index.js":"35","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js":"36","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index_view.js":"37","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js":"38","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js":"39","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js":"40","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js":"41","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js":"42","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js":"43","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js":"44","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js":"45","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js":"46","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js":"47","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js":"48","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js":"49","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js":"50","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js":"51","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js":"52","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js":"53","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\SearchStudent.js":"54","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\Counseling.js":"55","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js":"56","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js":"57","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js":"58","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js":"59","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Curriculum.js":"60","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\InsertCurriculum.js":"61","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Calendar.js":"62","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\Statement.js":"63","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js":"64","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js":"65","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js":"66","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js":"67","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\HR.js":"68","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryEdit.js":"69","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryList.js":"70","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Ins_att.js":"71","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance_view.js":"72","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js":"73","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\user\\vacation.js":"74","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\user\\paymentData.js":"75","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacationApply.js":"76","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacation.js":"77","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js":"78","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\events.js":"79","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar_view.js":"80","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar.js":"81","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\PayList.js":"82","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingRecord.js":"83","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js":"84","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDelete.js":"85","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js":"86","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementUpdate.js":"87","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js":"88","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\insert\\insert.js":"89","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js":"90","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingDelete.js":"91","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js":"92","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js":"93","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Att_view.js":"94","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingUpdate.js":"95","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingAdd.js":"96","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\RequestPay.js":"97","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\CancelPay.js":"98","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailUpdate.js":"99","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js":"100","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js":"101","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js":"102","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\MasageInsert.js":"103","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js":"104","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailList.js":"105","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailCreate.js":"106","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\events.js":"107","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js":"108","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js":"109","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementAdd.js":"110","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js":"111","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js":"112","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js":"113","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js":"114","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js":"115","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js":"116","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js":"117","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailAdd.js":"118","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Stu_att.js":"119","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js":"120","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js":"121","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js":"122","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js":"123","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js":"124","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js":"125","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js":"126","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js":"127","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js":"128","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js":"129","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js":"130","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js":"131","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js":"132","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js":"133","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js":"134","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js":"135","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js":"136","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js":"137","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js":"138","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js":"139","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js":"140","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js":"141","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js":"142","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js":"143","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js":"144","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js":"145","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js":"146","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js":"147","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js":"148","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js":"149","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\RegisterEmployee.js":"150","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js":"151","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js":"152","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js":"153","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js":"154","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js":"155","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js":"156","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js":"157","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js":"158","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js":"159","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js":"160","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js":"161","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js":"162","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\login\\login.js":"163"},{"size":744,"mtime":1607084676639,"results":"164","hashOfConfig":"165"},{"size":1470,"mtime":1613997782520,"results":"166","hashOfConfig":"165"},{"size":340,"mtime":1607084676645,"results":"167","hashOfConfig":"165"},{"size":1476,"mtime":1607084676640,"results":"168","hashOfConfig":"165"},{"size":4813,"mtime":1607084676644,"results":"169","hashOfConfig":"165"},{"size":4074,"mtime":1607084676631,"results":"170","hashOfConfig":"165"},{"size":438,"mtime":1607084676637,"results":"171","hashOfConfig":"165"},{"size":1338,"mtime":1612879367271,"results":"172","hashOfConfig":"165"},{"size":2944,"mtime":1612879367273,"results":"173","hashOfConfig":"165"},{"size":1357,"mtime":1612879367272,"results":"174","hashOfConfig":"165"},{"size":987,"mtime":1607084676633,"results":"175","hashOfConfig":"165"},{"size":617,"mtime":1607084676639,"results":"176","hashOfConfig":"165"},{"size":3832,"mtime":1613996653888,"results":"177","hashOfConfig":"165"},{"size":2311,"mtime":1607084676637,"results":"178","hashOfConfig":"165"},{"size":1089,"mtime":1616321142968,"results":"179","hashOfConfig":"165"},{"size":2070,"mtime":1613996653887,"results":"180","hashOfConfig":"165"},{"size":2612,"mtime":1607084676636,"results":"181","hashOfConfig":"165"},{"size":588,"mtime":1607084676634,"results":"182","hashOfConfig":"165"},{"size":3005,"mtime":1616321142995,"results":"183","hashOfConfig":"165"},{"size":4304,"mtime":1616321142930,"results":"184","hashOfConfig":"165"},{"size":6421,"mtime":1616321142949,"results":"185","hashOfConfig":"165"},{"size":1503,"mtime":1613996653889,"results":"186","hashOfConfig":"165"},{"size":14719,"mtime":1616321838089,"results":"187","hashOfConfig":"165"},{"size":2024,"mtime":1616325268660,"results":"188","hashOfConfig":"165"},{"size":628,"mtime":1616322541055,"results":"189","hashOfConfig":"165"},{"size":283,"mtime":1612879367319,"results":"190","hashOfConfig":"165"},{"size":895,"mtime":1608869722803,"results":"191","hashOfConfig":"165"},{"size":262,"mtime":1612879367320,"results":"192","hashOfConfig":"165"},{"size":263,"mtime":1612879367318,"results":"193","hashOfConfig":"165"},{"size":4521,"mtime":1613996653901,"results":"194","hashOfConfig":"165"},{"size":272,"mtime":1612879367304,"results":"195","hashOfConfig":"165"},{"size":4760,"mtime":1613996758477,"results":"196","hashOfConfig":"165"},{"size":1740,"mtime":1612879367302,"results":"197","hashOfConfig":"165"},{"size":249,"mtime":1612879367219,"results":"198","hashOfConfig":"165"},{"size":256,"mtime":1612879367221,"results":"199","hashOfConfig":"165"},{"size":244,"mtime":1608869722808,"results":"200","hashOfConfig":"165"},{"size":261,"mtime":1612879367222,"results":"201","hashOfConfig":"165"},{"size":12331,"mtime":1612879367216,"results":"202","hashOfConfig":"165"},{"size":1157,"mtime":1613996653909,"results":"203","hashOfConfig":"165"},{"size":3483,"mtime":1608869722816,"results":"204","hashOfConfig":"165"},{"size":2028,"mtime":1608869722815,"results":"205","hashOfConfig":"165"},{"size":3136,"mtime":1608869722814,"results":"206","hashOfConfig":"165"},{"size":3669,"mtime":1608869722813,"results":"207","hashOfConfig":"165"},{"size":967,"mtime":1612879367307,"results":"208","hashOfConfig":"165"},{"size":1659,"mtime":1608869722816,"results":"209","hashOfConfig":"165"},{"size":2489,"mtime":1612879367295,"results":"210","hashOfConfig":"165"},{"size":4992,"mtime":1612879367296,"results":"211","hashOfConfig":"165"},{"size":2771,"mtime":1612879367295,"results":"212","hashOfConfig":"165"},{"size":2786,"mtime":1612879367278,"results":"213","hashOfConfig":"165"},{"size":2230,"mtime":1612879367296,"results":"214","hashOfConfig":"165"},{"size":6297,"mtime":1612879367280,"results":"215","hashOfConfig":"165"},{"size":6657,"mtime":1612879367281,"results":"216","hashOfConfig":"165"},{"size":5138,"mtime":1612879367279,"results":"217","hashOfConfig":"165"},{"size":3900,"mtime":1613996653895,"results":"218","hashOfConfig":"165"},{"size":4370,"mtime":1613996653896,"results":"219","hashOfConfig":"165"},{"size":8208,"mtime":1613019882032,"results":"220","hashOfConfig":"165"},{"size":2011,"mtime":1612879367292,"results":"221","hashOfConfig":"165"},{"size":13871,"mtime":1612879367293,"results":"222","hashOfConfig":"165"},{"size":13360,"mtime":1612879367291,"results":"223","hashOfConfig":"165"},{"size":2511,"mtime":1613996758418,"results":"224","hashOfConfig":"165"},{"size":5062,"mtime":1613996758419,"results":"225","hashOfConfig":"165"},{"size":2541,"mtime":1613996758418,"results":"226","hashOfConfig":"165"},{"size":3259,"mtime":1616320977656,"results":"227","hashOfConfig":"165"},{"size":2776,"mtime":1608869722828,"results":"228","hashOfConfig":"165"},{"size":4732,"mtime":1616320977654,"results":"229","hashOfConfig":"165"},{"size":3175,"mtime":1613996653908,"results":"230","hashOfConfig":"165"},{"size":6784,"mtime":1616320977655,"results":"231","hashOfConfig":"165"},{"size":417,"mtime":1612879367222,"results":"232","hashOfConfig":"165"},{"size":3735,"mtime":1613996758411,"results":"233","hashOfConfig":"165"},{"size":4255,"mtime":1613996758412,"results":"234","hashOfConfig":"165"},{"size":4720,"mtime":1613996758413,"results":"235","hashOfConfig":"165"},{"size":1474,"mtime":1613019882025,"results":"236","hashOfConfig":"165"},{"size":1831,"mtime":1613996653891,"results":"237","hashOfConfig":"165"},{"size":9163,"mtime":1612879367321,"results":"238","hashOfConfig":"165"},{"size":2180,"mtime":1613996653903,"results":"239","hashOfConfig":"165"},{"size":8746,"mtime":1616320977663,"results":"240","hashOfConfig":"165"},{"size":10350,"mtime":1616320977662,"results":"241","hashOfConfig":"165"},{"size":2534,"mtime":1616322891458,"results":"242","hashOfConfig":"165"},{"size":129,"mtime":1612879367212,"results":"243","hashOfConfig":"165"},{"size":2975,"mtime":1612879367221,"results":"244","hashOfConfig":"165"},{"size":9451,"mtime":1612879367220,"results":"245","hashOfConfig":"165"},{"size":7347,"mtime":1613996653893,"results":"246","hashOfConfig":"165"},{"size":5408,"mtime":1612879367284,"results":"247","hashOfConfig":"165"},{"size":960,"mtime":1613019882034,"results":"248","hashOfConfig":"165"},{"size":1912,"mtime":1613996653905,"results":"249","hashOfConfig":"165"},{"size":7019,"mtime":1612879367298,"results":"250","hashOfConfig":"165"},{"size":7158,"mtime":1616320977661,"results":"251","hashOfConfig":"165"},{"size":5102,"mtime":1613019882022,"results":"252","hashOfConfig":"165"},{"size":9994,"mtime":1613996653902,"results":"253","hashOfConfig":"165"},{"size":60,"mtime":1607084676641,"results":"254","hashOfConfig":"165"},{"size":2119,"mtime":1612879367284,"results":"255","hashOfConfig":"165"},{"size":2615,"mtime":1612879367212,"results":"256","hashOfConfig":"165"},{"size":28924,"mtime":1613996653891,"results":"257","hashOfConfig":"165"},{"size":14441,"mtime":1613019882024,"results":"258","hashOfConfig":"165"},{"size":4947,"mtime":1612879367285,"results":"259","hashOfConfig":"165"},{"size":4388,"mtime":1612879367283,"results":"260","hashOfConfig":"165"},{"size":1471,"mtime":1613996653893,"results":"261","hashOfConfig":"165"},{"size":739,"mtime":1613996653892,"results":"262","hashOfConfig":"165"},{"size":2359,"mtime":1613996653906,"results":"263","hashOfConfig":"165"},{"size":5554,"mtime":1612879367300,"results":"264","hashOfConfig":"165"},{"size":5294,"mtime":1612879367299,"results":"265","hashOfConfig":"165"},{"size":2011,"mtime":1612879367299,"results":"266","hashOfConfig":"165"},{"size":512,"mtime":1613996653886,"results":"267","hashOfConfig":"165"},{"size":608,"mtime":1607084676641,"results":"268","hashOfConfig":"165"},{"size":1824,"mtime":1616320977660,"results":"269","hashOfConfig":"165"},{"size":305,"mtime":1616320977659,"results":"270","hashOfConfig":"165"},{"size":125,"mtime":1612879367233,"results":"271","hashOfConfig":"165"},{"size":1998,"mtime":1613019882033,"results":"272","hashOfConfig":"165"},{"size":6943,"mtime":1612879367308,"results":"273","hashOfConfig":"165"},{"size":6113,"mtime":1616320977657,"results":"274","hashOfConfig":"165"},{"size":7818,"mtime":1613019882027,"results":"275","hashOfConfig":"165"},{"size":6381,"mtime":1613019882031,"results":"276","hashOfConfig":"165"},{"size":6046,"mtime":1613019882030,"results":"277","hashOfConfig":"165"},{"size":2014,"mtime":1612879367309,"results":"278","hashOfConfig":"165"},{"size":2019,"mtime":1612879367288,"results":"279","hashOfConfig":"165"},{"size":6339,"mtime":1612879367289,"results":"280","hashOfConfig":"165"},{"size":5990,"mtime":1612879367288,"results":"281","hashOfConfig":"165"},{"size":2016,"mtime":1616320977658,"results":"282","hashOfConfig":"165"},{"size":7206,"mtime":1612879367225,"results":"283","hashOfConfig":"165"},{"size":5218,"mtime":1613996758414,"results":"284","hashOfConfig":"165"},{"size":5574,"mtime":1613996758414,"results":"285","hashOfConfig":"165"},{"size":6632,"mtime":1613996758415,"results":"286","hashOfConfig":"165"},{"size":5454,"mtime":1613996758416,"results":"287","hashOfConfig":"165"},{"size":12671,"mtime":1612879367276,"results":"288","hashOfConfig":"165"},{"size":7178,"mtime":1612879367275,"results":"289","hashOfConfig":"165"},{"size":3813,"mtime":1612879367274,"results":"290","hashOfConfig":"165"},{"size":3697,"mtime":1612879367267,"results":"291","hashOfConfig":"165"},{"size":999,"mtime":1612879367263,"results":"292","hashOfConfig":"165"},{"size":11236,"mtime":1612879367268,"results":"293","hashOfConfig":"165"},{"size":6087,"mtime":1612879367266,"results":"294","hashOfConfig":"165"},{"size":613,"mtime":1612879367264,"results":"295","hashOfConfig":"165"},{"size":5994,"mtime":1612879367259,"results":"296","hashOfConfig":"165"},{"size":629,"mtime":1612879367263,"results":"297","hashOfConfig":"165"},{"size":6366,"mtime":1612879367255,"results":"298","hashOfConfig":"165"},{"size":33892,"mtime":1612879367256,"results":"299","hashOfConfig":"165"},{"size":14022,"mtime":1612879367253,"results":"300","hashOfConfig":"165"},{"size":16914,"mtime":1612879367254,"results":"301","hashOfConfig":"165"},{"size":2816,"mtime":1612879367251,"results":"302","hashOfConfig":"165"},{"size":5826,"mtime":1613996758421,"results":"303","hashOfConfig":"165"},{"size":2315,"mtime":1612879367246,"results":"304","hashOfConfig":"165"},{"size":25145,"mtime":1612879367249,"results":"305","hashOfConfig":"165"},{"size":9733,"mtime":1612879367245,"results":"306","hashOfConfig":"165"},{"size":3011,"mtime":1612879367247,"results":"307","hashOfConfig":"165"},{"size":3069,"mtime":1612879367248,"results":"308","hashOfConfig":"165"},{"size":5977,"mtime":1612879367244,"results":"309","hashOfConfig":"165"},{"size":13135,"mtime":1612879367243,"results":"310","hashOfConfig":"165"},{"size":2156,"mtime":1612879367241,"results":"311","hashOfConfig":"165"},{"size":52740,"mtime":1612879367240,"results":"312","hashOfConfig":"165"},{"size":9481,"mtime":1612879367239,"results":"313","hashOfConfig":"165"},{"size":3829,"mtime":1613996653898,"results":"314","hashOfConfig":"165"},{"size":7017,"mtime":1612879367237,"results":"315","hashOfConfig":"165"},{"size":18597,"mtime":1612879367235,"results":"316","hashOfConfig":"165"},{"size":1795,"mtime":1612879367234,"results":"317","hashOfConfig":"165"},{"size":5265,"mtime":1612879367250,"results":"318","hashOfConfig":"165"},{"size":5513,"mtime":1612879367269,"results":"319","hashOfConfig":"165"},{"size":1620,"mtime":1612879367257,"results":"320","hashOfConfig":"165"},{"size":3446,"mtime":1612879367258,"results":"321","hashOfConfig":"165"},{"size":4208,"mtime":1612879367277,"results":"322","hashOfConfig":"165"},{"size":4922,"mtime":1612879367277,"results":"323","hashOfConfig":"165"},{"size":380,"mtime":1608869722829,"results":"324","hashOfConfig":"165"},{"size":6949,"mtime":1607084676632,"results":"325","hashOfConfig":"165"},{"size":6963,"mtime":1607084676632,"results":"326","hashOfConfig":"165"},{"size":3575,"mtime":1616321142921,"results":"327","hashOfConfig":"165"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},"1oxt2fs",{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"330"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"330"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"330"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"330"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"330"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"330"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"330"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"330"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"330"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"330"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"330"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"330"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"330"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"330"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"330"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"330"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"330"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"330"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"330"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"330"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"330"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"330"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"330"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"330"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"330"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"330"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"330"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"330"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"330"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"330"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"330"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"330"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"330"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"330"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"330"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"330"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"330"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"330"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"330"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"330"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"330"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"330"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"330"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"330"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"330"},"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\index.js",[],["700","701"],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\App.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\store.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js",["702"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Masage from './masage'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst id=window.sessionStorage.no;\r\n\r\nconst TheHeaderDropdownMssg = () => {\r\n  const [inputs, setInputs] = useState({\r\n    masageList: [],\r\n    reset: 0\r\n  });\r\n\r\n  const { masageList, reset } = inputs;\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []); \r\n\r\n\r\n  const getData = () =>{\r\n    axios.get(\"http://localhost:8080/masage/\"+id)\r\n      .then(res => {\r\n        console.log(res)\r\n        setInputs({\r\n          masageList:res.data.masageList\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  const masageClick=(no)=>{\r\n    axios.put(\"http://localhost:8080/masage/\"+no+\"/\"+window.sessionStorage.getItem(\"no\"))\r\n        .then(res => {\r\n          console.log(res)\r\n        })\r\n        .catch(res => console.log(res))\r\n  }\r\n\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-item mx-2\"\r\n      direction=\"down\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <CIcon name=\"cil-envelope-open\" /><CBadge shape=\"pill\" color=\"info\">{masageList.length}</CBadge>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        <CDropdownItem\r\n          header\r\n          tag=\"div\"\r\n          color=\"light\"\r\n        >\r\n          <strong>You have messages</strong>\r\n        </CDropdownItem>\r\n        {masageList.map((index)=>{\r\n          return(\r\n            <CDropdownItem href={\"#/\"+index.link} onClick={()=>{masageClick(index.no);getData()}}>{/*href */}\r\n            <Masage\r\n              no={index.no}\r\n              link={index.link} name={index.to} time={index.day}\r\n              title={index.title} contents={index.contents}\r\n            />\r\n            </CDropdownItem>\r\n          )\r\n        })}\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdownMssg","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js",["703"],"import React from 'react'\nimport CIcon from '@coreui/icons-react'\n\nexport default [\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['회사 일정']\n  },\n  {\n    _tag: 'CSidebarNavItem',\n    name: '회사 일정',\n    to: '/Calendar',\n    icon: 'cil-calendar'\n  },\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['직원']\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: '직원(데스크)',\n    route: '/base',\n    icon: 'cil-drop',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: '수업관리',\n        to: '/lecture',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: '상담관리',\n        to: '/consult',\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: '수강료결제',\n        to: '/searchStudent',\n      },\n    ]},\n    {\n      _tag: 'CSidebarNavDropdown',\n      name: '직원(재무)',\n      route: '/base',\n      icon: 'cil-drop',\n      _children: [\n        {\n          _tag: 'CSidebarNavItem',\n          name: '수납관리',\n          to: '/receive',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: '전표관리',\n          to: '/statement',\n        },\n      ]},\n      {\n        _tag: 'CSidebarNavDropdown',\n        name: '직원(인사)',\n        route: '/base',\n        icon: 'cil-drop',\n        _children: [\n          {\n            _tag: 'CSidebarNavItem',\n            name: '공지사항관리',\n            to: '/notice',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: '지점관리',\n            to: '/branch',\n          },\n        ]},\n\n  //템플릿\n  {\n    _tag: 'CSidebarNavTitle',\n    _children: ['Components']\n  },\n  {\n    _tag: 'CSidebarNavDropdown',\n    name: '템플릿',\n    route: '/base',\n    icon: 'cil-puzzle',\n    _children: [\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Login',\n        to: '/login',\n        icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\n        badge: {\n          color: 'info',\n          text: 'NEW',\n        }\n      },\n      {\n      _tag: 'CSidebarNavDropdown',\n      name: 'Base',\n      route: '/base',\n      icon: 'cil-puzzle',\n      _children: [\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Breadcrumb',\n          to: '/base/breadcrumbs',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Cards',\n          to: '/base/cards',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Carousel',\n          to: '/base/carousels',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Collapse',\n          to: '/base/collapses',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Forms',\n          to: '/base/forms',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Jumbotron',\n          to: '/base/jumbotrons',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'List group',\n          to: '/base/list-groups',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Navs',\n          to: '/base/navs',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Navbars',\n          to: '/base/navbars',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Pagination',\n          to: '/base/paginations',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Popovers',\n          to: '/base/popovers',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Progress',\n          to: '/base/progress-bar',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Switches',\n          to: '/base/switches',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Tables',\n          to: '/base/tables',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Tabs',\n          to: '/base/tabs',\n        },\n        {\n          _tag: 'CSidebarNavItem',\n          name: 'Tooltips',\n          to: '/base/tooltips',\n        },\n      ],\n    },\n      {\n        _tag: 'CSidebarNavDropdown',\n        name: 'Buttons',\n        route: '/buttons',\n        icon: 'cil-cursor',\n        _children: [\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Buttons',\n            to: '/buttons/buttons',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Brand buttons',\n            to: '/buttons/brand-buttons',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Buttons groups',\n            to: '/buttons/button-groups',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Dropdowns',\n            to: '/buttons/button-dropdowns',\n          }\n        ],\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Charts',\n        to: '/charts',\n        icon: 'cil-chart-pie'\n      },\n      {\n        _tag: 'CSidebarNavDropdown',\n        name: 'Icons',\n        route: '/icons',\n        icon: 'cil-star',\n        _children: [\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'CoreUI Free',\n            to: '/icons/coreui-icons',\n            badge: {\n              color: 'success',\n              text: 'NEW',\n            },\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'CoreUI Flags',\n            to: '/icons/flags',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'CoreUI Brands',\n            to: '/icons/brands',\n          },\n        ],\n      },\n      {\n        _tag: 'CSidebarNavDropdown',\n        name: 'Notifications',\n        route: '/notifications',\n        icon: 'cil-bell',\n        _children: [\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Alerts',\n            to: '/notifications/alerts',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Badges',\n            to: '/notifications/badges',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Modal',\n            to: '/notifications/modals',\n          },\n          {\n            _tag: 'CSidebarNavItem',\n            name: 'Toaster',\n            to: '/notifications/toaster'\n          }\n        ]\n      },\n      {\n        _tag: 'CSidebarNavItem',\n        name: 'Widgets',\n        to: '/widgets',\n        icon: 'cil-calculator',\n        badge: {\n          color: 'info',\n          text: 'NEW',\n        },\n      },]\n  }\n]\n\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\masage.js",["704","705","706"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CImg\r\n} from '@coreui/react'\r\n\r\nconst Mssg = (props) => {\r\n\r\n  var arr = []\r\n  for(var i=0;i<30;i++){\r\n    arr.push(i);\r\n  }\r\n  return (\r\n    <div>\r\n          <div className=\"message\">\r\n            <div className=\"pt-3 mr-3 float-left\">\r\n              <div className=\"c-avatar\">\r\n                <CImg \r\n                  src={'avatars/7.jpg'}\r\n                  className=\"c-avatar-img\"\r\n                  alt=\"admin@bootstrapmaster.com\"\r\n                /> {/*프사 */}\r\n                <span className=\"c-avatar-status bg-success\"></span>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <small className=\"text-muted\">{props.to}</small>{/*이름 */}\r\n              <small className=\"text-muted float-right mt-1\">{props.day}</small>{/**시간 */}\r\n            </div>\r\n            <div className=\"text-truncate font-weight-bold\">{/*제목 */}\r\n              <span className=\"fa fa-exclamation text-danger\"></span> {props.title}\r\n            </div>\r\n            <div className=\"small text-muted text-truncate\">{/*내용 */}\r\n              {String(props.contents).length<30?\r\n                <div>{props.contents}{arr.map(()=>{\r\n                  return(<font>&nbsp;&nbsp;</font>)\r\n                })}</div>\r\n                :\r\n                <div>{props.contents}</div>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Mssg","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js",["707"],"import React from 'react';\nimport RegisterEmployee from \"./views/employee/RegisterEmployee\";\n\nconst Toaster = React.lazy(() => import('./views/Template/notifications/toaster/Toaster'));\nconst Tables = React.lazy(() => import('./views/Template/base/tables/Tables'));\n\nconst Breadcrumbs = React.lazy(() => import('./views/Template/base/breadcrumbs/Breadcrumbs'));\nconst Cards = React.lazy(() => import('./views/Template/base/cards/Cards'));\nconst Carousels = React.lazy(() => import('./views/Template/base/carousels/Carousels'));\nconst Collapses = React.lazy(() => import('./views/Template/base/collapses/Collapses'));\nconst BasicForms = React.lazy(() => import('./views/Template/base/forms/BasicForms'));\nconst Jumbotrons = React.lazy(() => import('./views/Template/base/jumbotrons/Jumbotrons'));\nconst ListGroups = React.lazy(() => import('./views/Template/base/list-groups/ListGroups'));\nconst Navbars = React.lazy(() => import('./views/Template/base/navbars/Navbars'));\nconst Navs = React.lazy(() => import('./views/Template/base/navs/Navs'));\nconst Paginations = React.lazy(() => import('./views/Template/base/paginations/Pagnations'));\nconst Popovers = React.lazy(() => import('./views/Template/base/popovers/Popovers'));\nconst ProgressBar = React.lazy(() => import('./views/Template/base/progress-bar/ProgressBar'));\nconst Switches = React.lazy(() => import('./views/Template/base/switches/Switches'));\n\nconst Tabs = React.lazy(() => import('./views/Template/base/tabs/Tabs'));\nconst Tooltips = React.lazy(() => import('./views/Template/base/tooltips/Tooltips'));\nconst BrandButtons = React.lazy(() => import('./views/Template/buttons/brand-buttons/BrandButtons'));\nconst ButtonDropdowns = React.lazy(() => import('./views/Template/buttons/button-dropdowns/ButtonDropdowns'));\nconst ButtonGroups = React.lazy(() => import('./views/Template/buttons/button-groups/ButtonGroups'));\nconst Buttons = React.lazy(() => import('./views/Template/buttons/buttons/Buttons'));\nconst Charts = React.lazy(() => import('./views/Template/charts/Charts'));\n//const Dashboard = React.lazy(() => import('./views/Template/dashboard/Dashboard'));\nconst CoreUIIcons = React.lazy(() => import('./views/Template/icons/coreui-icons/CoreUIIcons'));\nconst Flags = React.lazy(() => import('./views/Template/icons/flags/Flags'));\nconst Brands = React.lazy(() => import('./views/Template/icons/brands/Brands'));\nconst Alerts = React.lazy(() => import('./views/Template/notifications/alerts/Alerts'));\nconst Badges = React.lazy(() => import('./views/Template/notifications/badges/Badges'));\nconst Modals = React.lazy(() => import('./views/Template/notifications/modals/Modals'));\nconst Colors = React.lazy(() => import('./views/Template/theme/colors/Colors'));\nconst Typography = React.lazy(() => import('./views/Template/theme/typography/Typography'));\nconst Widgets = React.lazy(() => import('./views/Template/widgets/Widgets'));\n\n//세호\nconst Students = React.lazy(() => import('./views/Student/Students'));\nconst Student = React.lazy(() => import('./views/Student/Student'));\nconst Ins_stu = React.lazy(() => import('./views/Student/Ins_stu'));\nconst Edit_stu = React.lazy(() => import('./views/Student/Edit_stu'));\nconst Stu_att = React.lazy(() => import('./views/Stu_Att/Stu_att'));\nconst Ins_att = React.lazy(() => import('./views/Stu_Att/Ins_att'));\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\n\nconst HR = React.lazy(() => import('./views/HR/HR'));\nconst Sal_list = React.lazy(() => import('./views/HR/SalaryList'));\nconst Sal_edit = React.lazy(() => import('./views/HR/SalaryEdit'));\nconst Teacher = React.lazy(() => import('./views/Teacher/Calendar'));\nconst Curriculum = React.lazy(() => import('./views/Teacher/Curriculum'));\nconst InsertCurriculum = React.lazy(() => import('./views/Teacher/InsertCurriculum'));\n\n/*-여진--------------------------*/\nconst Lectures = React.lazy(() => import('./views/lecture/Lectures'));\nconst Lecture = React.lazy(() => import('./views/lecture/Lecture'));\nconst LectureAdd = React.lazy(() => import('./views/lecture/LectureAdd'));\nconst LectureDelete = React.lazy(() => import('./views/lecture/LectureDelete'));\nconst LectureUpdate = React.lazy(() => import('./views/lecture/LectureUpdate'));\n\nconst Score = React.lazy(() => import('./views/score/Score'));\nconst Counseling = React.lazy(() => import('./views/counseling/Counseling'));\n\nconst SearchStudent = React.lazy(() => import('./views/Pay/SearchStudent'));\nconst Statement = React.lazy(() => import('./views/statement/Statement'));\n\nconst login = React.lazy(() => import('./views/login/login'));\n/*-------------------------------*/\n\n// ------------@최인아\n// ------------상담\nconst Consults = React.lazy(() => import('./views/consult/Consults'));\nconst Consult = React.lazy(() => import('./views/consult/Consult'));\nconst ConsultInsert = React.lazy(() => import('./views/consult/ConsultInsert'));\nconst ConsultUpdate = React.lazy(() => import('./views/consult/ConsultUpdate'));\n// ------------공지사항\nconst Notices = React.lazy(() => import('./views/notice/Notices'));\nconst Notice = React.lazy(() => import('./views/notice/Notice'));\nconst NoticeWrite = React.lazy(() => import('./views/notice/NoticeWrite'));\nconst NoticeUpdate = React.lazy(() => import('./views/notice/NoticeUpdate'));\n// ------------수납관리\nconst Receive = React.lazy(() => import('./views/receive/receive'));\n// ------------@최인아\nconst Branches = React.lazy(() => import('./views/branch/Branches'));\nconst Branch = React.lazy(() => import('./views/branch/Branch'));\nconst BranchAdd = React.lazy(() => import('./views/branch/BranchAdd'));\nconst BranchDelete = React.lazy(() => import('./views/branch/BranchDelete'));\nconst BranchUpdate = React.lazy(() => import('./views/branch/BranchUpdate'));\n// ------------박수민\nconst Attendance = React.lazy(() => import('./views/Attendance/index'));\nconst Calendar = React.lazy(() => import('./views/Calendar/index'));\nconst Calendar2 = React.lazy(() => import('./views/Calendar/index_view'));\nconst attUpdate = React.lazy(() => import('./views/Attendance/AttUpdate'));\nconst sessionLog = React.lazy(() => import('./views/users/sessionLog'));\nconst Attendance_user = React.lazy(() => import('./views/Attendance/index_view'));\nconst vacation = React.lazy(() => import('./views/vacation/index'));\nconst vacation_user = React.lazy(() => import('./views/vacation/index_user'));\nconst payment = React.lazy(() => import('./views/payment/index'));\nconst adpayment = React.lazy(() => import('./views/payment/admin/paymentData'));\nconst adpaymentget = React.lazy(() => import('./views/payment/admin/getPayment'));\nconst test = React.lazy(() => import('./suminCP/calendar'));\nconst paymentget = React.lazy(() => import('./views/payment/getPayment/getPayment'));\nconst vacationApply = React.lazy(() => import('./views/vacation/index_apply'));\n// -------------박수민\n\n//start Employee\nconst Employee = React.lazy(() => import('./views/employee/Employee'));\nconst SaveEmployee = React.lazy(() => import('./views/employee/RegisterEmployee'));\nconst StandByAuth = React.lazy(() => import('./views/employee/StandByAuth'));\n//end Employee\n\nconst routes = [\n  {path: '/', exact: true, name: 'Home'},\n // {path: '/dashboard', name: 'Dashboard', component: Dashboard},\n  {path: '/theme', name: 'Theme', component: Colors, exact: true},\n  {path: '/theme/colors', name: 'Colors', component: Colors},\n  {path: '/theme/typography', name: 'Typography', component: Typography},\n  {path: '/base', name: 'Base', component: Cards, exact: true},\n  {path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs},\n  {path: '/base/cards', name: 'Cards', component: Cards},\n  {path: '/base/carousels', name: 'Carousel', component: Carousels},\n  {path: '/base/collapses', name: 'Collapse', component: Collapses},\n  {path: '/base/forms', name: 'Forms', component: BasicForms},\n  {path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons},\n  {path: '/base/list-groups', name: 'List Groups', component: ListGroups},\n  {path: '/base/navbars', name: 'Navbars', component: Navbars},\n  {path: '/base/navs', name: 'Navs', component: Navs},\n  {path: '/base/paginations', name: 'Paginations', component: Paginations},\n  {path: '/base/popovers', name: 'Popovers', component: Popovers},\n  {path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar},\n  {path: '/base/switches', name: 'Switches', component: Switches},\n  {path: '/base/tables', name: 'Tables', component: Tables},\n  {path: '/base/tabs', name: 'Tabs', component: Tabs},\n  {path: '/base/tooltips', name: 'Tooltips', component: Tooltips},\n  {path: '/buttons', name: 'Buttons', component: Buttons, exact: true},\n  {path: '/buttons/buttons', name: 'Buttons', component: Buttons},\n  {path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns},\n  {path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups},\n  {path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons},\n  {path: '/charts', name: 'Charts', component: Charts},\n  {path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons},\n  {path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons},\n  {path: '/icons/flags', name: 'Flags', component: Flags},\n  {path: '/icons/brands', name: 'Brands', component: Brands},\n  {path: '/notifications', name: 'Notifications', component: Alerts, exact: true},\n  {path: '/notifications/alerts', name: 'Alerts', component: Alerts},\n  {path: '/notifications/badges', name: 'Badges', component: Badges},\n  {path: '/notifications/modals', name: 'Modals', component: Modals},\n  {path: '/notifications/toaster', name: 'Toaster', component: Toaster},\n\n  {path: '/widgets', name: 'Widgets', component: Widgets},\n  {path: '/users', exact: true, name: 'Users', component: Users},\n  {path: '/users/:id', exact: true, name: 'User Details', component: User},\n  //세호\n  {path: '/students', exact: true, name: 'Students', component: Students},\n  {path: '/student/:no', exact: true, name: 'Students', component: Student},\n  {path: '/ins_stu', exact: true, name: 'Ins_stu', component: Ins_stu},\n  {path: '/edit_stu', exact: true, name: 'Edit_stu', component: Edit_stu},\n\n  {path: '/stu_att', exact: true, name: 'stu_att', component: Stu_att},\n  {path: '/ins_att', exact: true, name: 'ins_att', component: Ins_att},\n\n  {path: '/HR', exact: true, name: 'HR', component: HR},\n  {path: '/sal_list', exact: true, name: 'sal_list', component: Sal_list},\n  {path: '/sal_edit/:no', exact: true, name: 'sal_edit', component: Sal_edit},\n  {path: '/teacher', exact: true, name: 'teacher', component: Teacher},\n  {path: '/curriculum/:no', exact: true, name: 'teacher', component: Curriculum},\n  {path: '/insertCurriculum/:no', exact: true, name: 'teacher', component: InsertCurriculum},\n\n  /*--여진---------------------------------------*/\n  {path: '/lecture', exact: true, name: 'Lectures', component: Lectures},\n  {path: '/lecture/:id', exact: true, name: 'Lecture Details', component: Lecture},\n  {path: '/lectureAdd', exact: true, name: 'Lecture Add', component: LectureAdd},\n  {path: '/lectureDelete/:id', exact: true, name: 'Lecture Delete', component: LectureDelete},\n  {path: '/lectureUpdate', exact: true, name: 'Lecture Update', component: LectureUpdate},\n\n  {path: '/score', exact: true, name: 'Score', component: Score},\n  {path: '/counseling', exact: true, name: 'Counseling', component: Counseling},\n\n  {path: '/searchStudent', exact: true, name: 'SearchStudent', component: SearchStudent},\n  {path: '/statement', exact: true, name: 'Statement', component: Statement},\n\n\n  /*--여진---------------------------------------*/\n\n\n  // ------------@최인아\n  // ------------상담\n\n\n  {path: '/consult', exact: true, name: 'Consults', component: Consults},\n  {path: '/consult/:id', exact: true, name: 'Consult Details', component: Consult},\n  {path: '/consultInsert', exact: true, name: 'Consult Insert', component: ConsultInsert},\n  {path: '/consultUpdate', exact: true, name: 'Consult Update', component: ConsultUpdate},\n  // ------------공지사항\n  {path: '/notice/:id', exact: true, name: 'Notice Details', component: Notice},\n  {path: '/notice', exact: true, name: 'Notices', component: Notices},\n  {path: '/noticeWrite', exact: true, name: 'NoticeWrite', component: NoticeWrite},\n  {path: '/noticeUpdate', exact: true, name: 'Notice Update', component: NoticeUpdate},\n  // ------------수납관리\n  {path: '/receive', exact: true, name: 'Receive', component: Receive},\n  // ------------@최인아\n  {path: '/branch', exact: true, name: 'Branches', component: Branches},\n  {path: '/branch/:id', exact: true, name: 'Branch Details', component: Branch},\n  {path: '/branchAdd', exact: true, name: 'Branch Add', component: BranchAdd},\n  {path: '/branchDelete/:id', exact: true, name: 'Branch Delete', component: BranchDelete},\n  {path: '/branchUpdate', exact: true, name: 'Branch Update', component: BranchUpdate},\n\n  {path: '/login', exact: true, name: 'login', component: login},\n\n  // -------------박수민\n  {path: '/Attendance', exact: true, name: 'Attendance', component: Attendance},\n  {path: '/Attendance/:no', exact: true, name: 'Attendance Update', component: attUpdate},\n\n  {path: '/Calendar_admin', exact: true, name: 'Calendar', component: Calendar},\n  {path: '/Calendar', exact: true, name: 'Calendar', component: Calendar2},\n  {path: '/logintest/:log/:no/:name/:dep/:branch', exact: true, name: 'sessionLog', component: sessionLog},\n  {path: '/logintest/:log/', exact: true, name: 'sessionLog', component: sessionLog},\n  {path: '/Attendance_user', exact: true, name: 'Attendance', component: Attendance_user},\n  {path: '/vacation', exact: true, name: 'vacation', component: vacation},\n  {path: '/vacation_user', exact: true, name: 'vacation', component: vacation_user},\n  {path: '/payment', exact: true, name: 'payment', component: payment},\n  {path: '/payment/:no', exact: true, name: 'payment', component: paymentget},\n  {path: '/test', exact: true, name: 'payment', component: test},\n  {path: '/vacation_apply', exact: true, name: 'vacationApply', component: vacationApply},\n  {path: '/adpayment', exact: true, name: 'adpayment', component: adpayment},\n  {path: '/adpaymentget/:no', exact: true, name: 'adpayment', component: adpaymentget},\n  // -------------박수민\n\n  //start Employee\n  {path: '/employee', exact: true, name: 'Employee', component: Employee},\n  {path: '/saveEmployee', exact: true, name: 'SaveEmployee', component: SaveEmployee},\n  {path: '/standByAuth', exact: true, name: 'StandByAuth', component: StandByAuth}\n  //end Employee\n];\n\nexport default routes;\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js",["708","709","710","711","712","713","714","715","716"],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\StandByAuth.js",["717","718","719"],"import React, {Component} from 'react'\nimport ApiService from \"../../ApiService\";\n\n\nclass StandByAuth extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    ApiService.standByAuth().then(res => {\n      this.setState({});\n    });\n  }\n\n  render() {\n\n    const {employeeList, currentPage, size} = this.state;\n\n    return (\n      <div>\n        <h1>현재 승인 대기 중 입니다.</h1>\n        현재 승인 대기 중 입니다.\n        자세한 문의는 인사팀 또는 관리자에게 문의해주세요.\n      </div>\n    );\n  }\n}\n\nexport default StandByAuth\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_apply.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\calendar.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_user.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\getPayment\\getPayment.js",["720"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    CDataTable\r\n} from '@coreui/react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CFade,\r\n} from '@coreui/react';\r\n\r\nlet fields = [];\r\n\r\n\r\nconst PaymentData = ({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        table: \"\",\r\n        sign: \"\",\r\n        \r\n    });\r\n\r\n    const { data, table,sign } = inputs;\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const paymentCheck = () =>{\r\n        let approved = data.approved;\r\n        let player = window.sessionStorage.getItem(\"no\");\r\n        approved=String(approved).split(\"/\")\r\n        for(let i=0;i<approved.length;i++){\r\n            if(Number(player)===Number(approved[i])){\r\n                return \"결재 완\"\r\n            }      \r\n        }\r\n        return \"미 결재\"\r\n    }\r\n\r\n\r\n    const fileChangedHandler = (e) => {\r\n        const file = new FormData();\r\n        file.append( \"file\",e.target.files[0]);\r\n        file.append( \"no\",window.sessionStorage.getItem(\"no\"));\r\n        const config = {\r\n            headers: {\r\n            \"content-type\": \"multipart/form-data\"\r\n            }\r\n        };\r\n        axios.post(`http://localhost:8080/upload`, file, config);\r\n        getData();\r\n    };\r\n\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:8080/payment/\" + match.params.no+\"/\"+window.sessionStorage.getItem(\"no\"))\r\n            .then(res => {\r\n                console.log(res)\r\n\r\n                for (let i = 0; i < res.data.table.length; i++) {\r\n                    for(let l = 0; l<res.data.user.length; l++){\r\n                        if(res.data.table[i].employee_no === res.data.user[l].no){\r\n                            res.data.table[i].employee_no=res.data.user[l].name\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                for(let i=0;i<res.data.column.length;i++){\r\n                    fields.push(res.data.column[i])\r\n                }\r\n                \r\n                \r\n                setInputs({\r\n                    data: res.data.list,\r\n                    table: res.data.table,\r\n                    sign: res.data.selectSign\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n    const payment = () => {\r\n        var params = new URLSearchParams();\r\n        params.append('id', window.sessionStorage.getItem('no'));\r\n        params.append('no', data.no);\r\n        axios.post(`http://localhost:8080/payment/approved`,params)\r\n        .then(res => {\r\n            if(res.data){\r\n            alert(\"결재 되었습니다\");\r\n            window.location.reload(false);\r\n            }else{\r\n            alert(\"이미 결재했습니다.\");\r\n            }\r\n        })\r\n        .catch(res => console.log(res))       \r\n    }\r\n\r\n\r\n    var check = paymentCheck();\r\n    return (\r\n        <div>\r\n            {sign === false?\r\n                <div className=\"App\">\r\n                    <input type=\"file\"  onChange={fileChangedHandler} />\r\n                </div>:\r\n                <div>\r\n                    사인:\r\n                    <img src={process.env.PUBLIC_URL + '/sign/'+sign.filename} alt={process.env.PUBLIC_URL+\"123\"} />\r\n                    <br/>\r\n                    이미지 바꾸기<input type=\"file\"  onChange={fileChangedHandler}/>\r\n                </div>\r\n            }\r\n            <CCard>\r\n                <CCardHeader>\r\n                    <h2>{data.title}</h2>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CFade timeout={300}  tag=\"h5\" className=\"mt-3\">\r\n\r\n                        <div style={{textAlign: \"center\"}}>\r\n                            <CDataTable\r\n                                items={table}\r\n                                fields={fields}\r\n                                itemsPerPage={10}\r\n                                pagination\r\n                                />\r\n                        </div><br></br>\r\n                        <br></br>\r\n                        {data.contents}\r\n                    </CFade>\r\n                    \r\n                </CCardBody>\r\n                <CCardFooter style={{textAlign: \"right\"}}>\r\n                    <div>{check}</div>\r\n                    <CButton color=\"primary\" onClick={payment}>결재</CButton>\r\n                </CCardFooter>\r\n            </CCard>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PaymentData;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\getPayment.js",["721","722"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    CDataTable\r\n} from '@coreui/react'\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CFade,\r\n} from '@coreui/react';\r\n\r\nlet fields = [];\r\n\r\n\r\nconst PaymentData = ({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        table: \"\",\r\n        sign: \"\",\r\n        signList:[],\r\n        playerList:[]\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    \r\n\r\n    const { data, table,signList ,playerList} = inputs;\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:8080/payment/\" + match.params.no)\r\n            .then(res => {\r\n                console.log(res)\r\n                for (let i = 0; i < res.data.table.length; i++) {\r\n                    for(let l = 0; l<res.data.user.length; l++){\r\n                        if(res.data.table[i].employee_no === res.data.user[l].no){\r\n                            res.data.table[i].employee_no=res.data.user[l].name\r\n                        }\r\n                    }\r\n                }\r\n\r\n                fields = Object.keys(res.data.table[0]);\r\n                \r\n                let playList=res.data.list.player.split(\"/\");\r\n                let userList=res.data.user;\r\n  \r\n                let playerLista=[];\r\n                for(let i=0;i<playList.length;i++){\r\n                    for(let l=0;l<userList.length;l++){\r\n                        if(Number(playList[i])===Number(userList[l].no)){\r\n                            playerLista.push({\r\n                                no: playList[i],\r\n                                name: userList[l].name\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                setInputs({\r\n                    data: res.data.list,\r\n                    table: res.data.table,\r\n                    sign: res.data.selectSign,\r\n                    signList: res.data.signList,\r\n                    playerList:playerLista\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            <CCard>\r\n                <CCardHeader>\r\n                    <h2>{data.title}</h2>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CFade timeout={300}  tag=\"h5\" className=\"mt-3\">\r\n\r\n                        <div style={{width: \"100%\",textAlign: \"center\"}}>\r\n                            <CDataTable\r\n                                items={table}\r\n                                fields={fields}\r\n                                itemsPerPage={10}\r\n                                pagination\r\n                                />\r\n                        </div><br></br>\r\n                        <br></br>\r\n                        {data.contents}\r\n                    </CFade>\r\n                    \r\n                </CCardBody>\r\n                \r\n                <div>\r\n                    <table width=\"100%\" style= {{\r\n                                border:\"1px solid black\",\r\n                                padding: 10,\r\n                                textAlign: \"center\",\r\n                                }}>\r\n                        <tr style={{border:\"1px solid black\"}}>\r\n                            {playerList&&playerList.map((i)=>{\r\n                                return(<th style={{border:\"1px solid black\"}}>{i.name} 님</th>)\r\n                            })}\r\n                        </tr>\r\n                        <tr style={{border:\"1px solid black\"}}>\r\n                            {playerList&&playerList.map((p) => {\r\n                                for(var i= 0;i<signList.length;i++){\r\n                                    if(Number(p.no)===Number(signList[i].employee_no)){\r\n                                        return(<td style={{border:\"1px solid black\"}}>\r\n                                            <img src={process.env.PUBLIC_URL+'/sign/'+signList[i].filename} alt=\"copy url\"  width=\"40\"height=\"40\"/>\r\n                                            </td>);\r\n                                    }else{\r\n                                        return(<td style={{border:\"1px solid black\"}}>결재안함</td>)\r\n                                    }\r\n                                }\r\n                                if(signList.length===0){\r\n                                    return(<td style={{border:\"1px solid black\"}}>결재안함</td>)\r\n                                }\r\n                            })}\r\n                        </tr>\r\n                    </table>\r\n                  \r\n                </div>\r\n\r\n                \r\n            </CCard>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PaymentData;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\paymentData.js",["723","724"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport {  Link } from 'react-router-dom';\r\n\r\nlet fields = ['no','employee_no', 'title', 'day'];\r\n\r\n\r\nconst PaymentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        page: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, []); \r\n\r\n    const { data, page } = inputs;\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n        });\r\n    };\r\n\r\n    \r\n    const getData = () =>{\r\n      axios.get(\"http://localhost:8080/adpayment\")\r\n        .then(res => {\r\n          console.log(res);\r\n          let list = res.data.list;\r\n          let user = res.data.user;\r\n          for(let i=0;i<list.length;i++){\r\n            for(let l=0;l<user.length;l++){\r\n              if(list[i].employee_no===user[l].no){\r\n                list[i].employee_no=user[l].name;\r\n              }\r\n            }\r\n          }\r\n          setInputs({\r\n            data: list,\r\n            page: res.data.page\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n          <CDataTable\r\n              items={data}\r\n              fields={fields}\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'title':\r\n                  (item)=>(\r\n                    <td>\r\n                      <Link to={`/adpaymentget/${item.no}`}> {item.title}</Link>\r\n                    </td>\r\n                  ),\r\n                  \r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n} \r\nexport default PaymentData;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index_view.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index_view.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js",["725"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, withStyles, Grid} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CTextarea} from '@coreui/react'\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n    display: 'none'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 210,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nclass NoticeWrite extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.noticeWrite = this.noticeWrite.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.noticeWrite()\r\n    this.setState({\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.title] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let nextState = {};\r\n    nextState[event.target.name] = event.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  noticeWrite() {\r\n    axios({\r\n      url: 'http://localhost:8080/notice',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        section: this.state.section,\r\n        title: this.state.title,\r\n        content: this.state.content\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      section: '',\r\n      title : '',\r\n      content: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container justify=\"flex-end\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>글쓰기</Button>\r\n        </Grid>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} fullWidth={true} maxWidth = {'xs'}>\r\n          <DialogTitle>공 지 사 항</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Grid>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">구분</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={this.state.section}\r\n                    onChange={this.handleChange}\r\n                    label=\"구분\"\r\n                    inputProps={{ name: 'section', id: 'outlined-age-native-simple',}}>\r\n                      <option aria-label=\"None\" value=\"section\" />\r\n                      <option value={\"공지\"}>공지</option>\r\n                      <option value={\"결혼\"}>결혼</option>\r\n                      <option value={\"출산\"}>출산</option>\r\n                      <option value={\"입양\"}>입양</option>\r\n                      <option value={\"사망\"}>사망</option>\r\n                </Select>\r\n              </FormControl>\r\n              </Grid>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <TextField label=\"제목\" type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/><br/>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CTextarea \r\n                      name=\"content\" \r\n                      id=\"textarea-input\" \r\n                      rows=\"9\"\r\n                      placeholder=\"...\" \r\n                      value={this.state.content} onChange={this.handleChange}\r\n                    />\r\n                  </CCol>\r\n                </CFormGroup>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>글등록</Button>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        \r\n          </Dialog>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(NoticeWrite)\r\n\r\n\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js",["726","727"],"//-----------------------\r\n// 제목 : 상담 수정\r\n// 파일명 : ConsultUpdate.js\r\n// 작성자 : 최인아\r\n// 작성일 : \r\n//-----------------------\r\nimport React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, withStyles} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CInputCheckbox, CLabel } from \"@coreui/react\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n});\r\n\r\nclass ConsultUpdate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.ConsultList.name,\r\n      hp: this.props.ConsultList.hp,\r\n      schedule: this.props.ConsultList.schedule,\r\n      memo: this.props.ConsultList.memo,\r\n      route: this.props.ConsultList.route,\r\n      writer: this.props.ConsultList.writer\r\n    }\r\n\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.updateConsult = this.updateConsult.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.checkboxChange = this.checkboxChange.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.updateConsult()\r\n    this.setState({\r\n      name: '',\r\n      hp: '',\r\n      schedule: '',\r\n      memo: '',\r\n      route: '',\r\n      writer: ''\r\n\r\n    })\r\n    alert(\"수정되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  updateConsult() {\r\n    axios({\r\n      url: 'http://localhost:8080/consult/edit/' + this.props.ConsultList.no,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        name: this.state.name,\r\n        hp: this.state.hp,\r\n        schedule: this.state.schedule,\r\n        memo: this.state.memo,\r\n        route: this.state.route.toString(),\r\n        writer: this.state.writer\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n   checkboxChange = (e) => {\r\n     const route=this.state.route\r\n     let index\r\n     if (e.target.checked) {\r\n       route.push(e.target.value)\r\n     } else {\r\n       index = route.indexOf(e.target.value)\r\n       route.splice(index, 1)\r\n    }\r\n     this.setState({route:route})\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    let ConsultList = this.props.ConsultList;\r\n    let route = this.state.route;\r\n    console.log(ConsultList);\r\n\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n          수정\r\n        </Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>상담 수정</DialogTitle>\r\n          <DialogContent>\r\n          {/* <CFormGroup row>\r\n              <CCol md=\"9\">\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox1\" name=\"route\" value={\"CALL\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"CALL\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">CALL</CLabel>\r\n                </CFormGroup>\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox2\" name=\"route\" value={\"ONLINE\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"ONLINE\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">ONLINE</CLabel>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup> */}\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"name\">성명</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"성명\" defaultValue={ConsultList.name} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hp\">전화번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"hp\" placeholder=\"전화번호\" defaultValue={ConsultList.hp} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"schedule\">상담날짜</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"schedule\" placeholder=\"상담날짜\" defaultValue={ConsultList.schedule} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"memo\">상담내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"meom\" placeholder=\"상담내용\" defaultValue={ConsultList.memo} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"wrtier\">작성자</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"writer\" placeholder=\"작성자\" defaultValue={ConsultList.writer} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>수정완료</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ConsultUpdate)\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js",["728"],"// import React, {Component} from \"react\";\r\n// import axios from \"axios\";\r\n// import './table.css';\r\n// import ConsultInsert from \"./ConsultInsert\";\r\n// import Consult from \"./Consult\";\r\n// import { CButton, CInput } from \"@coreui/react\";\r\n\r\n// class Consults extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       keyword: '', //공백으로 지정\r\n//         consultList: \"\"\r\n//     }\r\n//     this.stateRefresh = this.stateRefresh.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n// }\r\n\r\n// handleChange(e) { //위에 지정되는 걸 변화\r\n//   this.setState({\r\n//   keyword: e.target.value\r\n// });\r\n// }\r\n\r\n//   stateRefresh() {\r\n//     this.setState({\r\n//       consultList: \"\",\r\n//     });\r\n//     this.getApi(this.state.keyword);\r\n\r\n//   }\r\n\r\n// componentDidMount() {\r\n//     this.getApi(this.state.keyword);\r\n// }\r\n\r\n// getApi = (keyword) => {\r\n//     axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n//         .then(res => {\r\n//             this.setState({\r\n//               consultList: res.data.message\r\n//             })\r\n//         })\r\n//         .catch(res => console.log(res))\r\n// }\r\n\r\n//   render() {\r\n//     const { consultList } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <header>\r\n//           <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n//           <br></br>\r\n//         </header>\r\n//         <table id=\"table1\" border=\"0\">\r\n//          <tr id=\"table1\">\r\n//            <td id=\"table1\">\r\n//              <CInput\r\n//               name=\"keyword\"\r\n//               placeholder=\"Search\"\r\n//               value={this.state.keyword}\r\n//               onChange={this.handleChange}\r\n//               class=\"w-25 p-3\"\r\n//               //class=\"form-control\"\r\n//             />&nbsp;&nbsp;&nbsp;\r\n//             <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n//                      onClick = {(e) => {\r\n//                                 this.getApi(this.state.keyword)}}>검색</CButton>\r\n//           </td>\r\n//         </tr>\r\n//       </table>\r\n//         <table>\r\n//         <thead>\r\n//           <tr>\r\n//           <td>NO</td>\r\n//             <td>name</td>\r\n//              <td>  hp  </td>\r\n//            <td>schedule</td>\r\n//             <td>memo</td>\r\n//             <td>route</td>\r\n//              <td>writer</td>\r\n//            <td>regdate</td>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//          {consultList&&consultList.map((consultdata, insertIndex) => {\r\n//             return (\r\n//             <tr key={insertIndex}>\r\n//                 <td>{consultdata.no}</td>\r\n//                 <td> <Consult stateRefresh={this.stateRefresh} id={consultdata.no}/></td>\r\n//                 <td>{consultdata.hp}</td>\r\n//                <td>{consultdata.schedule}</td>\r\n//                <td>{consultdata.memo}</td>\r\n//                 <td>{consultdata.route}</td>\r\n//                  <td>{consultdata.writer}</td>\r\n//                  <td>{consultdata.regdate}</td>\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>\r\n//       </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Consults;\r\n\r\n//-----------------------\r\n// 제목 : 상담 기록 리스트\r\n// 파일명 : Consults.js\r\n// 작성자 : 최인아\r\n//-----------------------\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { CButton, CInput } from \"@coreui/react\";\r\nimport ConsultInsert from \"./ConsultInsert\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nclass Consults extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        keyword: '', //공백으로 지정\r\n        ConsultList: \"\"\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this)\r\n    this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(e) { //위에 지정되는 걸 변화\r\n  this.setState({\r\n  keyword: e.target.value\r\n});\r\n}\r\n\r\nstateRefresh() {\r\n  this.setState({\r\n    ConsultList: \"\"\r\n  });\r\n  this.getApi(this.state.keyword);\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.getApi(this.state.keyword);\r\n}\r\n\r\ngetApi = (keyword) => {\r\n    axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n        .then(res => {\r\n            this.setState({\r\n              ConsultList: res.data.message\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n}\r\n\r\n  render() {\r\n    const { ConsultList } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <table id=\"table1\" border=\"0\">\r\n        <tr id=\"table1\">\r\n          <td id=\"table1\">\r\n            <CInput\r\n              name=\"keyword\"\r\n              placeholder=\"Search\"\r\n              value={this.state.keyword}\r\n              onChange={this.handleChange}\r\n              class=\"w-25 p-3\"\r\n              //class=\"form-control\"\r\n            />&nbsp;&nbsp;&nbsp;\r\n            <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n                     onClick = {(e) => {\r\n                                this.getApi(this.state.keyword)}}>검색</CButton>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <header>\r\n        <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n      </header>\r\n        <br></br>\r\n    <table>\r\n        <thead>\r\n            <td>NO</td>\r\n            <td>name</td>\r\n            <td>  hp  </td>\r\n            <td>schedule</td>\r\n            <td>memo</td>\r\n            <td>route</td>\r\n            <td>writer</td>\r\n            <td>regdate</td>\r\n        </thead>\r\n          <tbody>\r\n           {ConsultList&&ConsultList.map((consultdata, insertIndex) => {\r\n            return (\r\n            <tr key={insertIndex}>\r\n                <td>{consultdata.no}</td>\r\n                <td><Link to={`/consult/${consultdata.no}`}>{consultdata.name}</Link></td>\r\n                <td>{consultdata.hp}</td>\r\n                <td>{consultdata.schedule}</td>\r\n                <td>{consultdata.memo}</td>\r\n                <td>{consultdata.route}</td>\r\n                <td>{consultdata.writer}</td>\r\n                <td>{consultdata.regdate}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody> \r\n      </table>\r\n      <br></br>\r\n      <div>\r\n        <Pagination count={10} color=\"primary\" />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Consults);\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\SearchStudent.js",["729"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {CButton, CForm, CInput, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport './table.css';\r\nimport PayList from \"./PayList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass SearchStudent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      searchKeyword: \"\",\r\n      studentList:\"\",\r\n      student:\"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      searchKeyword: \"\",\r\n      studentList:\"\",\r\n      student:\"\",\r\n    });\r\n    this.getApi();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  getApi() {\r\n    console.log(\"호출\")\r\n    console.log(this.state.searchKeyword)\r\n    axios.get(\"http://localhost:8080/api/students/user?name=\"+this.state.searchKeyword)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === 'Enter') {\r\n      this.getApi();\r\n    }\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.getApi();\r\n  }\r\n  conditionSelect = (e) => {\r\n    this.setState({\r\n      student:e.target.value\r\n    })\r\n\r\n  }\r\n  render() {\r\n    const { studentList } =  this.state;\r\n\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline onSubmit={this.handleSubmit.bind(this)}>\r\n            <CSelect custom id=\"branch\">\r\n              <option value=\"name\">학생이름</option>\r\n            </CSelect>\r\n            &nbsp;&nbsp;\r\n            <CInput\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"이름 입력\"\r\n              size=\"sm\"\r\n              name=\"searchKeyword\"\r\n              value={this.state.searchKeyword}\r\n              onChange={this.handleValueChange}\r\n              onKeyPress={this.handleKeyPress.bind(this)}\r\n            />\r\n            <CButton color=\"dark\" variant=\"outline\" className=\"my-2 my-sm-0\" onClick={(e) => {\r\n              this.getApi()\r\n            }}>검색</CButton>\r\n          </CForm>\r\n\r\n        </header>\r\n        <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>no</td>\r\n            <td>name</td>\r\n            <td>hp</td>\r\n            <td>email</td>\r\n            <td>birth</td>\r\n            <td>address</td>\r\n            <td>lecture</td>\r\n            <td>gender</td>\r\n            <td>regdate</td>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList&&studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr key={insertIndex}>\r\n                <td>{itemdata.no}</td>\r\n                <td><PayList stateRefresh={this.stateRefresh} id={itemdata.no} itemdata={itemdata}/></td>\r\n                <td>{itemdata.hp}</td>\r\n                <td>{itemdata.email}</td>\r\n                <td>{itemdata.birth}</td>\r\n                <td>{itemdata.address}</td>\r\n                <td>{itemdata.lecture}</td>\r\n                <td>{itemdata.gender}</td>\r\n                <td>{itemdata.regdate}</td>\r\n\r\n              </tr>\r\n            );\r\n          })}\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다</p>\r\n          <hr></hr>\r\n\r\n          <payList/>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchStudent;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\Counseling.js",["730"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CForm, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CounselingRecord from \"./CounselingRecord\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Counseling extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: session_no,\r\n      lecture: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n    });\r\n    this.getCounseling();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getCounseling() {\r\n    axios.get(\"http://localhost:8080/api/students/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/api/students/\"+e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"0\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n          </CForm>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td>학생명</td>\r\n            <td>HP</td>\r\n            <td>Email</td>\r\n            <td>상담 기록</td>\r\n          </tr>\r\n\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                <td>{itemdata.hp}</td>\r\n                <td>{itemdata.email}</td>\r\n                <td width=\"10%\"><CounselingRecord\r\n                  stateRefresh={this.stateRefresh}\r\n                  id={itemdata.no}\r\n                  name={itemdata.name}\r\n                  lecture={this.state.lecture}\r\n                />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다.</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counseling;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js",["731"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CCol, CForm, CSelect} from \"@coreui/react\";\r\nimport {Button, Grid, IconButton} from \"@material-ui/core\";\r\nimport Exam from \"../exam/Exam\";\r\nimport ScoreEdit from \"./ScoreEdit\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ScoreTotal from \"./ScoreTotal\";\r\n\r\nclass Score extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: session_no,\r\n      lecture: \"\",\r\n      examList: \"\",\r\n      scoreArray: [],\r\n      disabled: true,\r\n      title: \"수정\",\r\n      totalWeight: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.editScore = this.editScore.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n    });\r\n    this.getLecture();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getLecture() {\r\n    axios.get(\"http://localhost:8080/api/students/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n      average:\"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/api/students/\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n          scoreArray: [],\r\n          examList: \"\",\r\n          totalWeight: \"\",\r\n          disabled: true,\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  editScore() {\r\n    axios({\r\n      url: 'http://localhost:8080/score',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        scoreArray: this.state.scoreArray,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  setData(scoreArray) {\r\n    let no\r\n    let exam\r\n    let lecture\r\n    let score\r\n    let student\r\n    let regdate = new Date();\r\n    let array = this.state.scoreArray;\r\n\r\n\r\n    scoreArray.map((scoreList) => {\r\n      exam = scoreList.exam;\r\n      lecture = scoreList.lecture;\r\n      score = scoreList.score;\r\n      student = scoreList.student;\r\n      no = scoreList.no;\r\n    })\r\n\r\n    let index = array.findIndex(isScore);\r\n    function isScore(element) {\r\n      if (element.exam === exam && element.lecture === lecture && element.student === student) {\r\n        return true;\r\n\r\n      }\r\n    }\r\n\r\n    if (score === \"\") {\r\n      score = 0;\r\n    }\r\n    if (index > -1) {\r\n      array[index].score = score;\r\n      array[index].regdate = regdate;\r\n    } else {\r\n      if (no === \"\") {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n        })\r\n      } else {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n          no: no,\r\n        })\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      scoreArray: array,\r\n    })\r\n    console.log(array)\r\n  }\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state\r\n    let name = \"수정\"\r\n    if (this.state.disabled) {\r\n      name = \"수정\"\r\n    } else {\r\n      name = \"수정완료\"\r\n    }\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"0\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n            <Grid container justify=\"flex-end\">\r\n              <Exam stateRefresh={this.stateRefresh} teacher={this.state.teacher}/>\r\n            </Grid>\r\n          </CForm>\r\n          <br/>\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td width=\"10%\">학생명</td>\r\n            {examList && examList.map((itemdata) => {\r\n              return (<td>{itemdata.name}&nbsp;({itemdata.weight}%)</td>);\r\n            })}\r\n            <td bgcolor=\"#eee8aa\">총점&nbsp;({this.state.totalWeight}%)</td>\r\n          </tr>\r\n          <tr>\r\n\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                {\r\n                  examList && examList.map((examdata) => {\r\n                    return (\r\n                      <td key={examdata.no}>\r\n                        <ScoreEdit\r\n                          id={itemdata.no}\r\n                          lecture={this.state.lecture}\r\n                          exam={examdata.no}\r\n                          setData={this.setData}\r\n                          disabled={this.state.disabled}/>\r\n                      </td>);\r\n                  })\r\n                }\r\n                <td bgcolor=\"#eee8aa\"><ScoreTotal\r\n                  id={itemdata.no}\r\n                  lecture={this.state.lecture}\r\n                  /></td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다.</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n        <br/>\r\n        <Grid container justify=\"flex-end\">\r\n          {studentList.length > 0 &&\r\n          <CCol md=\"1\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>{name}</Button>\r\n          </CCol>\r\n          }\r\n          {this.state.disabled === false &&\r\n          <Button variant=\"contained\" onClick={this.stateRefresh}>취소</Button>\r\n          }\r\n        </Grid>\r\n        <br/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Curriculum.js",["732","733","734","735","736","737","738","739"],"import React,{ useEffect,useState } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CPagination,\r\n    CForm,\r\n    CSelect,\r\n    CInput\r\n  } from '@coreui/react'\r\n\r\n\r\nlet currentPages =1;\r\nconst CurriculumData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        CurriculumList:[],\r\n        totalPages :\"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        getStudent(1);\r\n    },[]);\r\n\r\n\r\n    const {CurriculumList,totalPages} = inputs;\r\n\r\n    const getStudent =(currentPages) => {\r\n        currentPages = currentPages -1\r\n        let size = 5;\r\n        ApiService.getCurriculum(currentPages,size)\r\n            .then(res => {\r\n                console.log(res);\r\n                setInputs({\r\n                    CurriculumList : res.data.content,\r\n                    totalPages : res.data.totalPages\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n    const Paginations = (e) => {\r\n        const [currentPage, setCurrentPage] = useState(currentPages);\r\n            if(currentPages != currentPage){\r\n            currentPages = currentPage;\r\n            getStudent(currentPages)\r\n            }else{\r\n\r\n            }\r\n        return(\r\n        <>\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CPagination\r\n                        activePage={currentPage}\r\n                        pages= {totalPages}\r\n                        onActivePageChange={setCurrentPage}/>\r\n                </CCardBody>\r\n             </CCard>\r\n        </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div> \r\n        <table>\r\n        <tr><td>no</td><td>lecture</td><td>start</td><td>end</td><td>curriculum</td><td>detail</td></tr>\r\n            {CurriculumList&&CurriculumList.map((itemdata, insertIndex) => {\r\n                return (\r\n                <tr>\r\n                <td>{itemdata.no}</td>\r\n                <td>{itemdata.lecture}</td>\r\n                <td>{itemdata.start_date}</td>\r\n                <td>{itemdata.end_date}</td>\r\n                <td>{itemdata.curriculum}</td>\r\n                <td>{itemdata.detail}</td>\r\n                </tr>\r\n                );\r\n            })}\r\n            <tr><td><>\r\n                <Paginations />\r\n                </>\r\n         </td></tr>\r\n        </table>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CurriculumData;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\InsertCurriculum.js",["740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759"],"import React,{ useEffect,useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './table.css';\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n  const InsertCurriculum =({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        lectureList : [],\r\n        lecture:\"\",\r\n        start_date:\"\",\r\n        end_date:\"\",\r\n        curriculum:\"\",\r\n        detail:\"\",\r\n        no:match.params.no\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getLecture();\r\n    },[]);\r\n\r\n    const {lecture,lectureList,start_date,end_date,curriculum,detail,no} = inputs;\r\n\r\n    const getLecture = () => {\r\n        ApiService.getLecture(match.params.no)\r\n            .then(res => {\r\n                setInputs({\r\n                    lectureList : res.data.list\r\n                })\r\n                console.log(match.params.no)\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const saveCurriculum = (e) => {\r\n        e.preventDefault();\r\n        let curri= {\r\n          lecture : no,\r\n          start_date :start_date,\r\n          end_date :end_date,\r\n          curriculum : curriculum,\r\n          detail : detail,\r\n          \r\n        }\r\n        ApiService.addCurriculum(curri)\r\n          .then(res => {\r\n            alert(\"저장되었습니다.\")\r\n            history.push('/teacher');\r\n          })\r\n          .catch(err => {\r\n            console.log('saveCurriculum() 에러', err);\r\n          });\r\n    \r\n      }\r\n\r\n    const onChange = (e) => {\r\n      const { value, name } = e.target;\r\n      setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n      });\r\n\r\n    }\r\n\r\n    return (\r\n        <CCard>\r\n            <CCardBody>\r\n        <CForm>\r\n        <CFormGroup row>\r\n            <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">강의선택</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n                <CSelect custom id=\"lecture\" name=\"lecture\" value={lecture} onChange={onChange}>\r\n                    <option value=\"\">강의</option>\r\n                    {lectureList&& lectureList.map((itemdata, insertIndex) => {\r\n                        return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n            </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"date-input\">시작일</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"date\" name=\"start_date\" placeholder=\"시작일\" value={start_date} onChange={onChange} />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"date-input\">종료일</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"date\" name=\"end_date\" placeholder=\"종료일\" value={end_date} onChange={onChange} />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">교육과정</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"curriculum\" placeholder=\"교육과정\" value={curriculum} onChange={onChange} />\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"textarea-input\">교육과정상세</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CTextarea\r\n                      name=\"detail\"\r\n                      id=\"textarea-input\"\r\n                      rows=\"9\"\r\n                      placeholder=\"교육과정상세\"\r\n                      value={detail}\r\n                      onChange={onChange}\r\n                    />\r\n                  </CCol>\r\n                </CFormGroup>\r\n        </CForm>\r\n        </CCardBody>\r\n            <CCardFooter>\r\n            <CButton onClick={saveCurriculum} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n            </CCardFooter>\r\n        </CCard>\r\n    );\r\n  }\r\nexport default InsertCurriculum;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Calendar.js",["760","761","762","763","764"],"import React from 'react'\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from '@fullcalendar/list';\r\nimport events from \"./events\"\r\nimport ApiService from \"../../ApiService\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\n\r\nclass DemoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      events:\"\",\r\n      Edate:\"\",\r\n      no:2,\r\n      arr:[],\r\n      data:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    ApiService.Teacher(4)\r\n      .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              Edate : res.data.list\r\n            })\r\n            console.log(this.state.Edate.length);\r\n            for(var i=0;i<this.state.Edate.length;i++) {\r\n              this.state.arr[i] = {\r\n              id: i,\r\n              title: \"수강일\",\r\n              date: this.state.Edate[i]\r\n            } \r\n          }\r\n          this.setState({\r\n            data : this.state.arr\r\n          })\r\n        })\r\n        \r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const{data} = this.state;\r\n    const{no} = this.state;\r\n    return (\r\n      <div>\r\n        <>\r\n          <CRow>\r\n            <CCol>\r\n            <Link to={`/curriculum/${no}`}>\r\n              <CButton block color=\"primary\">교육과정 확인</CButton>\r\n            </Link>\r\n            </CCol>\r\n            <CCol>\r\n            <Link to={`/insertCurriculum/${no}`}>\r\n              <CButton block color=\"primary\">교육과정 입력</CButton>\r\n            </Link>\r\n            </CCol>\r\n            <CCol></CCol>\r\n            <CCol></CCol>\r\n            <CCol></CCol>\r\n          </CRow>\r\n          <CRow></CRow>\r\n        </>\r\n      <br></br>\r\n      <FullCalendar\r\n        defaultView=\"timeGridDay\"\r\n        headerToolbar= {{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        }}\r\n        plugins={[dayGridPlugin, timeGridPlugin,listPlugin]}\r\n        navLinks= {true} \r\n        nowIndicator= {true}\r\n        weekNumbers= {true}\r\n        weekNumberCalculation= 'ISO'\r\n        editable= {true}\r\n        selectable= {true}\r\n        dayMaxEvents= {true}\r\n        events={data}\r\n      />\r\n      </div>\r\n      )\r\n  }\r\n}\r\nexport default DemoApp","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\Statement.js",["765"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport StatementAdd from \"./StatementAdd\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport StatementUpdate from \"./StatementUpdate\";\r\nimport StatementDelete from \"./StatementDelete\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Statement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no = window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      ItemList: \"\",\r\n      searchKeyword: \"\",\r\n      condition:\"\",\r\n      user: session_no,\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      ItemList: \"\",\r\n    });\r\n    this.getApi();\r\n    this.getApi();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/statement?user=\"+this.state.user)\r\n      .then(res => {\r\n        this.setState({\r\n          ItemList: res.data.message,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === 'Enter') {\r\n      this.getApi();\r\n    }\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  conditionSelect = (e) => {\r\n    this.setState({\r\n      condition:e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {ItemList} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <header>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <StatementAdd stateRefresh={this.stateRefresh}/>\r\n          </Grid>\r\n\r\n\r\n        </header>\r\n        <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>사업장</td>\r\n            <td>작성자(사번)</td>\r\n            <td>전표번호</td>\r\n            <td>증빙일</td>\r\n            <td>전표일</td>\r\n            <td>적요</td>\r\n            <td>삭제</td>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {ItemList && ItemList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr key={insertIndex}>\r\n                <td>{itemdata.workplace}</td>\r\n                <td>{itemdata.employee}</td>\r\n                <td><StatementUpdate stateRefresh={this.stateRefresh} id={itemdata.no}/></td>\r\n                <td>{itemdata.proofDate}</td>\r\n                <td>{itemdata.reportingDate}</td>\r\n                <td>{itemdata.allNote}</td>\r\n                <td><StatementDelete stateRefresh={this.stateRefresh} id={itemdata.no}/></td>\r\n              </tr>\r\n            );\r\n          })}\r\n          </tbody>\r\n        </table>\r\n        {ItemList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statement;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\HR.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryEdit.js",["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786"],"import React,{ useEffect,useState } from \"react\";\r\nimport './table.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\nimport { AlertTitle } from \"@material-ui/lab\";\r\n  //import { DocsLink } from 'src/reusable'\r\n\r\n    const EditSalary =({ match }) => {\r\n      const [inputs, setInputs] = useState({\r\n        name : '',\r\n        salary : ''\r\n      });\r\n  \r\n      useEffect(() => {\r\n          getApi();\r\n      },[]);\r\n    \r\n    const {name,salary} = inputs;\r\n\r\n    const getApi = () => {\r\n        ApiService.SalaryEmp(match.params.no)\r\n            .then(res => {\r\n                let emp =  res.data.list[0];\r\n                console.log(emp.name)\r\n                setInputs({\r\n                    name : emp.name,\r\n                    salary : emp.salary\r\n                })\r\n                console.log(emp.name)\r\n                console.log(match.params.no)\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setInputs({\r\n            [e.target.name] : e.target.value,\r\n            name : name\r\n        });\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const saveSalary = (e) => {\r\n        e.preventDefault();\r\n\r\n        let employee = {\r\n            name : name,\r\n            salary : salary   \r\n        }\r\n\r\n        ApiService.EditSalary(employee)\r\n            .then( res => {\r\n            alert(\"급여수정되었습니다.\");\r\n            history.push('/sal_list');\r\n            })\r\n            .catch( err => {\r\n            console.log('saveSalary() 에러', err);\r\n            });\r\n    }\r\n\r\n        return (\r\n          <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n              <CCard>\r\n                <CCardHeader>\r\n                  직원 급여 수정\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm>\r\n                   <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                      <CLabel>{name}</CLabel>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">급여</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"salary\" placeholder={salary} value={salary} onChange={onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton onClick={saveSalary} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n                </CCardFooter>\r\n              </CCard>\r\n              </CCol>\r\n            </CRow>\r\n        );\r\n      }\r\n\r\n\r\nexport default EditSalary","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryList.js",["787","788","789","790"],"import React,{ useEffect,useState } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CPagination,\r\n    CForm,\r\n    CInput \r\n  } from '@coreui/react'\r\n\r\n  let currentPages =1;\r\n  const SalaryCheck = () => {\r\n    const [inputs, setInputs] = useState({\r\n        SalaryList: '',\r\n        searchKey:\"\",\r\n        totalPages :\"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        getSalary(currentPages);\r\n    },[]);\r\n\r\n    const {SalaryList,totalPages,searchKey} = inputs;\r\n\r\n    const getSalary = (currentPages) => {\r\n        currentPages = currentPages -1\r\n        let size = 5;\r\n        ApiService.Salary(currentPages,size)\r\n            .then(res => {\r\n                setInputs({\r\n                    SalaryList : res.data.content,\r\n                    totalPages : res.data.totalPages    \r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n            \r\n    }\r\n\r\n    const getSearch = () => {\r\n        console.log(searchKey)\r\n        ApiService.SearchSalary(searchKey)\r\n        .then(res => {\r\n            console.log(res);\r\n            setInputs({\r\n                SalaryList : res.data.content,\r\n                totalPages : res.data.totalPages\r\n            })\r\n        }).catch(res => console.log(res))\r\n    }\r\n\r\n    const KeySelect = (e) => {\r\n        e.preventDefault()\r\n        setInputs({\r\n            searchKey: e.target.value\r\n        })\r\n        console.log(searchKey)\r\n        \r\n        //getStudent(currentPages);\r\n        \r\n      }\r\n\r\n    const Paginations = (e) => {\r\n        const [currentPage, setCurrentPage] = useState(currentPages);\r\n            if(currentPages != currentPage){\r\n            currentPages = currentPage;\r\n            getSalary(currentPages)\r\n            }else{\r\n\r\n            }\r\n        return(\r\n        <>\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CPagination\r\n                        activePage={currentPage}\r\n                        pages= {totalPages}\r\n                        onActivePageChange={setCurrentPage}/>\r\n                </CCardBody>\r\n             </CCard>\r\n        </>\r\n        )\r\n    }\r\n        \r\n        return (\r\n            <div>\r\n                <header>\r\n            <CForm inline>\r\n            {/* <CSelect custom id=\"branch\" onChange={branchSelect} value={findBranch}>\r\n              <option value=\"\">지점</option>\r\n              {BranchList && BranchList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect> */}\r\n            {/* <CSelect custom id=\"search\" onChange={TypeSelect} value={searchType}>\r\n              <option value=\"asd\">검색조건</option>\r\n              <option value=\"lecture\">강의명</option>\r\n              <option value=\"name\">이름</option>\r\n            </CSelect> */}\r\n            &nbsp;&nbsp;\r\n            <CInput\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"\"\r\n              size=\"sm\"\r\n              name=\"searchKeyword\"\r\n              placeholder=\"이름을 입력하세요\"\r\n              value={searchKey}\r\n              onChange={KeySelect}\r\n            />\r\n            <CButton onClick={getSearch}>검색</CButton>\r\n          </CForm>\r\n          </header>\r\n            <table>\r\n            <tr><td width =\"50\">no</td><td>branch</td><td>name</td><td>salary</td></tr>\r\n                {SalaryList&&SalaryList.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.branch}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>{itemdata.salary}</td>\r\n                    <td width =\"80\"><Link to={`/sal_edit/${itemdata.no}`}>급여수정</Link></td>\r\n                    </tr>\r\n                    );\r\n                })}\r\n                <tr><td><>\r\n                <Paginations />\r\n                </>\r\n         </td><td></td><td></td></tr>\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default SalaryCheck  \r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Ins_att.js",["791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818"],"import React, { Component } from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch,\r\n    \r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport Lecture from \"../lecture/Lecture\";\r\n\r\nclass Ins_att extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            attStu : '',\r\n            LectureName : '',\r\n            InsDate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        console.log(window.localStorage.getItem(\"InsLecAtt\"));\r\n        ApiService.InsAtt(window.localStorage.getItem(\"InsLecAtt\"))\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    attStu : res.data.list,\r\n                    LectureName : window.localStorage.getItem(\"InsLecAtt\"),\r\n                    InsDate : window.localStorage.getItem(\"InsDateAtt\")\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n    saveAtt = (e) => {\r\n        e.preventDefault();\r\n    \r\n        console.log(this.state.email)\r\n    \r\n        let student = {\r\n          name : this.state.name,\r\n          hp : this.state.hp,\r\n          email : this.state.email,\r\n          birth : this.state.birth,\r\n          address : this.state.address,\r\n          lecture : this.state.lecture,\r\n          gender : this.state.gender,\r\n          //regdate : this.state.regdate\r\n        }\r\n    \r\n        console.log(this.state.email)\r\n    \r\n        ApiService.addStudent(student)\r\n        .then( res => {\r\n          this.setState({\r\n            message : student.name + '님이 성공적으로 등록되었습니다'\r\n          })\r\n          console.log(this.state.message);\r\n          this.props.history.push('/students');\r\n        })\r\n        .catch( err => {\r\n          console.log('saveStudent() 에러', err);\r\n        });\r\n    \r\n      }\r\n\r\n    render() {\r\n        const { attStu,LectureName,InsDate } = this.state;\r\n        return(\r\n            <div>\r\n            \r\n            <tr><td>수업이름</td><td>{LectureName}</td><td>날짜</td><td>{InsDate}</td><td colSpan='3'></td></tr>\r\n            <table>  \r\n            <tr><td>no</td><td>name</td><td>출결</td><td></td><td></td><td></td><td></td></tr>\r\n                {attStu&&attStu.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>\r\n                    {/* <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selStu(itemdata.no)}>상세</CButton></td> */}\r\n                    <CCol md=\"9\">\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio1\" name={itemdata.no} value=\"0\" defaultChecked/>\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio1\">출석</CLabel>\r\n                    </CFormGroup>\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio2\" name={itemdata.no} value=\"1\" />\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio2\">결석</CLabel>\r\n                    </CFormGroup>\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio3\" name={itemdata.no} value=\"2\" />\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio3\">지각</CLabel>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  </td>\r\n                </tr>\r\n                    );\r\n                })}\r\n            <tr><td>\r\n            <CButton onClick={this.saveAtt} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                </td></tr>\r\n            </table>\r\n            </div>\r\n                             \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Ins_att;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance_view.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js",["819"],"import React, { Component } from \"react\";\r\nimport AttTable from \"./AttTable\";\r\nimport '../Template/css/table.css';\r\nimport Down from '../../suminCP/excel';\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CRow\r\n} from '@coreui/react'\r\nimport {\r\n  Button,\r\n} from \"@material-ui/core\";\r\nconst style={width: \"60%\"}\r\n\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        mode: 0,\r\n    }\r\n    this.change = this.change.bind(this);\r\n    }\r\n\r\n    change(input){\r\n      this.setState(state => ({\r\n        mode: input\r\n      }));\r\n    }\r\n\r\n\r\n  render() {\r\n    const _default=0,_weekly=1,_monthly=2,_chart=3;\r\n    return (\r\n      <div>\r\n        <div style={style}>\r\n          <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"info\" onClick={() => {this.change(_default); }}>기본</CButton>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"info\" onClick={() => {this.change(_weekly); }}>주간</CButton>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"info\" onClick={() => {this.change(_monthly); }}>일간</CButton>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"info\" onClick={() => {this.change(_chart); }}>차트</CButton>\r\n              </CCol>\r\n          </CRow>\r\n        </div>\r\n        <br/>\r\n        <div>\r\n          <AttTable mode={this.state.mode}/>\r\n        </div>\r\n        <Down name=\"Attendance\"></Down>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\user\\vacation.js",["820","821","822","823"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {CDataTable} from '@coreui/react'\r\nimport Moment from 'moment';\r\n\r\n\r\nlet fields = ['no', 'day', 'name'];\r\nlet payselect = 1;\r\n\r\n\r\nconst Info = () => {\r\n  const [inputs, setInputs] = useState({\r\n    data: \"\",\r\n    page: \"\",\r\n    open: \"\",\r\n    elesected: \"\",\r\n    days: \"\",\r\n    startDay:\"\",\r\n    endDay: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const {  open, page, data, days,selected,startDay,endDay } = inputs;\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n    if(name===\"startDay\"){\r\n      check_start(e)\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(\"http://localhost:8080/getVacation/1/10/\"+window.sessionStorage.getItem('no'))\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            day: list[i].day,\r\n            name: list[i].name\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page2\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setInputs({\r\n      open: false,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    movePage(1, sel)\r\n  }\r\n  const pageChange = (selPage) => { //페이지 이동 클릭\r\n    movePage(selPage, page.cntPerPage)\r\n  }\r\n  const nextpage = () => { //다음 페이지\r\n    movePage(page.endPage + 1, page.cntPerPage)\r\n  }\r\n  const prevpage = () => { //이전 페이지\r\n    movePage(page.startPage - 1, page.cntPerPage)\r\n  }\r\n  const movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/getVacation/\" + nowpage + \"/\" + perpage+\"/\"+window.sessionStorage.getItem('no');\r\n\r\n    axios.get(add)\r\n    .then(res => {\r\n      console.log(res);\r\n      let list = res.data.list;\r\n      let page2 = res.data.page;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let temp = {\r\n          no: list[i].no,\r\n          day: list[i].day,\r\n          name: list[i].name\r\n        }\r\n        list[i] = temp\r\n      }\r\n      console.log(list);\r\n      setInputs({\r\n        data: list,\r\n        page: page2\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  const select = () => {\r\n    payselect *= -1;\r\n    let list = data;\r\n    setInputs({\r\n      data: list,\r\n      page: page\r\n    })\r\n  }\r\n\r\n  const vacationUse = () => {\r\n    var check_count = document.getElementsByName(\"check\").length;\r\n    if(check_count<1){\r\n      alert(\"휴가를 선택해주세요\")\r\n      return\r\n    }\r\n    let selectDay = 0;\r\n    let selects=\"\";\r\n    for (var i=0; i<check_count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        selects+=document.getElementsByName(\"check\")[i].value+\"/\";\r\n        for(let l=0;l<data.length;l++){\r\n          if(Number(document.getElementsByName(\"check\")[i].value) === Number(data[l].no)){\r\n            selectDay+=data[l].day\r\n          }\r\n        } \r\n      }\r\n    }\r\n    setInputs({\r\n      open: true,\r\n      page: page,\r\n      data: data,\r\n      days: selectDay,\r\n      selected: selects\r\n    })\r\n  }\r\n\r\n  const check_start = (e) =>{\r\n    var start = Moment(e.target.value).format(\"YYYY-MM-DD\");\r\n    let now = Moment().format(\"YYYY-MM-DD\");\r\n    if(start<=now){\r\n      alert(\"오늘 이후로 지정해주세요.\")\r\n      setInputs({\r\n        open: true,\r\n        page: page,\r\n        data: data,\r\n        days: days,\r\n        selected: selected,\r\n        startDay: \"\",\r\n        endDay: endDay\r\n      })\r\n    }else{\r\n      let end=Moment(e.target.value).add(days-1, 'days').format(\"YYYY-MM-DD\")\r\n      setInputs({\r\n        open: true,\r\n        page: page,\r\n        data: data,\r\n        days: days,\r\n        selected: selected,\r\n        startDay: e.target.value,\r\n        endDay: end\r\n      })\r\n    }\r\n  }\r\n\r\n  const apply = () =>{\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation_apply',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: window.sessionStorage.getItem('no'),\r\n        start_day: startDay,\r\n        end_day: endDay,\r\n        use_vacation: String(selected)\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={select}>\r\n            선택\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={vacationUse}>\r\n            휴가 사용\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <select id=\"cntPerPage\" name=\"sel\" onChange={() => { selChange() }}>\r\n            <option value=\"5\">5줄 보기</option>\r\n            <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n            <option value=\"15\">15줄 보기</option>\r\n            <option value=\"20\">20줄 보기</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <CDataTable\r\n            items={data}\r\n            fields={fields}\r\n            itemsPerPage={page.cntPerPage}\r\n            pagination\r\n            scopedSlots={{\r\n              'no':\r\n                (item) => (\r\n                  <td>\r\n                    {payselect === 1 ?\r\n                      <div>\r\n                        {item.no}\r\n                      </div>\r\n                      :\r\n                      <div>\r\n                        <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                      </div>\r\n                    }\r\n                  </td>\r\n                ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <nav aria-label=\"pagination\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            {page.startPage !== 1 ?\r\n              <li onClick={() => prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n            {makeMap(page.startPage, page.endPage).map((i) => {\r\n              if (page.nowPage === i) {\r\n                return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n              } else {\r\n                return (<li onClick={() => pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n              }\r\n            })}\r\n            {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n          </ul>\r\n        </nav>\r\n        \r\n\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>휴가 신청</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">start</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"startDay\" placeholder=\"day\" value={startDay}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              \r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">end</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"2\" md=\"9\">\r\n                <CInput type=\"date\" name=\"endDay\" placeholder=\"day\" value={endDay}\r\n                  />\r\n                  \r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                {days}\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">사용 휴가</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                {selected}\r\n              </CCol>\r\n              \r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={apply}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Info;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\user\\paymentData.js",["824"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport {  Link } from 'react-router-dom';\r\n\r\nlet fields = ['no','employee_no', 'title', 'day', '결재여부'];\r\nlet id=window.sessionStorage.no;\r\n\r\n\r\nconst PaymentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        page: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, []); \r\n\r\n    const { data } = inputs;\r\n \r\n    \r\n    const getData = () =>{\r\n      axios.get(\"http://localhost:8080/payment/1/10/\"+id)\r\n        .then(res => {\r\n          console.log(res);\r\n          let list = res.data.list;\r\n          let user = res.data.user;\r\n          for(let i=0;i<list.length;i++){\r\n            for(let l=0;l<user.length;l++){\r\n              if(list[i].employee_no===user[l].no){\r\n                list[i].employee_no=user[l].name;\r\n              }\r\n            }\r\n            let result = paymentCheck(list[i].approved);\r\n            list[i].content=result\r\n          }\r\n\r\n          setInputs({\r\n            data: list,\r\n            page: res.data.page,\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n    const paymentCheck = (approved) =>{\r\n      let player = window.sessionStorage.getItem(\"no\");\r\n      approved=String(approved).split(\"/\")\r\n      for(let i=0;i<approved.length;i++){\r\n          if(Number(player)===Number(approved[i])){\r\n              return \"완\"\r\n          }      \r\n      }\r\n      return \"미\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n          <CDataTable\r\n              items={data}\r\n              fields={fields}\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'title':\r\n                (item)=>(\r\n                  <td>\r\n                    <Link to={`/payment/${item.no}`}> {item.title}</Link>\r\n                  </td>\r\n                ),\r\n                '결재여부':\r\n                (item)=>(\r\n                  <td>\r\n                      {item.content}\r\n                  </td>\r\n                ),\r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n} \r\nexport default PaymentData;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacationApply.js",["825","826","827","828","829"],"import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport PaymentInsert from \"../../payment/insert/insert\"\r\n\r\n\r\nlet fields = ['no', 'employee_no', 'start_day', 'end_day', 'use_vacation' , 'day', '수정'];\r\n\r\nexport default class Apply extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: \"\",\r\n      page: \"\",\r\n      open: \"\",\r\n      no: \"\",\r\n      startDay: \"\",\r\n      endDay: \"\",\r\n      days: \"\",\r\n      seleted:\"\"\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n\r\n\r\n  getData = () => {\r\n    axios.get(\"http://localhost:8080/Vacation_apply/1/10\")\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            start_day: list[i].start_day,\r\n            end_day: list[i].end_day,\r\n            use_vacation: list[i].use_vacation,\r\n            day: list[i].day,\r\n            수정: list[i].no\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        this.setState({\r\n          data: list,\r\n          page: page2,\r\n          user: res.data.user\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleClickOpen = (item) => {\r\n    this.setState({\r\n      open: true,\r\n      no: item.no,\r\n      startDay: item.start_day,\r\n      endDay: item.end_day,\r\n      day: item.day,\r\n      seleted:item.use_vacation\r\n    })\r\n  };\r\n\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n      open2: false,\r\n      open3: false\r\n    })\r\n  };\r\n\r\n\r\n  del = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation_apply/' + this.state.no,\r\n      method: \"DELETE\",\r\n      headers: { 'content-type': 'application/json' },\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"삭제\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  update = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation_apply',\r\n      method: \"PUT\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        no: this.state.no,\r\n        start_day: this.state.startDay,\r\n        end_day: this.state.endDay,\r\n        day: this.state.day,\r\n        use_vacation: this.state.seleted\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n   selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    this.movePage(1, sel)\r\n  }\r\n   pageChange = (selPage) => { //페이지 이동 클릭\r\n    this.movePage(selPage, this.page.cntPerPage)\r\n  }\r\n   nextpage = () => { //다음 페이지\r\n    this.movePage(this.page.endPage + 1, this.page.cntPerPage)\r\n  }\r\n   prevpage = () => { //이전 페이지\r\n    this.movePage(this.page.startPage - 1, this.page.cntPerPage)\r\n  }\r\n   movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/Vacation_apply/\" + nowpage + \"/\" + perpage;\r\n\r\n    axios.get(add)\r\n    .then(res => {\r\n      console.log(res);\r\n      let list = res.data.list;\r\n      let page2 = res.data.page;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let temp = {\r\n          no: list[i].no,\r\n          employee_no: list[i].employee_no,\r\n          start_day: list[i].start_day,\r\n          end_name: list[i].end_day,\r\n          use_vacation: list[i].use_vacation,\r\n          수정: 1\r\n        }\r\n        list[i] = temp\r\n      }\r\n      console.log(list);\r\n      this.setState({\r\n        data: list,\r\n        page: page2,\r\n        user: res.data.user\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  \r\n  render(){\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div align=\"right\">\r\n            <PaymentInsert kind={\"vacation_apply\"} data={this.state.data}/>           \r\n          </div>\r\n  \r\n          <div style={{ float: \"right\" }}>\r\n            <select id=\"cntPerPage\" name=\"sel\" onChange={() => { this.selChange() }}>\r\n              <option value=\"5\">5줄 보기</option>\r\n              <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n              <option value=\"15\">15줄 보기</option>\r\n              <option value=\"20\">20줄 보기</option>\r\n            </select>\r\n          </div>\r\n  \r\n          <div>\r\n            <CDataTable\r\n              items={this.state.data}\r\n              fields={this.state.fields}\r\n              itemsPerPage={this.state.page.cntPerPage}\r\n              pagination\r\n              scopedSlots={{\r\n                '수정':\r\n                (item) => (\r\n                  <td>\r\n                    <strong onClick={()=>this.handleClickOpen(item)}>\r\n                      수정\r\n                    </strong>\r\n                  </td>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n  \r\n  \r\n          <nav aria-label=\"pagination\">\r\n            <ul class=\"pagination justify-content-center\">\r\n              {this.state.page.startPage !== 1 ?\r\n                <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n              {this.makeMap(this.state.page.startPage, this.state.page.endPage).map((i) => {\r\n                if (this.state.page.nowPage === i) {\r\n                  return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                } else {\r\n                  return (<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                }\r\n              })}\r\n              {this.state.page.endPage !== this.state.page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n            </ul>\r\n          </nav>\r\n          \r\n          <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>휴가 신청</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">start</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"startDay\" placeholder=\"start_day\" value={this.state.startDay}\r\n                  onChange={this.onChange} />\r\n              </CCol>\r\n              \r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">end</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n              <CInput type=\"date\" name=\"endDay\" placeholder=\"end_day\" value={this.state.endDay}\r\n                  onChange={this.onChange} />{this.state.endDay}\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">등록날짜</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput readOnly name=\"day\" value={this.state.day}onChange={this.onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">사용 휴가</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                 <CInput name=\"seleted\" value={this.state.seleted}onChange={this.onChange} /> \r\n              </CCol>\r\n              \r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.update}>수정</Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.del}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n         \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacation.js",["830","831","832","833","834"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport PaymentInsert from \"../../payment/insert/insert\"\r\n\r\n\r\n\r\nlet fields = ['no', 'employee_no', 'day', 'name', '수정'];\r\nlet payselect = 1;\r\n\r\n\r\nconst Info = () => {\r\n  const [inputs, setInputs] = useState({\r\n    data: \"\",\r\n    employeeNo: \"\",\r\n    day: \"\",\r\n    name: \"\",\r\n    page: \"\",\r\n    open: \"\",\r\n    open2: \"\",\r\n    no: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const { name,  open, open2, day, page, data, employeeNo, no } = inputs;\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(\"http://localhost:8080/getVacation/1/10\")\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            day: list[i].day,\r\n            name: list[i].name,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page2\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setInputs({\r\n      open: true,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const updateOpen = (item) => {\r\n    setInputs({\r\n      open2: true,\r\n      page: page,\r\n      data: data,\r\n      no: item.no,\r\n      employeeNo: item.employee_no,\r\n      day: item.day,\r\n      name: item.name\r\n    })\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setInputs({\r\n      open: false,\r\n      open2: false,\r\n      open3: false,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const insert = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: employeeNo,\r\n        day: day,\r\n        name: name\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const del = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation/' + no,\r\n      method: \"DELETE\",\r\n      headers: { 'content-type': 'application/json' },\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"삭제\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const update = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation',\r\n      method: \"PUT\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        no: no,\r\n        day: day,\r\n        employee_no: employeeNo,\r\n        name: name\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    movePage(1, sel)\r\n  }\r\n  const pageChange = (selPage) => { //페이지 이동 클릭\r\n    movePage(selPage, page.cntPerPage)\r\n  }\r\n  const nextpage = () => { //다음 페이지\r\n    movePage(page.endPage + 1, page.cntPerPage)\r\n  }\r\n  const prevpage = () => { //이전 페이지\r\n    movePage(page.startPage - 1, page.cntPerPage)\r\n  }\r\n  const movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/getVacation/\" + nowpage + \"/\" + perpage;\r\n\r\n    axios.get(add)\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            day: list[i].day,\r\n            name: list[i].name,\r\n            수정: list[i].no\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  const select = () => {\r\n    payselect *= -1;\r\n    let list = data;\r\n    setInputs({\r\n      data: list,\r\n      page: page\r\n    })\r\n  }\r\n\r\n  const vacationUse = () => {\r\n    setInputs({\r\n      open3: true,\r\n      page: page,\r\n      data: data,\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            추가하기\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={vacationUse}>\r\n            휴가 사용\r\n          </Button>\r\n          <PaymentInsert kind={\"vacation\"} data={data}/>   \r\n        </div>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <select id=\"cntPerPage\" name=\"sel\" onChange={() => { selChange() }}>\r\n            <option value=\"5\">5줄 보기</option>\r\n            <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n            <option value=\"15\">15줄 보기</option>\r\n            <option value=\"20\">20줄 보기</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <CDataTable\r\n            items={data}\r\n            fields={fields}\r\n            itemsPerPage={page.cntPerPage}\r\n            pagination\r\n            scopedSlots={{\r\n              '수정':\r\n                (item) => (\r\n                  <td>\r\n                    <strong onClick={()=>updateOpen(item)}>\r\n                      수정\r\n                    </strong>\r\n                  </td>\r\n                ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <nav aria-label=\"pagination\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            {page.startPage !== 1 ?\r\n              <li onClick={() => prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n            {makeMap(page.startPage, page.endPage).map((i) => {\r\n              if (page.nowPage === i) {\r\n                return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n              } else {\r\n                return (<li onClick={() => pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n              }\r\n            })}\r\n            {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n          </ul>\r\n        </nav>\r\n        <Dialog open={open2} onClose={handleClose}>\r\n          <DialogTitle>휴가 수정</DialogTitle>\r\n            <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"employee_no\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"day\" placeholder=\"일수\" value={day}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={update}>추가</Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={del}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>휴가 추가하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"day\" placeholder=\"일수\" value={day}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Info;","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js",["835","836","837"],"import axios from 'axios';\nimport CounselingDelete from './views/counseling/CounselingDelete';\n\nconst USER_API_BASE_URL = \"http://localhost:80/api\";\n\nclass ApiService {\n\n  Students(currentPage,Size) {\n    return axios.get(USER_API_BASE_URL + '/students' + \"?page=\" + currentPage + \"&size=\" + Size);\n  }\n\n  Student(no) {\n    console.log(\"!!!!!!!!!!!!!!!!!\" + no);\n    return axios.get(USER_API_BASE_URL + '/student/' + no);\n  }\n\n  addStudent(student) {\n    return axios.post(USER_API_BASE_URL + '/ins_stu', student);\n  }\n\n  deleteStudent(no) {\n    return axios.delete(USER_API_BASE_URL + '/' + no);\n  }\n\n  editStudent(student) {\n    return axios.post(USER_API_BASE_URL + '/edit_stu/' + student.no, student);\n  }\n\n  getEmployee(pageable , verify) {\n    return axios.get(USER_API_BASE_URL +\n      '/employee', pageable, verify );\n  }\n\n  InsertEmployee(employee) {\n    return axios.post(USER_API_BASE_URL +\n      '/employee', employee);\n  }\n  standByAuth() {\n    return axios.get(USER_API_BASE_URL +\n      '/standByAuth');\n  }\n    StuAtt(name) {\n        return axios.get(USER_API_BASE_URL + '/stu_att/' + name);\n    }\n\n    Leclist() {\n        return axios.get(USER_API_BASE_URL + '/stu_att');\n    }\n\n    InsAtt(lec) {\n        console.log(\"?????\" + lec);\n        return axios.get(USER_API_BASE_URL + '/ins_att/' + lec);\n    }\n\n    Salary(currentPage,Size) {\n        return axios.get(USER_API_BASE_URL + '/salary' + \"?page=\" + currentPage + \"&size=\" + Size);\n    }\n\n    SalaryEmp(no) {\n      console.log(\"??????????\" + no);\n        return axios.get(USER_API_BASE_URL + '/sal_edit/' + no);\n    }\n\n    Teacher(no) {\n        return axios.get(USER_API_BASE_URL + '/lec_time/' + no);\n    }\n\n    EditSalary(employee) {\n      console.log(\"??????????\" + employee.salary);\n      return axios.post(USER_API_BASE_URL + '/sal_edit_com/' + employee.name, employee);\n    }\n\n    Branch() {\n      return axios.get(USER_API_BASE_URL + '/lecture/branches');\n    }\n\n    SearchStudent(searchKey) {\n\n      return axios.get(USER_API_BASE_URL + '/searchStudent/' +searchKey);\n    }\n\n    SearchSalary(searchKey) {\n      return axios.get(USER_API_BASE_URL + '/searchSalary/' + searchKey);\n    }\n\n    getLecture(no) {\n      return axios.get(USER_API_BASE_URL + '/getLecture/' + no);\n    }\n\n    addCurriculum(curri) {\n      console.log(curri.curriculum)\n      return axios.post(USER_API_BASE_URL + '/ins_curri', curri);\n    }\n\n    getCurriculum(lecture) {\n      return axios.get(USER_API_BASE_URL + '/getcurri/' + lecture);\n    }\n\n}\n\nexport default new ApiService();\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\events.js",["838"],"\r\nexport default [\r\n    {\r\n      id: 0,\r\n      title: \"All Day Event very long title\",\r\n      date: \"2021-02-05\"\r\n    }\r\n  ];\r\n  ","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar_view.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\PayList.js",["839","840","841"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, IconButton, withStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport RequestPay from \"./RequestPay\";\r\nimport CancelPay from \"./CancelPay\";\r\nimport {CFormGroup, CInput, CSelect} from \"@coreui/react\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nclass PayList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ItemList: \"\",\r\n      payList:\"\",\r\n      reason:\"개인사정\",\r\n    }\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.reasonSelect = this.reasonSelect.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\ngetApi = () => {\r\n  axios.get(\"http://localhost:8080/api/students/user/\"+this.props.id)\r\n    .then(res => {\r\n      this.setState({\r\n        ItemList: res.data.payList\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  axios.get(\"http://localhost:8080/payments/pay/\"+this.props.id)\r\n    .then(res => {\r\n      this.setState({\r\n        payList: res.data.list\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n}\r\n\r\n  handleClickOpen() {\r\n    this.stateRefresh();\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n  reasonSelect = (e) => {\r\n    this.setState({\r\n      reason:e.target.value\r\n    })\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      ItemList: \"\",\r\n      payList:\"\",\r\n      reason:\"개인사정\",\r\n    });\r\n    this.getApi();\r\n  }\r\n\r\n  render() {\r\n    const { ItemList } = this.state;\r\n    const { payList } = this.state;\r\n\r\n    const date=(item) => {\r\n      var date = new Date(item);\r\n      var dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n        .toISOString()\r\n        .split(\"T\")[0] + \"  \" + new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n        .toISOString().split(\"T\")[1].split(\".\")[0]\r\n      return dateString\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={this.handleClickOpen}>{this.props.itemdata.name}</Button>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>결제</DialogTitle>\r\n          <DialogContent dividers>\r\n            <strong>결제목록</strong>\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n              <tr>\r\n                <td>NO</td>\r\n                <td>강의명</td>\r\n                <td>수강료</td>\r\n                <td>개강일</td>\r\n                <td>종강일</td>\r\n                <td>결제</td>\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n              {ItemList && ItemList.map((itemdata, insertIndex) => {\r\n                return (\r\n                  <tr key={insertIndex}>\r\n                    <td>{itemdata.lectureNo}</td>\r\n                    <td>{itemdata.lectureName}</td>\r\n                    <td>{itemdata.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</td>\r\n                    <td>{itemdata.start_date}</td>\r\n                    <td>{itemdata.end_date}</td>\r\n                    <td><RequestPay product={itemdata}/></td>\r\n\r\n                  </tr>\r\n                );\r\n              })}\r\n              </tbody>\r\n            </table>\r\n            <br/>\r\n            <strong>결제내역</strong>\r\n            <br/>\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n              <tr>\r\n                <td>NO</td>\r\n                <td>결제내용</td>\r\n                <td>수강료</td>\r\n                <td>결제방법</td>\r\n                <td>결제일</td>\r\n                <td>환불사유</td>\r\n                <td>환불결과</td>\r\n\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n              {payList && payList.map((itemdata, insertIndex) => {\r\n                return (\r\n                  <tr key={insertIndex}>\r\n                      <td>{itemdata.no}</td>\r\n                      <td>{itemdata.name}</td>\r\n                      <td>{itemdata.paidAmount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</td>\r\n                      <td>{itemdata.payMethod}</td>\r\n                      <td>{date(itemdata.paidAt)}</td>\r\n                    {itemdata.cancel === 1 &&\r\n                    <td><CSelect custom id=\"branch\" onChange={this.reasonSelect} defaultValue={itemdata.reason} disabled={true}>\r\n                      <option value=\"개인사정\">개인사정</option>\r\n                      <option value=\"결제수단변경\">결제수단변경</option>\r\n                      <option value=\"결제오류\">결제오류</option>\r\n                      <option value=\"기타\">기타</option>\r\n                    </CSelect>\r\n                    </td>\r\n                        }\r\n                    {itemdata.cancel === 1 &&\r\n                    <td>환불완료</td>\r\n                    }\r\n                    {itemdata.cancel !== 1 &&\r\n                    <td><CSelect custom id=\"branch\" onChange={this.reasonSelect} value={this.state.reason}>\r\n                      <option value=\"개인사정\">개인사정</option>\r\n                      <option value=\"결제수단변경\">결제수단변경</option>\r\n                      <option value=\"결제오류\">결제오류</option>\r\n                      <option value=\"기타\">기타</option>\r\n                    </CSelect>\r\n                    </td>\r\n                    }\r\n                    {itemdata.cancel !== 1 &&\r\n                    <td><CancelPay stateRefresh={this.stateRefresh} product={itemdata} reason={this.state.reason}/></td>\r\n                    }\r\n                  </tr>\r\n                );\r\n              })}\r\n              </tbody>\r\n            </table>\r\n          </DialogContent>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\nexport default withStyles(styles)(PayList)\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingRecord.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDelete.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementUpdate.js",["842"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, withStyles,} from \"@material-ui/core\";\r\nimport {CCard, CCardBody, CCardHeader, CCol, CFormGroup, CFormText, CInput, CLabel, CRow} from '@coreui/react'\r\nimport StatementDetailUpdate from \"./StatementDetailUpdate\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n\r\n});\r\n\r\n\r\nclass StatementUpdate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statementDetailsList: '',\r\n      no: this.props.id,\r\n      employee: '',\r\n      branch: '',\r\n      disabled: true,\r\n      workplace: '',\r\n      allNote: \"\",\r\n      proofDate: '',\r\n      reportingDate: '',\r\n      list: '',\r\n\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.updateStatement = this.updateStatement.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/statement/\" + this.props.id)\r\n      .then(res => {\r\n        this.setState({\r\n          statementList: res.data.list,\r\n          workplace: res.data.list.workplace,\r\n          employee: res.data.list.employee,\r\n          branch: res.data.list.branch,\r\n          allNote: res.data.list.allNote,\r\n          proofDate: res.data.list.proofDate,\r\n          list: res.data.list.list,\r\n          reportingDate: res.data.list.reportingDate,\r\n          statementDetailsList: res.data.details\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      this.updateStatement()\r\n      this.setState({\r\n        disabled: true,\r\n        workplace: '',\r\n        allNote: \"\",\r\n        proofDate: '',\r\n        reportingDate: '',\r\n        list: '',\r\n      })\r\n      alert(\"등록되었습니다.\");\r\n      this.props.stateRefresh();\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  updateStatement() {\r\n    console.log(this.state.list);\r\n    axios({\r\n      url: 'http://localhost:8080/statement/' + this.props.id,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        workplace: this.state.workplace,\r\n        employee: this.state.employee,\r\n        branch: this.state.branch,\r\n        allNote: this.state.allNote,\r\n        proofDate: this.state.proofDate,\r\n        reportingDate: this.state.reportingDate,\r\n        list: this.state.list,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      disabled: true,\r\n      workplace: '',\r\n      allNote: \"\",\r\n      proofDate: '',\r\n      reportingDate: '',\r\n      list: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  setData = (info) => {\r\n    console.log(info)\r\n    this.setState({\r\n      list: info,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {statementDetailsList} = this.state;\r\n\r\n    let name = \"수정\"\r\n    if (this.state.disabled) {\r\n      name = \"수정\"\r\n    } else {\r\n      name = \"수정완료\"\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Button color=\"primary\" onClick={this.handleClickOpen}>{this.props.id}</Button>\r\n\r\n        <Dialog open={this.state.open} onClose={this.handleClose} maxWidth={true}>\r\n          <DialogTitle>전표조회</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row className=\"my-0\">\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"workplace\">사업장</CLabel>\r\n                  <CInput id=\"workplace\" value={this.state.workplace} disabled={true}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"branch\">지점코드</CLabel>\r\n                  <CInput id=\"branch\" value={this.state.branch} disabled={true}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"employee\">작성자(사번)</CLabel>\r\n                  <CInput id=\"employee\" value={this.state.employee} disabled={true}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup>\r\n\r\n            <CFormGroup row className=\"my-0\">\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"reportingDate\">작성일</CLabel>\r\n                  <CInput id=\"reportingDate\" type=\"date\" name=\"reportingDate\"\r\n                          value={this.state.reportingDate}\r\n                          disabled={this.state.disabled}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"proofDate\">증빙일</CLabel>\r\n                  <CInput id=\"proofDate\" type=\"date\" name=\"proofDate\"\r\n                          value={this.state.proofDate}\r\n                          disabled={this.state.disabled}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"allNote\">적요</CLabel>\r\n                  <CInput id=\"allNote\" type=\"text\" name=\"allNote\"\r\n                          value={this.state.allNote}\r\n                          disabled={this.state.disabled}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup>\r\n\r\n            <CRow>\r\n              <CCol>\r\n                <CCard>\r\n                  <CCardHeader>\r\n                    전표 상세\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <StatementDetailUpdate setData={this.setData}\r\n                                           statementDetails={statementDetailsList}\r\n                                           id={this.props.id}\r\n                                           disabled={this.state.disabled}/>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>{name}</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(StatementUpdate)\r\n\r\n\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js",["843","844","845"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport '../Template/css/table.css';\r\nimport {\r\n  CButton,\r\n  CCol,CRow\r\n} from '@coreui/react'\r\nimport Moment from \"moment\"\r\nvar session_no=window.sessionStorage.getItem('no');\r\nconst style={width: \"50%\", float: \"left\"}\r\nconst style2={width: \"50%\", float: \"right\",textAlign: \"right\" }\r\nclass AttInOut extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        today: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.today_get();\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000,\r\n    )\r\n    this.timer = setInterval(\r\n      () => this.timeSub(),1000\r\n      )\r\n\r\n  }\r\n  today_get() {\r\n    axios.get(\"http://localhost:8080/api2/today?no=\"+session_no)\r\n    .then(res => {\r\n      console.log(res)\r\n      this.setState({\r\n        today: res.data.today[0]\r\n      })\r\n    }).catch(res => console.log(res))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      clearInterval(this.timerID)\r\n      clearInterval(this.timer)\r\n  }\r\n\r\n  tick() {\r\n      this.setState({\r\n          date: Moment(new Date()).format(\"HH:mm:ss\")\r\n      })\r\n  }\r\n\r\n  timeSub=() => {\r\n    if(this.state.today){\r\n        let in1=this.countSeconds(this.state.date);\r\n      let in2=this.countSeconds(this.state.today.start_time);\r\n      let result=in1-in2;\r\n\r\n      this.setState({\r\n        time: this.secondsCount(result)\r\n      })\r\n    }\r\n  }\r\n\r\n  in = () =>{\r\n      axios.post(`http://localhost:8080/api2/in`,{no: session_no})\r\n      .then(res => {\r\n        if(res.data){\r\n          alert(\"출근되었습니다.\");\r\n          window.location.reload(false);\r\n        }else{\r\n          alert(\"이미 출근되었습니다.\");\r\n        }\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  out = () =>{\r\n    axios.get(`http://localhost:8080/api2/out?no=${session_no}`)\r\n    .then(res => {\r\n      if(res.data){\r\n        alert(\"퇴근되었습니다.\");\r\n        window.location.reload(false);\r\n      }else{\r\n        alert(\"출근을 해주세요!.\");\r\n      }\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  secondsCount = (seconds) => {\r\n    var hour, min, sec\r\n    hour = parseInt(seconds/3600);\r\n    min = parseInt((seconds%3600)/60);\r\n    sec = seconds%60;\r\n\r\n    if (hour.toString().length==1) hour = \"0\" + hour;\r\n    if (min.toString().length==1) min = \"0\" + min;\r\n    if (sec.toString().length==1) sec = \"0\" + sec;\r\n    return hour + \":\" + min + \":\" + sec;\r\n  }\r\n\r\n  countSeconds = (str) => {\r\n    const [hh = '0', mm = '0', ss = '0'] = (str || '0:0:0').split(':');\r\n    const hour = parseInt(hh, 10) || 0;\r\n    const minute = parseInt(mm, 10) || 0;\r\n    const second = parseInt(ss, 10) || 0;\r\n    return (hour*3600) + (minute*60) + (second);\r\n  }\r\n  night = () =>{\r\n    let today = new Date();\r\n    let hours = today.getHours();\r\n    let minutes = today.getMinutes();\r\n    let seconds = today.getSeconds();\r\n    let night = \"18:00:00\";\r\n\r\n    if(this.countSeconds(hours+':'+minutes+':'+seconds)>this.countSeconds(night)){\r\n      axios.get(`http://localhost:8083/api2/night?no=${session_no}`)\r\n      .then(res => {\r\n        if(res.data){\r\n          alert(\"연장근무후 퇴근을 해주세요.\");\r\n          window.location.reload(false);\r\n        }else{\r\n          alert(\"출근을 해주세요!.\");\r\n        }\r\n      })\r\n      .catch(res => console.log(res))\r\n    }else{\r\n      alert(\"연장근무는 \"+night+\"이후에 가능합니다.\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { today } = this.state;\r\n    return (\r\n      <div>\r\n        <div style={style}>\r\n          <CRow className=\"align-items-center\">\r\n                <CCol col=\"3\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                  <CButton block variant=\"outline\" color=\"info\" onClick={this.in}>출근</CButton>\r\n                </CCol>\r\n\r\n                <CCol col=\"3\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                  <CButton block variant=\"outline\" color=\"info\" onClick={this.out}>퇴근</CButton>\r\n                </CCol>\r\n\r\n                <CCol col=\"3\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                  <CButton block variant=\"outline\" color=\"info\" onClick={this.night}>연장</CButton>\r\n                </CCol>\r\n          </CRow>\r\n        </div>\r\n        <div style={style2}>\r\n          <div>현재 시간 :{this.state.date}</div>\r\n          {today !== undefined ?\r\n            <div>\r\n              <div>출근 시간 :{this.state.today.start_time}</div>\r\n              <div>퇴근 시간 :{this.state.today.end_time}</div>\r\n              <div>\r\n                {this.state.today.end_time === null ?\r\n                  <div>{this.state.today.end_time}현재 근무한 시간 :{this.state.time}</div> :\r\n                  <div>(퇴근)근무한 시간 :{this.secondsCount(this.countSeconds(this.state.today.end_time)-\r\n                                          this.countSeconds(this.state.today.start_time))}</div>\r\n                }\r\n            </div></div>\r\n            :\"\"\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttInOut;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\insert\\insert.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingDelete.js",["846"],"import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {CCol} from \"@coreui/react\";\r\n\r\nclass CounselingDelete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n\r\n    }\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleClickOpen() {\r\n      this.setState({\r\n        open: true\r\n      });\r\n  }\r\n\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    })\r\n\r\n  }\r\n\r\n\r\n  delete(id) {\r\n    const url = 'http://localhost:8080/counseling/' + id;\r\n    fetch(url, {\r\n      method: 'DELETE'\r\n    });\r\n    alert(\"삭제 되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon fontSize=\"small\" onClick={this.handleClickOpen}/>\r\n        </IconButton>\r\n        <Dialog onClose={this.handleClose} open={this.state.open}>\r\n          <DialogTitle onClose={this.handleClose}>\r\n            삭제 경고\r\n          </DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Typography gutterBottom>\r\n              선택한 정보가 삭제됩니다.\r\n            </Typography>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => {\r\n              this.delete(this.props.id)\r\n            }}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(CounselingDelete)\r\n\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js",["847","848","849","850"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {CChartLine} from '@coreui/react-chartjs';\r\n\r\nimport '../Template/css/table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from \"moment\"\r\n\r\nimport PaymentInsert from \"../payment/insert/insert\"\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,CSelect,CInput\r\n} from '@coreui/react'\r\nconst _numbers=[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];\r\nconst _color=[\"#F5A9BC\",\"#58FAF4\",\"#F3F781\",\"#00FFBF\",\"#82FA58\"];\r\nconst _week=[0,1,2,3,4,5,6];\r\nconst _default=0,_weekly=1,_monthly=2,_Chart=3;\r\nconst _HRD=1;\r\nlet HRD_login=false;\r\nvar session_dep=window.sessionStorage.getItem('dep');\r\nif(Number(session_dep)===_HRD){\r\n  HRD_login=true;\r\n}\r\n\r\n\r\nvar cot=-1;\r\nclass AttTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        ItemList: \"\",\r\n        depList: \"\",\r\n        q: [1],\r\n        date: new Date(),\r\n        day: '',\r\n        today: Moment().format('YYYY-MM-DD'), //i\r\n        name: '',\r\n        dep: '',\r\n        start: '',\r\n        end: '',\r\n        cyear: '',\r\n        mode: this.props.mode,\r\n        loopCheck: true,\r\n        page: ''\r\n    }\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.dayChange = this.dayChange.bind(this);\r\n    this.depChange = this.depChange.bind(this);\r\n    this.nameChange2 = this.nameChange2.bind(this);\r\n    this.dayChange2 = this.dayChange2.bind(this);\r\n    this.depChange2 = this.depChange2.bind(this);\r\n    this.dateDay = this.dateDay.bind(this);\r\n    this.getWeekly = this.getWeekly.bind(this);\r\n    this.DayReset = this.DayReset.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  DayToSETime(value){\r\n    var getDay=this.dateDay(value)\r\n    var start=Moment(value).add(getDay*-1,'days').format(\"YYYY-MM-DD\")\r\n    var end=Moment(start).add(6,'days').format(\"YYYY-MM-DD\")\r\n    this.setState({\r\n      start: start,\r\n      end: end\r\n    })\r\n    return({start: start,end: end})\r\n  }\r\n  timemap(time){          //일간 처음 빈공간을 구해줌\r\n    var arr=[];\r\n    var temp = new Date(\"2020-11-11 \"+time)\r\n    var temp2=(Moment(temp).format(\"HH\"))*6\r\n    var mit=Moment(temp).format(\"mm\")/10+temp2\r\n    for (var index = 30; index < mit; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap2(in_time1,in_time2){ //일간 색깔 공간을 구해줌\r\n    var arr=[];\r\n    var time1 = new Date(\"2020-11-11 \"+in_time1)\r\n    var time2 = new Date(\"2020-11-11 \"+in_time2)\r\n    var sh=Moment(time1).format(\"HH\")\r\n    var eh=Moment(time2).format(\"HH\")\r\n    var sm=Moment(time1).format(\"mm\")\r\n    var em=Moment(time2).format(\"mm\")\r\n    var hh=(eh-sh)*6\r\n    var rm=(em-sm)/10\r\n    var sum=hh+rm\r\n    for (var index = 3; index < sum; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap3(time1,time2){      //1,2채우고 나머지공간을 구해줌\r\n    var arr=[];\r\n    var timesum=this.timemap(time1).length+this.timemap2(time1,time2).length;\r\n    for (var index = 0; index < 116-timesum; index++) {\r\n      arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  dateDay(day){     //입력받은 날짜의 요일을 구해줌\r\n    return new Date(day).getDay();\r\n  }\r\n  countSeconds = (str) => {     //HH:MM:SS=>cenond\r\n    const [hh = '0', mm = '0', ss = '0'] = (str || '0:0:0').split(':');\r\n    const hour = parseInt(hh, 10) || 0;\r\n    const minute = parseInt(mm, 10) || 0;\r\n    const second = parseInt(ss, 10) || 0;\r\n    return (hour*3600) + (minute*60) + (second);\r\n  }\r\n  reseconds = (seconds) => {    //cenond=>HH:MM:SS\r\n    var hour = parseInt(seconds/3600);\r\n    var min = parseInt((seconds%3600)/60);\r\n    var sec = seconds%60;\r\n\r\n    return this.septo(hour)+':'+this.septo(min)+':'+this.septo(sec)\r\n  }\r\n  septo = (tt) =>{            //한자릿수를 두자리수로\r\n    if(tt<10){\r\n      tt='0'+tt;\r\n    }\r\n    return tt;\r\n  }\r\n  subsec = (sec1,sec2) =>{        //시간을 빼는 함수\r\n    var result;\r\n    if(sec1===0 || sec2===0){\r\n      result=0;\r\n    }else{\r\n      result=sec1-sec2;\r\n    }\r\n    return result;\r\n  }\r\n  nameChange = (e) => {         //name변경\r\n    this.setState({\r\n      name: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/'+1+'/'+this.state.page.cntPerPage+'?day='+this.state.day+'&name='+e.target.value+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  dayChange = (e) => {        //day변경\r\n    const {page}=this.state;\r\n    this.setState({\r\n      day: e.target.value,\r\n      loopCheck: true\r\n    })\r\n    this.DayToSETime(e.target.value);\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/'+1+'/'+page.cntPerPage+'?day='+e.target.value+'&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  depChange = (e) => {        //dep변경\r\n    const {page}=this.state;\r\n    this.setState({\r\n      dep: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/1/'+page.cntPerPage+'?day='+this.state.day+'&name='+this.state.name+'&dep='+e.target.value),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  nameChange2 = (e) => {      //주간 name변경\r\n    this.setState({\r\n      name: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+this.state.start+'&end='+this.state.end+'&name='+e.target.value+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  dayChange2 = (e) => {       //주간 day변경\r\n    var Time=this.DayToSETime(e.target.value);\r\n    this.setState({\r\n      day: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+Time.start+'&end='+Time.end+'&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  depChange2 = (e) => {       //주간 dep변경\r\n    this.setState({\r\n      dep: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+this.state.start+'&end='+this.state.end+'&name='+this.state.name+'&dep='+e.target.value),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  CyearChange = (e) =>{\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attCyear?year='+e.target.value),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        cyear: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  getWeekly(day){\r\n    var getDay=this.dateDay(day)\r\n    var start=Moment(day).add(getDay*-1,'days').format(\"YYYY-MM-DD\")\r\n    var end=Moment(start).add(6,'days').format(\"YYYY-MM-DD\")\r\n    this.setState({\r\n      start: start,\r\n      end: end\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+start+'&end='+end+'&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  DayReset(){\r\n    var day=document.getElementsByClassName(\"day\")\r\n    for(var i=0;i<day.length;i++){\r\n      day[i].value=\"\";\r\n    }\r\n    this.setState({\r\n      day: '',\r\n      loopCheck: true\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/1/10?day=&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list,\r\n        page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  makeYears(yyyy){\r\n    var result=[];\r\n    for(var i=4;i>=0;i--) result.push(Number(yyyy)-i)\r\n    for(var l=1;l<5;l++) result.push(Number(yyyy)+l)\r\n    return result;\r\n  }\r\n  makedata(dep){\r\n    const { cyear } = this.state;\r\n    var re=[]\r\n    var cyears=[]\r\n    for(var i=0;i<cyear.length;i++){\r\n      if(Number(cyear[i].department)===Number(dep)){\r\n        cyears.push(cyear[i])\r\n      }\r\n    }\r\n\r\n    for(var a=1;a<=12;a++){\r\n      var bool=true;\r\n      for(var n=0;n<cyears.length;n++){\r\n        if(Number(cyears[n].name)===a) {\r\n          re.push(cyears[n].rank)\r\n          bool=false;\r\n        }\r\n      }\r\n      if(bool) re.push(0)\r\n    }\r\n     console.log(re);\r\n    return re;\r\n  }\r\n  cyearsMake(){ //연도별 데이터 만들기\r\n    const { depList } = this.state;\r\n    var result=[];\r\n    var Tlabel,Tbgc,Tdata=[];\r\n    var rgbController=0;\r\n    const rgb=[\"rgb(400,100,100,0.9)\",\"rgb(170,300,170,0.9)\",\"rgb(210,10,310,0.9)\",\r\n      \"rgb(250,250,250,0.9)\",\"rgb(290,290,290,0.9)\",\"rgb(333,333,331,0.9)\"]\r\n    for(var i=0;i<depList.length;i++){\r\n      Tlabel=depList[i].name;\r\n      Tbgc=rgb[rgbController];\r\n      Tdata=this.makedata(depList[i].no);\r\n      var temp={\r\n        label: Tlabel,\r\n        backgroundColor: Tbgc,\r\n        data: Tdata\r\n      };\r\n      result.push(temp);rgbController++;\r\n      if(rgbController>6) rgbController=0;\r\n    }\r\n\r\n    return result;\r\n  }\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/api2/att/1/10\")\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              ItemList: res.data.list,\r\n              page: res.data.page\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/api/depart\")\r\n    .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          depList: res.data.depart\r\n        })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n  selChange() { //몇줄로 볼지\r\n    var sel = document.getElementById('cntPerPage').value;\r\n    if(sel===\"\"){\r\n      sel=0;\r\n    }\r\n    this.movePage(1,sel)\r\n  }\r\n  pageChange(selPage){ //페이지 이동 클릭\r\n    const {page}=this.state;\r\n    this.movePage(selPage,page.cntPerPage)\r\n  }\r\n  nextpage(){ //다음 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.endPage+1,page.cntPerPage)\r\n  }\r\n  prevpage(){ //이전 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.startPage-1,page.cntPerPage)\r\n  }\r\n  movePage(nowpage,perpage){ //페이지 이동\r\n    var add\r\n    if(this.state.dep.length + this.state.name.length + this.state.day.length > 0){\r\n      add=\"http://localhost:8080/api2/attfind/\"+nowpage+\"/\"+perpage+\"?day=\"\r\n      +this.state.day+\"&name=\"+this.state.name+\"&dep=\"+this.state.dep\r\n    }else{\r\n      add=\"http://localhost:8080/api2/att/\"+nowpage+\"/\"+perpage\r\n    }\r\n    axios.get(add)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              ItemList: res.data.list,\r\n              page: res.data.page\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n  }\r\n  makeMap(start,end){ //배열 만드는 함수\r\n    var result=[];\r\n    for(var i=start;i<=end;i++){\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { ItemList } = this.state;\r\n    const { depList } = this.state;\r\n    const { page } = this.state;\r\n    const { q } = this.state;\r\n    const { cyear } = this.state;\r\n    var years;\r\n    var temp=[];\r\n    var Tname='';\r\n    var tempString='';\r\n    var depname='';\r\n    var cyearDATA=[];\r\n    const style={width: \"70%\"}\r\n    if(this.props.mode===_Chart){\r\n      years=this.makeYears(new Date().getFullYear());\r\n      if(cyear.length>0){\r\n        cyearDATA=this.cyearsMake();\r\n      }\r\n    }\r\n    if(this.props.mode===_weekly){\r\n      if(this.state.day===''){\r\n        this.getWeekly(this.state.today)\r\n        this.setState({day: this.state.today})\r\n      }else if(this.state.loopCheck){\r\n        this.getWeekly(this.state.day)\r\n        this.setState({loopCheck: false})\r\n      }\r\n      if(ItemList.length>0){\r\n        var num=ItemList[0].employee_no;\r\n        for(var i=0;i<ItemList.length;i++){\r\n          for(var l=0;l<depList.length;l++){\r\n            if(ItemList[i].department*1===depList[l].no){\r\n              depname=depList[l].name\r\n            }\r\n          }\r\n          if(ItemList[i].employee_no===num){\r\n            tempString = tempString + '/'+ ItemList[i].day;\r\n            Tname=ItemList[i].name+\"(\"+depname+\")\"\r\n          }else{\r\n            temp.push({\r\n              days: tempString,\r\n              name: Tname\r\n            })\r\n            tempString='/'+ ItemList[i].day;\r\n            num=ItemList[i].employee_no\r\n            Tname=ItemList[i].name+\"(\"+depname+\")\"\r\n          }\r\n          if(i===ItemList.length-1){\r\n            temp.push({\r\n              days: tempString,\r\n              name: Tname\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.mode===_default &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"email\" id=\"email-input\" onChange={this.nameChange} value={this.state.name} name=\"email-input\" placeholder=\"name\" autoComplete=\"name\"/>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CSelect custom id=\"ccyear\" onChange={this.depChange} value={this.state.dep} name=\"dep-input\">\r\n                  <option value=\"\">부서선택</option>\r\n                    {depList&&depList.map((itemdata, insertIndex) => {\r\n                      return(<option value={itemdata.no} >{insertIndex+1}.{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"success\" onClick={() =>{this.DayReset()}}>날짜 초기화</CButton>\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n            <div style={{float: \"right\"}}>\r\n              <PaymentInsert kind={\"attendance\"} data={ItemList}/>\r\n              몇줄<input type=\"number\" id=\"cntPerPage\" name=\"sel\" onChange={() => {this.selChange()}} >\r\n                {this.state.cntPerPage}\r\n              </input>\r\n            </div>\r\n            <table name=\"ATT\" class=\"default\">\r\n            <thead>\r\n              <tr class=\"default\">\r\n                <td class=\"default\">NO</td><td class=\"default\">근무일자</td><td class=\"default\">부서</td>\r\n                <td class=\"default\">이름</td><td class=\"default\">직급</td><td class=\"default\">출근시간</td>\r\n                <td class=\"default\">퇴근시간</td><td class=\"default\">출근구분</td><td class=\"default\">퇴근구분</td>\r\n                <td class=\"default\">연장근무시간</td><td class=\"default\">총근무시간</td>\r\n                <td class=\"default\" id=\"del\">수정</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ItemList&&ItemList.map((att, insertIndex) => {\r\n              var bool = \"정상\"\r\n              var bool2 = \"정상\"\r\n              var time = \"09:00:00\"\r\n              var time2 = \"17:00:00\"\r\n              if(this.countSeconds(time)<this.countSeconds(att.start_time)){\r\n                bool = \"지각\"\r\n              }\r\n              if(att.end_time==null){\r\n                bool2 = \"\"\r\n              }else if(this.countSeconds(att.end_time)<this.countSeconds(time2)){\r\n                bool2 = \"조퇴\"\r\n              }else if(att.night){\r\n                bool2 = \"연장\"\r\n              }\r\n              return (\r\n              <tr class=\"default\">\r\n                  <td class=\"default\">{att.no}</td>\r\n                  <td class=\"default\">{att.day}</td>\r\n                  {depList&&depList.map((dep) => {\r\n                    if(dep.no===(Number(att.department))) return <td class=\"default\">{dep.name}</td>;\r\n                    else return null;\r\n                  })}\r\n\r\n                  <td class=\"default\">{att.name}</td>\r\n                  <td class=\"default\">{att.rank}</td>\r\n                  <td class=\"default\">{att.start_time}</td>\r\n                  <td class=\"default\">{att.end_time}</td>\r\n                  <td class=\"default\">{bool}</td>\r\n                  <td class=\"default\">{bool2}</td>\r\n                  <td class=\"default\">{att.night === 1 && this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(time2)))}</td>\r\n                  <td class=\"default\">{this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(att.start_time)))}</td>\r\n                  {HRD_login===true ? <td id={insertIndex} class=\"default\"><Link to={`/Attendance/${att.no}`}>수정</Link></td>:\"\"}\r\n                </tr>\r\n              );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n            {ItemList.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n            <br/>\r\n            <nav aria-label=\"pagination\">\r\n              <ul class=\"pagination justify-content-center\">\r\n                {page.startPage !== 1 ?\r\n                  <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n                {this.makeMap(page.startPage,page.endPage).map((i) => {\r\n                  if(page.nowPage===i){\r\n                    return(<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                  }else{\r\n                    return(<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                  }\r\n                })}\r\n                {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        }\r\n        {this.props.mode===_weekly &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange2}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"email\" id=\"email-input\" onChange={this.nameChange2} value={this.state.name} name=\"email-input\" placeholder=\"name\" autoComplete=\"name\"/>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CSelect custom id=\"ccyear\" onChange={this.depChange2} value={this.state.dep}>\r\n                  <option value=\"\">부서선택</option>\r\n                    {depList&&depList.map((itemdata, insertIndex) => {\r\n                      return(<option value={itemdata.no} >{insertIndex+1}.{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n\r\n            <table class=\"b\" width=\"100%\" >\r\n            <caption>{this.state.start}~{this.state.end}</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"10%\" class=\"a\"></th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(0,'days').format(\"MM-DD\")}     [일]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(1,'days').format(\"MM-DD\")}     [월]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(2,'days').format(\"MM-DD\")}     [화]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(3,'days').format(\"MM-DD\")}     [수]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(4,'days').format(\"MM-DD\")}     [목]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(5,'days').format(\"MM-DD\")}     [금]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(6,'days').format(\"MM-DD\")}     [토]</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {temp&&temp.map((itemdata) => {\r\n                    cot=cot+1;\r\n                    if(cot>=4) cot=0;\r\n                    var day=itemdata.days.split(\"/\");\r\n\r\n                    return(\r\n                      <tr><td class=\"sm\">{itemdata.name}</td>\r\n                      {_week.map((z) => {\r\n                        var bool=0;\r\n                          for(var a=0;a<day.length;a++){\r\n                            if(z===this.dateDay(day[a])){\r\n                              bool=1;\r\n                            }\r\n                          }\r\n                          if(bool===1){\r\n                            return(<td bgcolor={_color[cot]} class=\"a\"></td>);\r\n                          }else return(<td class=\"a\"></td>);\r\n                      })}\r\n                      </tr>\r\n                    );\r\n              })}\r\n              </tbody>\r\n            </table>\r\n            {temp.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n          </div>\r\n        }\r\n        {this.props.mode===_monthly &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"email\" id=\"email-input\" onChange={this.nameChange} value={this.state.name} name=\"email-input\" placeholder=\"name\" autoComplete=\"name\"/>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CSelect custom id=\"ccyear\" onChange={this.depChange} value={this.state.dep}>\r\n                  <option value=\"\">부서선택</option>\r\n                    {depList&&depList.map((itemdata, insertIndex) => {\r\n                      return(<option value={itemdata.no} >{insertIndex+1}.{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"success\" onClick={() =>{this.DayReset()}}>날짜 초기화</CButton>\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n              <table class=\"b\" width=\"100%\" >\r\n              <thead>\r\n\r\n                <tr>\r\n                  <th width=\"11%\" >{this.state.day}</th>\r\n                  {_numbers.map((member,) => {\r\n                    return(\r\n                      <th width=\"4%\" class=\"default\" colSpan=\"6\">{member}</th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {ItemList&&ItemList.map((itemdata, insertIndex) => {\r\n                    cot=cot+1;\r\n                    if(cot>=4) cot=0;\r\n                    var count=0;\r\n                    return(\r\n                      <tr key={insertIndex}>\r\n                        <td  class=\"b\">{itemdata.name}\r\n                          {depList&&depList.map((dep, insertIndex2) => {\r\n                            if(dep.no===(itemdata.department*=1)) return <font size=\"1\">({dep.name})[{itemdata.day}]</font>;\r\n                            else return null;\r\n                          })}\r\n                        </td>\r\n                        {this.timemap(itemdata.start_time).map((d,insertIndex2) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td name={insertIndex2}></td> );}\r\n                          else{count=0; return( <td name={insertIndex2} class=\"e\"></td> );}\r\n                        })}\r\n                        {q.map((f,insertIndex11) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td bgcolor={_color[cot]} id=\"c\"></td> );}\r\n                          else{count=0; return( <td name={insertIndex11} class=\"e\" ></td> );}\r\n                        })}\r\n                        {this.timemap2(itemdata.start_time,itemdata.end_time).map((c,insertIndex3) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td bgcolor={_color[cot]}name={insertIndex3}></td> );}\r\n                          else{count=0; return( <td bgcolor={_color[cot]}name={insertIndex3} class=\"e\"></td> );}\r\n                          })}\r\n                        {q.map((g,insertIndex11) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td bgcolor={_color[cot]} id=\"d\"></td> );}\r\n                          else{count=0; return( <td name={insertIndex11} class=\"e\" ></td> );}\r\n                        })}\r\n                        {this.timemap3(itemdata.start_time,itemdata.end_time).map((h,insertIndex4) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td name={insertIndex4}></td> );}\r\n                          else{count=0; return( <td name={insertIndex4} class=\"e\"></td> );}\r\n                        })}\r\n                        <td class=\"end\"></td>\r\n                      </tr>\r\n                    );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            {ItemList.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n          </div>\r\n        }\r\n        {this.props.mode===_Chart &&\r\n          <div>\r\n              <CCard>\r\n                <CCardHeader>\r\n                  <div style={{width: \"30%\"}}>\r\n                  <CRow className=\"align-items-center\">\r\n                    <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                    부서별 차트\r\n                    </CCol>\r\n                    <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                      <CSelect custom id=\"ccyear\" name=\"Cyear\" onChange={this.CyearChange} width=\"6px\">\r\n                        <option>연도 입력</option>\r\n                        {years.map((year)=>{\r\n                          return(\r\n                            <option value={year}>{year}</option>\r\n                            );\r\n                          })}\r\n                      </CSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                  </div>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                <CChartLine\r\n                    datasets={cyearDATA}\r\n                    options={{tooltips: { enabled: true}}}\r\n                    labels=\"months\"\r\n                />\r\n                </CCardBody>\r\n              </CCard>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttTable;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Att_view.js",["851","852","853","854","855"],"import React, { Component,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from '@fullcalendar/list';\r\nimport '../Template/css/table.css';\r\nimport Moment from \"moment\"\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CLabel} from '@coreui/react'\r\n\r\nimport {\r\n  CButton,\r\n  CRow,CInput\r\n} from '@coreui/react'\r\nvar session_no=window.sessionStorage.getItem('no');\r\nconst _default=0,_Chart=3;\r\n\r\nclass AttTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        ItemList: \"\",\r\n        depList: \"\",\r\n        q: [1],\r\n        date: new Date(),\r\n        day: '',\r\n        today: Moment().format('YYYY-MM-DD'), //i\r\n        name: '',\r\n        dep: '',\r\n        start: '',\r\n        end: '',\r\n        cyear: '',\r\n        mode: this.props.mode,\r\n        loopCheck: true,\r\n        page: '',\r\n        events: [],\r\n        view: false,\r\n        fir: true,\r\n        page2:\"\"\r\n    }\r\n    this.dayChange = this.dayChange.bind(this);\r\n    this.dateDay = this.dateDay.bind(this); \r\n    this.DayReset = this.DayReset.bind(this); \r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  DayToSETime(value){\r\n    var getDay=this.dateDay(value)\r\n    var start=Moment(value).add(getDay*-1,'days').format(\"YYYY-MM-DD\")\r\n    var end=Moment(start).add(6,'days').format(\"YYYY-MM-DD\")\r\n    this.setState({\r\n      start: start,\r\n      end: end\r\n    })\r\n    return({start: start,end: end})\r\n  }\r\n  timemap(time){          //일간 처음 빈공간을 구해줌\r\n    var arr=[];\r\n    var temp = new Date(\"2020-11-11 \"+time)\r\n    var temp2=(Moment(temp).format(\"HH\"))*6\r\n    var mit=Moment(temp).format(\"mm\")/10+temp2\r\n    for (var index = 30; index < mit; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap2(in_time1,in_time2){ //일간 색깔 공간을 구해줌\r\n    var arr=[];\r\n    var time1 = new Date(\"2020-11-11 \"+in_time1)\r\n    var time2 = new Date(\"2020-11-11 \"+in_time2)\r\n    var sh=Moment(time1).format(\"HH\")\r\n    var eh=Moment(time2).format(\"HH\")\r\n    var sm=Moment(time1).format(\"mm\")\r\n    var em=Moment(time2).format(\"mm\")\r\n    var hh=(eh-sh)*6\r\n    var rm=(em-sm)/10\r\n    var sum=hh+rm\r\n    for (var index = 3; index < sum; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap3(time1,time2){      //1,2채우고 나머지공간을 구해줌\r\n    var arr=[];\r\n    var timesum=this.timemap(time1).length+this.timemap2(time1,time2).length;\r\n    for (var index = 0; index < 116-timesum; index++) {\r\n      arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  dateDay(day){     //입력받은 날짜의 요일을 구해줌\r\n    return new Date(day).getDay();\r\n  }\r\n  countSeconds = (str) => {     //HH:MM:SS=>cenond\r\n    const [hh = '0', mm = '0', ss = '0'] = (str || '0:0:0').split(':');\r\n    const hour = parseInt(hh, 10) || 0;\r\n    const minute = parseInt(mm, 10) || 0;\r\n    const second = parseInt(ss, 10) || 0;\r\n    return (hour*3600) + (minute*60) + (second);\r\n  }\r\n  reseconds = (seconds) => {    //cenond=>HH:MM:SS\r\n    var hour = parseInt(seconds/3600);\r\n    var min = parseInt((seconds%3600)/60);\r\n    var sec = seconds%60;\r\n    \r\n    return this.septo(hour)+':'+this.septo(min)+':'+this.septo(sec)\r\n  }\r\n  septo = (tt) =>{            //한자릿수를 두자리수로\r\n    if(tt<10){\r\n      tt='0'+tt;\r\n    }\r\n    return tt;\r\n  }\r\n  subsec = (sec1,sec2) =>{        //시간을 빼는 함수\r\n    var result;\r\n    if(sec1===0 || sec2===0){\r\n      result=0;\r\n    }else{\r\n      result=sec1-sec2;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  dayChange = (e) => {        //day변경 \r\n    const {page}=this.state;\r\n    this.setState({\r\n      day: e.target.value,\r\n      loopCheck: true\r\n    })\r\n    this.DayToSETime(e.target.value);\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+page.cntPerPage+'?day='+e.target.value+'&name='+session_no+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n\r\n  DayReset(){\r\n    var day=document.getElementsByClassName(\"day\")\r\n    for(var i=0;i<day.length;i++){\r\n      day[i].value=\"\";\r\n    }\r\n    this.setState({\r\n      day: '',\r\n      loopCheck: true\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+10+'?day=&name='+session_no+'&dep='),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({ \r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n\r\n  getApi = () => {\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+10+'?day=&name='+session_no+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({ \r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  selChange() { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    this.movePage(1,sel)\r\n  }\r\n  pageChange(selPage){ //페이지 이동 클릭\r\n    const {page}=this.state;\r\n    this.movePage(selPage,page.cntPerPage)\r\n  }\r\n  nextpage(){ //다음 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.endPage+1,page.cntPerPage)\r\n  }\r\n  prevpage(){ //이전 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.startPage-1,page.cntPerPage)\r\n  }\r\n  movePage(nowpage,perpage){ //페이지 이동\r\n    var add\r\n    if(this.state.day.length > 0){\r\n      add=\"http://localhost:8080/api2/attgetno/\"+nowpage+\"/\"+perpage+\"?day=\"+this.state.day\r\n    +\"&name=\"+session_no+\"&dep=\"+this.state.dep\r\n    }else{\r\n      add=\"http://localhost:8080/api2/attgetno/\"+nowpage+\"/\"+perpage+'?day=&name='+session_no+'&dep='+this.state.dep\r\n    }\r\n    axios.get(add)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              ItemList: res.data.list,\r\n              page: res.data.page\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n  }\r\n  makeMap(start,end){ //배열 만드는 함수\r\n    var result=[];\r\n    for(var i=start;i<=end;i++){\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getCalendar=()=>{\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+10000000+'?day=&name='+session_no+'&dep='),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({ \r\n          events: this.data__event(res.data.list)\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n\r\n  data__event(data){\r\n    let events = [];\r\n\r\n    for(var i=0;i<data.length;i++){\r\n      if(data[i].end_time===null) data[i].end_time=\"ing\";\r\n      let temp={\r\n        id: data[i].no,\r\n        title: data[i].start_time+\"~\"+data[i].end_time,\r\n        date: data[i].day,\r\n        color: \"#FF5675\"\r\n      };\r\n      events.push(temp)\r\n    }\r\n    return events;\r\n  }\r\n\r\n  eventClick=(info)=>{\r\n    this.setState({\r\n      view: true,\r\n      title: info.event.title,\r\n      start: Moment(info.event.start).format('YYYY-MM-DD').split(\"-\"),\r\n      end: Moment(info.event.end).format(\"YYYY-MM-DD\")\r\n    });\r\n  }\r\n\r\n  handleClose=()=> {\r\n    this.setState({\r\n      view: false\r\n    })\r\n  }\r\n\r\n  chage=(event)=>{\r\n    this.setState({\r\n      page2: event\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ItemList } = this.state;\r\n    const { page } = this.state;\r\n    const style={width: \"35%\"};\r\n    if(this.props.mode===_Chart){\r\n      if(this.state.fir){\r\n        this.getCalendar();\r\n        this.setState({\r\n          fir:false\r\n        })\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        {this.props.mode===_default &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n                \r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"success\" onClick={() =>{this.DayReset()}}>날짜 초기화</CButton>\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n            <div style={{float: \"right\"}}>\r\n              <select id=\"cntPerPage\" name=\"sel\" onChange={() => {this.selChange()}}>\r\n                <option value=\"5\">5줄 보기</option>\r\n                <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n                <option value=\"15\">15줄 보기</option>\r\n                <option value=\"20\">20줄 보기</option>\r\n              </select>\r\n            </div>\r\n            <table name=\"ATT\" class=\"default\">\r\n            <thead>\r\n              <tr class=\"default\">\r\n                <td class=\"default\">NO</td><td class=\"default\">근무일자</td>\r\n                <td class=\"default\">이름</td><td class=\"default\">출근시간</td>\r\n                <td class=\"default\">퇴근시간</td><td class=\"default\">출근구분</td><td class=\"default\">퇴근구분</td>\r\n                <td class=\"default\">연장근무시간</td><td class=\"default\">총근무시간</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ItemList&&ItemList.map((att) => {\r\n              var bool = \"정상\"\r\n              var bool2 = \"정상\"\r\n              var time = \"09:00:00\"\r\n              var time2 = \"17:00:00\"\r\n              if(this.countSeconds(time)<this.countSeconds(att.start_time)){\r\n                bool = \"지각\"\r\n              }\r\n              if(att.end_time==null){\r\n                bool2 = \"\"\r\n              }else if(this.countSeconds(att.end_time)<this.countSeconds(time2)){\r\n                bool2 = \"조퇴\"\r\n              }else if(att.night){\r\n                bool2 = \"연장\"\r\n              }\r\n              return (\r\n              <tr class=\"default\">\r\n                  <td class=\"default\">{att.no}</td>\r\n                  <td class=\"default\">{att.day}</td>\r\n                  <td class=\"default\">{att.name}</td>\r\n                  <td class=\"default\">{att.start_time}</td>\r\n                  <td class=\"default\">{att.end_time}</td>\r\n                  <td class=\"default\">{bool}</td>\r\n                  <td class=\"default\">{bool2}</td>\r\n                  <td class=\"default\">{att.night === 1 && this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(time2)))}</td>\r\n                  <td class=\"default\">{this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(att.start_time)))}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n            </tbody> \r\n          </table>\r\n            {ItemList.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n        \r\n            <br/>\r\n            <nav aria-label=\"pagination\">\r\n              <ul class=\"pagination justify-content-center\">\r\n                {page.startPage !== 1 ? \r\n                  <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n                {this.makeMap(page.startPage,page.endPage).map((i) => {\r\n                  if(page.nowPage===i){\r\n                    return(<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                  }else{\r\n                    return(<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                  }\r\n                })}\r\n                {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n              </ul>\r\n            </nav>\r\n          </div>         \r\n        }       \r\n        {this.props.mode===_Chart &&\r\n          <div>\r\n              <FullCalendar\r\n                defaultView=\"timeGridDay\"\r\n                headerToolbar= {{\r\n                  left: 'prev,next today',\r\n                  center: 'title',\r\n                  right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n                }}\r\n                plugins={[dayGridPlugin, timeGridPlugin,listPlugin]}\r\n                navLinks= {true} \r\n                nowIndicator= {true}\r\n                weekNumberCalculation= 'ISO'\r\n                editable= {true}\r\n                selectable= {true}\r\n                dayMaxEvents= {true}\r\n                events={this.state.events}\r\n                eventClick={this.eventClick}\r\n                />\r\n                <Dialog open={this.state.view} onClose={this.handleClose}>\r\n                    <DialogTitle>\r\n                      {this.state.start[0]}년\r\n                      {this.state.start[1]}월\r\n                      {this.state.start[2]}일\r\n                    </DialogTitle>\r\n                    <DialogContent>          \r\n                      <CFormGroup row>\r\n                        <CCol md=\"6\">\r\n                          <CLabel htmlFor=\"start_date\">시간</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                        <font>{this.state.title}</font>\r\n                        </CCol>\r\n                      </CFormGroup>\r\n                  </DialogContent>\r\n          \r\n                  <DialogActions>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n          </div>\r\n        }\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttTable;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingAdd.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\RequestPay.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Pay\\CancelPay.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailUpdate.js",["856","857"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport CreateUser from \"./StatementDetailCreate\";\r\nimport UserList from \"./StatementDetailList\";\r\n\r\n\r\nfunction StatementDetailUpdate(props) {\r\n  const [inputs, setInputs] = useState({\r\n    note: '',\r\n    debtor: '',\r\n    creditor: '',\r\n    account: '',\r\n    customer: '',\r\n  });\r\n\r\n  const {note, debtor, creditor, account, customer} = inputs;\r\n\r\n  const onChange = e => {\r\n    const {name, value} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const [users, setUsers] = useState([\r\n\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    console.log(props.statementDetails)\r\n    setUsers(props.statementDetails);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.setData(users);\r\n  }, [users]);\r\n\r\n\r\n\r\n  const nextId = useRef(props.statementDetails.length);\r\n\r\n  const onCreate = () => {\r\n    const user = {\r\n      line: nextId.current,\r\n      statement: props.id,\r\n      note,\r\n      debtor,\r\n      creditor,\r\n      account,\r\n      customer\r\n    };\r\n    setUsers([...users, user]);\r\n\r\n    setInputs({\r\n      note: '',\r\n      debtor: '',\r\n      creditor: '',\r\n      account: '',\r\n      customer: '',\r\n    });\r\n    nextId.current += 1;\r\n  };\r\n\r\n  const onRemove = line => {\r\n    setUsers(users.filter(user => user.line !== line));\r\n  };\r\n\r\n  const updateFieldChanged = line => e => {\r\n    let newArr = [...users];\r\n    let propertyName = e.target.name;\r\n    newArr[line][propertyName] = e.target.value;\r\n    setUsers(newArr);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n      <thead>\r\n      <tr>\r\n        <td>/</td>\r\n        <td>계정과목</td>\r\n        <td>라인 적요</td>\r\n        <td>차변</td>\r\n        <td>대변</td>\r\n        <td>거래처</td>\r\n      </tr>\r\n      </thead>\r\n      </table>\r\n      <UserList users={users}\r\n                onRemove={onRemove}\r\n                updateFieldChanged={updateFieldChanged}\r\n                disabled={props.disabled}\r\n                buttonDisabled={props.disabled}/>\r\n\r\n      <CreateUser\r\n        note={note}\r\n        debtor={debtor}\r\n        creditor={creditor}\r\n        account={account}\r\n        customer={customer}\r\n        onChange={onChange}\r\n        onCreate={onCreate}\r\n        disabled={props.disabled}\r\n        buttonDisabled={props.disabled}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatementDetailUpdate;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\MasageInsert.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailList.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailCreate.js",[],["858","859"],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\events.js",["860"],"export default [\r\n    {\r\n      id: 0,\r\n      title: \"All Day Event very long title\",\r\n      date: \"2021-02-05\"\r\n    }\r\n  ];\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementAdd.js",["861"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, withStyles,} from \"@material-ui/core\";\r\nimport {CButton, CCard, CCardBody, CCardHeader, CCol, CFormGroup, CFormText, CInput, CLabel, CRow} from '@coreui/react'\r\nimport StatementDetailAdd from \"./StatementDetailAdd\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n\r\n});\r\n\r\n\r\nclass StatementAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    let session_branch=window.sessionStorage.getItem('branch');\r\n    this.state = {\r\n      workplace: \"1000\",\r\n      employee: session_no,\r\n      branch: session_branch,\r\n      allNote:\"\",\r\n      proofDate:'',\r\n      reportingDate :'',\r\n      list:'',\r\n\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.createStatement = this.createStatement.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.createStatement()\r\n    this.setState({\r\n      workplace: \"1000\",\r\n      allNote:\"\",\r\n      proofDate:'',\r\n      reportingDate :'',\r\n      list:'',\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.handleClose();\r\n  }\r\n\r\n  createStatement() {\r\n    axios({\r\n      url: 'http://localhost:8080/statement',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        workplace: this.state.workplace,\r\n        employee: this.state.employee,\r\n        branch: this.state.branch,\r\n        allNote:this.state.allNote,\r\n        proofDate: this.state.proofDate,\r\n        reportingDate : this.state.reportingDate,\r\n        list:this.state.list,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      workplace: \"1000\",\r\n      allNote:\"\",\r\n      proofDate:'',\r\n      reportingDate :'',\r\n      list:'',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n   this.setState(nextState);\r\n  }\r\n\r\n  setData = (info) => {\r\n    console.log(info)\r\n    this.setState({\r\n      list:info,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n        <CButton variant=\"outline\" color=\"primary\" onClick={this.handleClickOpen}>\r\n          전표생성\r\n        </CButton>\r\n        </CCol>\r\n\r\n        <Dialog open={this.state.open} onClose={this.handleClose} maxWidth={true}>\r\n          <DialogTitle>전표생성</DialogTitle>\r\n          <DialogContent>\r\n            <CRow>\r\n              <CCol>\r\n                <CCard>\r\n                  <CCardHeader>\r\n                    기본 정보\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n            <CFormGroup row className=\"my-0\">\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"workplace\">사업장</CLabel>\r\n                  <CInput id=\"workplace\" value={this.state.workplace} disabled={true} />\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"branch\">지점코드</CLabel>\r\n                  <CInput id=\"branch\" value={this.state.branch} disabled={true} />\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"employee\">작성자(사번)</CLabel>\r\n                  <CInput id=\"employee\" value={this.state.employee} disabled={true}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row className=\"my-0\">\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"reportingDate\">작성일</CLabel>\r\n                  <CInput id=\"reportingDate\" type=\"date\" name=\"reportingDate\"\r\n                          value={this.state.reportingDate}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"proofDate\">증빙일</CLabel>\r\n                  <CInput id=\"proofDate\" type=\"date\" name=\"proofDate\"\r\n                          value={this.state.proofDate}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol xs=\"4\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"allNote\">적요</CLabel>\r\n                  <CInput id=\"allNote\" type=\"text\" name=\"allNote\"\r\n                          value={this.state.allNote}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n\r\n            <CRow>\r\n              <CCol>\r\n                <CCard>\r\n                  <CCardHeader>\r\n                    상세 내역\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                  <StatementDetailAdd setData={this.setData}/>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>작성</Button>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n\r\n  </div>\r\n  )\r\n\r\n  }\r\n\r\n  }\r\n\r\n\r\n  export default withStyles(styles)(StatementAdd)\r\n\r\n\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js",["862"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CButton, CCol, CFormGroup, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, Grid, IconButton, Select, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExamAdd from \"./ExamAdd\";\r\nimport ExamUpdate from \"./ExamUpdate\";\r\nimport ExamDelete from \"./ExamDelete\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass Exam extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lectureList: \"\",\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n    }\r\n\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.lectureSelect = this.lectureSelect.bind(this);\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.id !== prevProps.id)\r\n    {\r\n      this.getDetail()\r\n    }\r\n  }\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getExam = () => {\r\n    axios.get(\"http://localhost:8080/exam?lecture=\"+this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getDetail = () => {\r\n    axios.get(\"http://localhost:8080/exam/\"+this.state.exam)\r\n      .then(res => {\r\n        if(res.data.list !== null){\r\n          this.setState({\r\n            partDetail: res.data.list,\r\n          })}else{this.setState({\r\n          partDetail:\"\",\r\n        })}\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      examList:\"\",\r\n      totalWeight:\"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  stateRefresh() {\r\n    console.log(\"refresh\")\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      exam: \"\",\r\n      totalWeight:\"\",\r\n    });\r\n    this.getExam();\r\n    this.getDetail();\r\n\r\n  }\r\n\r\n  render() {\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state;\r\n    const {examDetail} = this.state;\r\n    const handleChangeMultiple = (event) => {\r\n      const {options} = event.target;\r\n      const value = [];\r\n      for (let i = 0, l = options.length; i < l; i += 1) {\r\n        if (options[i].selected) {\r\n          value.push(options[i].value);\r\n        }\r\n      }\r\n      axios.get(\"http://localhost:8080/exam/\"+ value)\r\n        .then(res => {\r\n          this.setState({\r\n            examDetail: res.data.list,\r\n            exam: value,\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    };\r\n    return (\r\n      <div>\r\n        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n          <CButton color=\"primary\" color=\"danger\" onClick={this.handleClickOpen}>시험항목 관리</CButton>\r\n        </CCol>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            시험항목 조회</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n                    <option value=\"\">강의</option>\r\n                    {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Button onClick={this.stateRefresh}>새로고침</Button>\r\n                </Grid>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <Select\r\n                    multiple\r\n                    native\r\n                    onChange={handleChangeMultiple} value={this.state.exam}\r\n\r\n                  >\r\n                    {examList && examList.map((itemdata, insertIndex) => {\r\n                      return (<option\r\n                        value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}&nbsp;({itemdata.weight}%)</option>);\r\n                    })}\r\n                  </Select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"6\">\r\n                    <CLabel>가중치 합계</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <p className=\"form-control-static\">{this.state.totalWeight}%</p>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </DialogContent>\r\n          {this.state.lecture !== \"\" &&\r\n          <DialogActions>\r\n            <ExamAdd stateRefresh={this.stateRefresh} lecture={this.state.lecture} teacher={this.state.teacher}/>\r\n            <ExamUpdate stateRefresh={this.stateRefresh} teacher={this.state.teacher} examDetail={examDetail}/>\r\n            <ExamDelete stateRefresh={this.stateRefresh} id={this.state.exam}/>\r\n          </DialogActions>\r\n          }\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Exam)\r\n\r\n\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\statement\\StatementDetailAdd.js",["863"],"import React, {useEffect, useRef, useState} from 'react';\r\nimport CreateUser from \"./StatementDetailCreate\";\r\nimport UserList from \"./StatementDetailList\";\r\n\r\n\r\nfunction StatementDetailAdd(props) {\r\n  const [inputs, setInputs] = useState({\r\n    note: '',\r\n    debtor: '',\r\n    creditor: '',\r\n    account: '',\r\n    customer: '',\r\n  });\r\n\r\n  const {note, debtor, creditor, account, customer} = inputs;\r\n\r\n  const onChange = e => {\r\n    const {name, value} = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const [users, setUsers] = useState([\r\n\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    props.setData(users);\r\n  }, [users]);\r\n\r\n\r\n\r\n  const nextId = useRef(0);\r\n\r\n  const onCreate = () => {\r\n    const user = {\r\n      line: nextId.current,\r\n      note,\r\n      debtor,\r\n      creditor,\r\n      account,\r\n      customer\r\n    };\r\n    setUsers([...users, user]);\r\n\r\n    setInputs({\r\n      note: '',\r\n      debtor: '',\r\n      creditor: '',\r\n      account: '',\r\n      customer: '',\r\n    });\r\n    nextId.current += 1;\r\n  };\r\n\r\n  const onRemove = line => {\r\n    setUsers(users.filter(user => user.line !== line));\r\n  };\r\n\r\n  const updateFieldChanged = line => e => {\r\n    let newArr = [...users];\r\n    let propertyName = e.target.name;\r\n    newArr[line][propertyName] = e.target.value;\r\n    setUsers(newArr);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n      <thead>\r\n      <tr>\r\n        <td>/</td>\r\n        <td>계정과목</td>\r\n        <td>라인 적요</td>\r\n        <td>차변</td>\r\n        <td>대변</td>\r\n        <td>거래처</td>\r\n      </tr>\r\n      </thead>\r\n      </table>\r\n      <UserList users={users}\r\n                onRemove={onRemove}\r\n                updateFieldChanged={updateFieldChanged}\r\n                disabled={false}\r\n                buttonDisabled={false}/>\r\n\r\n      <CreateUser\r\n        onChange={onChange}\r\n        onCreate={onCreate}\r\n        disabled={false}\r\n        buttonDisabled={false}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatementDetailAdd;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Stu_att.js",["864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882"],"import React, { Component } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nclass Stu_att extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            attdata: '',\r\n            no: '',\r\n            leclist: '',\r\n            lecture: '',\r\n            date:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Leclist()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    leclist: res.data.list\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    SearchAtt = (name) => {\r\n        ApiService.StuAtt(name)\r\n            .then(res => {\r\n                this.setState({\r\n                    attdata: res.data.attdata\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('SearchAtt() 에러', err)\r\n            })\r\n    }\r\n\r\n    // lectureSelect = (e) => {\r\n    //     this.setState({\r\n    //         findLecture: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    InsertAtt = (e) => {\r\n        e.preventDefault();\r\n        window.localStorage.setItem(\"InsDateAtt\", this.state.date);\r\n        window.localStorage.setItem(\"InsLecAtt\", this.state.lecture);\r\n        console.log(window.localStorage.getItem(\"InsLecAtt\"));\r\n        this.props.history.push('/ins_att');\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const { attdata } = this.state;\r\n        const { leclist } = this.state;\r\n        return (\r\n            <div>\r\n                <CRow>\r\n                    <CCol xs=\"15\" md=\"6\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                학생 출결 등록\r\n                <DocsLink name=\"-Input\" />\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CForm>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">강의선택</CLabel>\r\n                                        </CCol>\r\n                                        <CCol>\r\n                                            <CSelect custom id=\"lecture\" name=\"lecture\" value={this.state.lecture} onChange={this.onChange}>\r\n                                                <option value=\"\">강의</option>\r\n                                                {leclist && leclist.map((itemdata, insertIndex) => {\r\n                                                    return (<option value={itemdata.name}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                                                })}\r\n                                            </CSelect>\r\n                                            <CFormText>강의를 선택하세요</CFormText>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">날짜선택</CLabel>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" md=\"9\">\r\n                                            <CInput type=\"date\" id=\"date-input\" name=\"date\" placeholder=\"date\" value={this.state.date} onChange={this.onChange} />\r\n                                            <CFormText>날짜를 선택하세요</CFormText>\r\n                                        <CButton onClick={this.InsertAtt} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 출결조회 </CButton>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol xs=\"15\" md=\"6\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                학생 출결 조회\r\n                <DocsLink name=\"-Input\" />\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CForm>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" md=\"9\">\r\n                                            <CInput name=\"name\" placeholder=\"이름\" value={this.state.name} onChange={this.onChange} />\r\n                                            <CFormText>이름을 입력하세요</CFormText>\r\n                                            <CButton onClick={() => this.SearchAtt(this.state.name)} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 출결조회 </CButton>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <table>\r\n                                        <tr><td>날짜</td><td>강의명</td><td>출결여부</td></tr>\r\n                                        {attdata && attdata.map((itemdata, insertIndex) => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{itemdata.date}</td>\r\n                                                    <td>{itemdata.lecname}</td>\r\n                                                    {itemdata.att === 0 ? <td>출석</td> : (itemdata.att === 1 ? <td>결석</td> : <td>지각</td>)}\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                        <tr></tr>\r\n                                    </table>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stu_att;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js",["883"],"import React,{ useEffect,useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './table.css';\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CLabel,\r\n    CRow\r\n  } from '@coreui/react'\r\n\r\n  const StudentData =({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        no : '',\r\n        name : '',\r\n        hp : '',\r\n        email : '',\r\n        birth : '',\r\n        address : '',\r\n        lecture : '',\r\n        gender : '',\r\n        regdate : ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        getApi();\r\n    },[]);\r\n\r\n    const {no,name,hp,email,birth,address,lecture,gender,regdate} = inputs;\r\n\r\n    const getApi = () => {\r\n        ApiService.Student(match.params.no)\r\n            .then(res => {\r\n                let stu =  res.data.listdata;\r\n                setInputs({\r\n                    no : stu.no,\r\n                    name : stu.name,\r\n                    hp : stu.hp,\r\n                    email : stu.email,\r\n                    birth : stu.birth,\r\n                    address : stu.address,\r\n                    lecture : stu.lecture,\r\n                    gender : stu.gender,\r\n                    regdate : stu.regdate\r\n                })\r\n                console.log(stu.no)\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const delStu = () => {\r\n        \r\n        ApiService.deleteStudent(match.params.no)\r\n        .then( res => {\r\n            alert('성공적으로 삭제되었습니다.');\r\n            history.push('/students');\r\n        })\r\n        .catch(err => {\r\n            console.log('delStu() Error!', err);\r\n        })\r\n    }\r\n\r\n    const editStu = (NO) => {\r\n        window.localStorage.setItem(\"StudentNO\", match.params.no);\r\n        history.push('/edit_stu');\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        학생 상세 정보\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CForm>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">등록번호</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{no}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{name}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">전화번호</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{hp}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{email}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">생년월일</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{birth}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{address}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">교육과정</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{lecture}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">성별</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{gender}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">등록일</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                <CLabel>{regdate}</CLabel>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                <CButton block color=\"secondary\" onClick={editStu}>수정</CButton>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={delStu}>삭제</CButton>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CForm>\r\n                    </CCardBody>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n    );\r\n  }\r\nexport default StudentData;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js",["884","885","886","887","888","889","890","891"],"import React,{ useEffect,useState } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CPagination,\r\n    CForm,\r\n    CSelect,\r\n    CInput\r\n  } from '@coreui/react'\r\n\r\n\r\nlet currentPages =1;\r\nconst StudentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        StudentList:[],\r\n        // BranchList:[],\r\n        // findBranch:'',\r\n        searchType:\"\",\r\n        searchKey:\"\",\r\n        totalPages :\"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        //getbranch();\r\n        getStudent(1);\r\n    },[]);\r\n\r\n\r\n\r\n    const {StudentList,totalPages,BranchList,findBranch,searchType,searchKey} = inputs;\r\n    \r\n    // const getbranch =() => {\r\n    //     ApiService.Branch()\r\n    //         .then(res => {\r\n    //             console.log(res);\r\n    //             setInputs({\r\n    //                 BranchList:res.data.list\r\n    //             })\r\n    //             console.log(\"123123\" + BranchList.no)\r\n    //         })\r\n    //         .catch(res => console.log(res))\r\n    // }\r\n\r\n    const getStudent =(currentPages) => {\r\n        \r\n        currentPages = currentPages -1\r\n        let size = 5;\r\n    \r\n        ApiService.Students(currentPages,size)\r\n            .then(res => {\r\n                console.log(res);\r\n                setInputs({\r\n                    StudentList : res.data.content,\r\n                    totalPages : res.data.totalPages\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n    const getSearch = () => {\r\n        console.log(searchKey)\r\n        ApiService.SearchStudent(searchKey)\r\n        \r\n        .then(res => {\r\n            console.log(res);\r\n            setInputs({\r\n                StudentList : res.data.content,\r\n                totalPages : res.data.totalPages\r\n            })\r\n        })\r\n        \r\n\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n\r\n    const Paginations = (e) => {\r\n        const [currentPage, setCurrentPage] = useState(currentPages);\r\n            if(currentPages != currentPage){\r\n            currentPages = currentPage;\r\n            getStudent(currentPages)\r\n            }else{\r\n\r\n            }\r\n        return(\r\n        <>\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CPagination\r\n                        activePage={currentPage}\r\n                        pages= {totalPages}\r\n                        onActivePageChange={setCurrentPage}/>\r\n                </CCardBody>\r\n             </CCard>\r\n        </>\r\n        )\r\n    }\r\n\r\n    // const TypeSelect = (e) => {\r\n    //     setInputs({\r\n    //         searchType: e.target.value\r\n    //     })\r\n    //     console.log(searchType)\r\n    //     // getStudent(currentPages);\r\n    //   }\r\n\r\n    const KeySelect = (e) => {\r\n        e.preventDefault()\r\n        setInputs({\r\n            searchKey: e.target.value\r\n        })\r\n        console.log(searchKey)\r\n        \r\n        //getStudent(currentPages);\r\n        \r\n      }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n      }\r\n\r\n    return (\r\n        <div> \r\n            <header>\r\n            <CForm inline onSubmit={handleSubmit}>\r\n            {/* <CSelect custom id=\"branch\" onChange={branchSelect} value={findBranch}>\r\n              <option value=\"\">지점</option>\r\n              {BranchList && BranchList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect> */}\r\n            {/* <CSelect custom id=\"search\" onChange={TypeSelect} value={searchType}>\r\n              <option value=\"asd\">검색조건</option>\r\n              <option value=\"lecture\">강의명</option>\r\n              <option value=\"name\">이름</option>\r\n            </CSelect> */}\r\n            &nbsp;&nbsp;\r\n            <CInput\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"\"\r\n              size=\"sm\"\r\n              name=\"searchKeyword\"\r\n              placeholder=\"이름을 입력하세요\"\r\n              value={searchKey}\r\n              onChange={KeySelect}\r\n            />\r\n            <CButton onClick={getSearch}>검색</CButton>\r\n          </CForm>\r\n          </header>\r\n\r\n        <table>\r\n\r\n        <tr><td>no</td><td>name</td><td>hp</td><td>email</td><td>birth</td><td>address</td><td>lecture</td><td>gender</td><td>regdate</td><td></td></tr>\r\n            {StudentList&&StudentList.map((itemdata, insertIndex) => {\r\n                return (\r\n                <tr>\r\n                <td>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                <td>{itemdata.hp}</td>\r\n                <td>{itemdata.email}</td>\r\n                <td>{itemdata.birth}</td>\r\n                <td>{itemdata.address}</td>\r\n                <td>{itemdata.lecture}</td>\r\n                <td>{itemdata.gender}</td>\r\n                <td>{itemdata.regdate}</td>\r\n                <td width =\"80\"><Link to={`/student/${itemdata.no}`}> 상세정보 </Link></td>\r\n                </tr>\r\n                );\r\n            })}\r\n            <tr><td><>\r\n                <Paginations />\r\n                </>\r\n         </td></tr>\r\n         <tr><td>\r\n            <Link to={\"/ins_stu\"}>학생등록하기</Link>\r\n            </td></tr>\r\n        </table>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StudentData;\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js",["892"],"import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CPagination\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\n\r\nconst Pagination = () => {\r\n  const [currentPage, setCurrentPage] = useState(2)\r\n  console.log(currentPage)\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Pagination\r\n          <DocsLink name=\"CPagination\"/>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Default//{currentPage}//{setCurrentPage}</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Small</h6>\r\n          <CPagination\r\n            size=\"sm\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div className=\"d-md-down-none\">\r\n            <h6>Large</h6>\r\n            <CPagination\r\n              size=\"lg\"\r\n              activePage={currentPage}\r\n              pages={10}\r\n              onActivePageChange={setCurrentPage}\r\n            />\r\n            <br></br>\r\n          </div>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <strong> Pagination </strong>\r\n          <small>alignment</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Left alignment (default)</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Center alignment</h6>\r\n          <CPagination\r\n            align=\"center\"\r\n            addListClass=\"some-class\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Right (end) alignment</h6>\r\n          <CPagination\r\n            align=\"end\"\r\n            activePage={currentPage}\r\n            pages={7}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\RegisterEmployee.js",["893"],"import React, {Component} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CRow,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nclass RegisterEmployee extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n          name : '',\r\n          hp : '',\r\n          address : '',\r\n          email : '',\r\n          birth : ''\r\n    }\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange = (value) => {\r\n    this.setState({\r\n      [value.target.name] : value.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = (x) =>{\r\n    x.preventDefault();\r\n\r\n    console.log('test ::' + this.state.hp)\r\n\r\n    let employee = {\r\n      name : this.state.name,\r\n      hp : this.state.hp,\r\n      email : this.state.email,\r\n      birth : this.state.birth,\r\n      address : this.state.address,\r\n    }\r\n\r\n    ApiService.InsertEmployee(employee).then(res =>{\r\n      alert('회원가입 신청이 완료되었습니다. 관리자의 승인을 기다려주세요');\r\n      this.props.history.push('/');\r\n    })\r\n      .catch( err => {\r\n      console.log('회원가입 신청에 실패했습니다 관리가제에 문의해주세요', err);\r\n      this.props.history.push('/');\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardHeader align={'center'}>\r\n            <h2>회원가입</h2>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"name\" value={this.state.name} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">휴대폰번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"hp\" value={this.state.hp} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"address\"value={this.state.address} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"email\"value={this.state.email} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">생일</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"birth\"value={this.state.birth} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </CForm>\r\n          </CCardBody>\r\n          <CCardFooter>\r\n            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> 제출</CButton>\r\n            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화</CButton>\r\n          </CCardFooter>\r\n        </CCard>\r\n      </CCol>\r\n      </CRow>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterEmployee\r\n","C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js",[],"C:\\Users\\pc\\Documents\\workspace-sts-3.8.4.RELEASE\\AcademyERP-Project\\frontend\\my-app\\src\\views\\login\\login.js",[],{"ruleId":"894","replacedBy":"895"},{"ruleId":"896","replacedBy":"897"},{"ruleId":"898","severity":1,"message":"899","line":22,"column":23,"nodeType":"900","messageId":"901","endLine":22,"endColumn":28},{"ruleId":"902","severity":1,"message":"903","line":4,"column":1,"nodeType":"904","endLine":285,"endColumn":2},{"ruleId":"898","severity":1,"message":"905","line":1,"column":17,"nodeType":"900","messageId":"901","endLine":1,"endColumn":25},{"ruleId":"898","severity":1,"message":"906","line":1,"column":27,"nodeType":"900","messageId":"901","endLine":1,"endColumn":36},{"ruleId":"898","severity":1,"message":"907","line":2,"column":8,"nodeType":"900","messageId":"901","endLine":2,"endColumn":13},{"ruleId":"898","severity":1,"message":"908","line":2,"column":8,"nodeType":"900","messageId":"901","endLine":2,"endColumn":24},{"ruleId":"898","severity":1,"message":"905","line":1,"column":27,"nodeType":"900","messageId":"901","endLine":1,"endColumn":35},{"ruleId":"898","severity":1,"message":"909","line":3,"column":16,"nodeType":"900","messageId":"901","endLine":3,"endColumn":25},{"ruleId":"898","severity":1,"message":"910","line":3,"column":27,"nodeType":"900","messageId":"901","endLine":3,"endColumn":38},{"ruleId":"898","severity":1,"message":"911","line":3,"column":40,"nodeType":"900","messageId":"901","endLine":3,"endColumn":51},{"ruleId":"898","severity":1,"message":"912","line":4,"column":9,"nodeType":"900","messageId":"901","endLine":4,"endColumn":17},{"ruleId":"898","severity":1,"message":"913","line":43,"column":12,"nodeType":"900","messageId":"901","endLine":43,"endColumn":24},{"ruleId":"898","severity":1,"message":"914","line":43,"column":26,"nodeType":"900","messageId":"901","endLine":43,"endColumn":37},{"ruleId":"898","severity":1,"message":"915","line":43,"column":39,"nodeType":"900","messageId":"901","endLine":43,"endColumn":43},{"ruleId":"898","severity":1,"message":"916","line":43,"column":46,"nodeType":"900","messageId":"901","endLine":43,"endColumn":53},{"ruleId":"898","severity":1,"message":"913","line":21,"column":12,"nodeType":"900","messageId":"901","endLine":21,"endColumn":24},{"ruleId":"898","severity":1,"message":"914","line":21,"column":26,"nodeType":"900","messageId":"901","endLine":21,"endColumn":37},{"ruleId":"898","severity":1,"message":"915","line":21,"column":39,"nodeType":"900","messageId":"901","endLine":21,"endColumn":43},{"ruleId":"917","severity":1,"message":"918","line":30,"column":8,"nodeType":"919","endLine":30,"endColumn":10,"suggestions":"920"},{"ruleId":"917","severity":1,"message":"918","line":28,"column":8,"nodeType":"919","endLine":28,"endColumn":10,"suggestions":"921"},{"ruleId":"922","severity":1,"message":"923","line":108,"column":61,"nodeType":"924","messageId":"925","endLine":108,"endColumn":63},{"ruleId":"898","severity":1,"message":"926","line":21,"column":19,"nodeType":"900","messageId":"901","endLine":21,"endColumn":23},{"ruleId":"898","severity":1,"message":"927","line":22,"column":11,"nodeType":"900","messageId":"901","endLine":22,"endColumn":19},{"ruleId":"898","severity":1,"message":"928","line":4,"column":27,"nodeType":"900","messageId":"901","endLine":4,"endColumn":33},{"ruleId":"898","severity":1,"message":"929","line":10,"column":35,"nodeType":"900","messageId":"901","endLine":10,"endColumn":49},{"ruleId":"898","severity":1,"message":"930","line":114,"column":9,"nodeType":"900","messageId":"901","endLine":114,"endColumn":14},{"ruleId":"931","severity":1,"message":"932","line":165,"column":47,"nodeType":"933","messageId":"934","endLine":165,"endColumn":48},{"ruleId":"898","severity":1,"message":"935","line":10,"column":7,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"935","line":11,"column":7,"nodeType":"900","messageId":"901","endLine":11,"endColumn":16},{"ruleId":"922","severity":1,"message":"936","line":162,"column":32,"nodeType":"924","messageId":"937","endLine":162,"endColumn":34},{"ruleId":"898","severity":1,"message":"938","line":3,"column":10,"nodeType":"900","messageId":"901","endLine":3,"endColumn":14},{"ruleId":"898","severity":1,"message":"912","line":5,"column":10,"nodeType":"900","messageId":"901","endLine":5,"endColumn":18},{"ruleId":"898","severity":1,"message":"939","line":7,"column":5,"nodeType":"900","messageId":"901","endLine":7,"endColumn":12},{"ruleId":"898","severity":1,"message":"910","line":10,"column":5,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"940","line":12,"column":5,"nodeType":"900","messageId":"901","endLine":12,"endColumn":10},{"ruleId":"898","severity":1,"message":"941","line":13,"column":5,"nodeType":"900","messageId":"901","endLine":13,"endColumn":12},{"ruleId":"898","severity":1,"message":"928","line":14,"column":5,"nodeType":"900","messageId":"901","endLine":14,"endColumn":11},{"ruleId":"942","severity":1,"message":"943","line":48,"column":29,"nodeType":"933","messageId":"944","endLine":48,"endColumn":31},{"ruleId":"898","severity":1,"message":"910","line":10,"column":5,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"945","line":12,"column":5,"nodeType":"900","messageId":"901","endLine":12,"endColumn":14},{"ruleId":"898","severity":1,"message":"946","line":13,"column":5,"nodeType":"900","messageId":"901","endLine":13,"endColumn":18},{"ruleId":"898","severity":1,"message":"947","line":14,"column":5,"nodeType":"900","messageId":"901","endLine":14,"endColumn":18},{"ruleId":"898","severity":1,"message":"948","line":15,"column":5,"nodeType":"900","messageId":"901","endLine":15,"endColumn":20},{"ruleId":"898","severity":1,"message":"949","line":16,"column":5,"nodeType":"900","messageId":"901","endLine":16,"endColumn":10},{"ruleId":"898","severity":1,"message":"950","line":19,"column":5,"nodeType":"900","messageId":"901","endLine":19,"endColumn":14},{"ruleId":"898","severity":1,"message":"951","line":20,"column":5,"nodeType":"900","messageId":"901","endLine":20,"endColumn":19},{"ruleId":"898","severity":1,"message":"952","line":21,"column":5,"nodeType":"900","messageId":"901","endLine":21,"endColumn":21},{"ruleId":"898","severity":1,"message":"953","line":24,"column":5,"nodeType":"900","messageId":"901","endLine":24,"endColumn":15},{"ruleId":"898","severity":1,"message":"929","line":25,"column":5,"nodeType":"900","messageId":"901","endLine":25,"endColumn":19},{"ruleId":"898","severity":1,"message":"954","line":26,"column":5,"nodeType":"900","messageId":"901","endLine":26,"endColumn":16},{"ruleId":"898","severity":1,"message":"955","line":27,"column":5,"nodeType":"900","messageId":"901","endLine":27,"endColumn":16},{"ruleId":"898","severity":1,"message":"956","line":28,"column":5,"nodeType":"900","messageId":"901","endLine":28,"endColumn":22},{"ruleId":"898","severity":1,"message":"957","line":29,"column":5,"nodeType":"900","messageId":"901","endLine":29,"endColumn":23},{"ruleId":"898","severity":1,"message":"958","line":30,"column":5,"nodeType":"900","messageId":"901","endLine":30,"endColumn":14},{"ruleId":"898","severity":1,"message":"959","line":31,"column":5,"nodeType":"900","messageId":"901","endLine":31,"endColumn":20},{"ruleId":"898","severity":1,"message":"960","line":34,"column":5,"nodeType":"900","messageId":"901","endLine":34,"endColumn":9},{"ruleId":"898","severity":1,"message":"961","line":35,"column":5,"nodeType":"900","messageId":"901","endLine":35,"endColumn":12},{"ruleId":"917","severity":1,"message":"962","line":53,"column":7,"nodeType":"919","endLine":53,"endColumn":9,"suggestions":"963"},{"ruleId":"898","severity":1,"message":"964","line":6,"column":8,"nodeType":"900","messageId":"901","endLine":6,"endColumn":14},{"ruleId":"898","severity":1,"message":"965","line":11,"column":3,"nodeType":"900","messageId":"901","endLine":11,"endColumn":8},{"ruleId":"898","severity":1,"message":"909","line":12,"column":3,"nodeType":"900","messageId":"901","endLine":12,"endColumn":12},{"ruleId":"898","severity":1,"message":"910","line":13,"column":3,"nodeType":"900","messageId":"901","endLine":13,"endColumn":14},{"ruleId":"966","severity":1,"message":"967","line":44,"column":15,"nodeType":"968","endLine":44,"endColumn":29},{"ruleId":"898","severity":1,"message":"935","line":11,"column":7,"nodeType":"900","messageId":"901","endLine":11,"endColumn":16},{"ruleId":"898","severity":1,"message":"945","line":14,"column":5,"nodeType":"900","messageId":"901","endLine":14,"endColumn":14},{"ruleId":"898","severity":1,"message":"946","line":15,"column":5,"nodeType":"900","messageId":"901","endLine":15,"endColumn":18},{"ruleId":"898","severity":1,"message":"947","line":16,"column":5,"nodeType":"900","messageId":"901","endLine":16,"endColumn":18},{"ruleId":"898","severity":1,"message":"948","line":17,"column":5,"nodeType":"900","messageId":"901","endLine":17,"endColumn":20},{"ruleId":"898","severity":1,"message":"949","line":18,"column":5,"nodeType":"900","messageId":"901","endLine":18,"endColumn":10},{"ruleId":"898","severity":1,"message":"950","line":21,"column":5,"nodeType":"900","messageId":"901","endLine":21,"endColumn":14},{"ruleId":"898","severity":1,"message":"951","line":22,"column":5,"nodeType":"900","messageId":"901","endLine":22,"endColumn":19},{"ruleId":"898","severity":1,"message":"952","line":23,"column":5,"nodeType":"900","messageId":"901","endLine":23,"endColumn":21},{"ruleId":"898","severity":1,"message":"969","line":24,"column":5,"nodeType":"900","messageId":"901","endLine":24,"endColumn":14},{"ruleId":"898","severity":1,"message":"953","line":26,"column":5,"nodeType":"900","messageId":"901","endLine":26,"endColumn":15},{"ruleId":"898","severity":1,"message":"929","line":27,"column":5,"nodeType":"900","messageId":"901","endLine":27,"endColumn":19},{"ruleId":"898","severity":1,"message":"954","line":28,"column":5,"nodeType":"900","messageId":"901","endLine":28,"endColumn":16},{"ruleId":"898","severity":1,"message":"955","line":29,"column":5,"nodeType":"900","messageId":"901","endLine":29,"endColumn":16},{"ruleId":"898","severity":1,"message":"956","line":30,"column":5,"nodeType":"900","messageId":"901","endLine":30,"endColumn":22},{"ruleId":"898","severity":1,"message":"957","line":31,"column":5,"nodeType":"900","messageId":"901","endLine":31,"endColumn":23},{"ruleId":"898","severity":1,"message":"958","line":32,"column":5,"nodeType":"900","messageId":"901","endLine":32,"endColumn":14},{"ruleId":"898","severity":1,"message":"959","line":33,"column":5,"nodeType":"900","messageId":"901","endLine":33,"endColumn":20},{"ruleId":"898","severity":1,"message":"941","line":35,"column":5,"nodeType":"900","messageId":"901","endLine":35,"endColumn":12},{"ruleId":"898","severity":1,"message":"961","line":37,"column":5,"nodeType":"900","messageId":"901","endLine":37,"endColumn":12},{"ruleId":"898","severity":1,"message":"970","line":40,"column":10,"nodeType":"900","messageId":"901","endLine":40,"endColumn":20},{"ruleId":"917","severity":1,"message":"971","line":51,"column":9,"nodeType":"919","endLine":51,"endColumn":11,"suggestions":"972"},{"ruleId":"898","severity":1,"message":"912","line":5,"column":10,"nodeType":"900","messageId":"901","endLine":5,"endColumn":18},{"ruleId":"898","severity":1,"message":"910","line":10,"column":5,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"942","severity":1,"message":"943","line":69,"column":29,"nodeType":"933","messageId":"944","endLine":69,"endColumn":31},{"ruleId":"973","severity":1,"message":"974","line":110,"column":15,"nodeType":"975","endLine":110,"endColumn":38},{"ruleId":"898","severity":1,"message":"938","line":4,"column":10,"nodeType":"900","messageId":"901","endLine":4,"endColumn":14},{"ruleId":"898","severity":1,"message":"912","line":5,"column":10,"nodeType":"900","messageId":"901","endLine":5,"endColumn":18},{"ruleId":"898","severity":1,"message":"965","line":8,"column":5,"nodeType":"900","messageId":"901","endLine":8,"endColumn":10},{"ruleId":"898","severity":1,"message":"909","line":9,"column":5,"nodeType":"900","messageId":"901","endLine":9,"endColumn":14},{"ruleId":"898","severity":1,"message":"976","line":10,"column":5,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"910","line":11,"column":5,"nodeType":"900","messageId":"901","endLine":11,"endColumn":16},{"ruleId":"898","severity":1,"message":"945","line":13,"column":5,"nodeType":"900","messageId":"901","endLine":13,"endColumn":14},{"ruleId":"898","severity":1,"message":"946","line":14,"column":5,"nodeType":"900","messageId":"901","endLine":14,"endColumn":18},{"ruleId":"898","severity":1,"message":"947","line":15,"column":5,"nodeType":"900","messageId":"901","endLine":15,"endColumn":18},{"ruleId":"898","severity":1,"message":"948","line":16,"column":5,"nodeType":"900","messageId":"901","endLine":16,"endColumn":20},{"ruleId":"898","severity":1,"message":"949","line":17,"column":5,"nodeType":"900","messageId":"901","endLine":17,"endColumn":10},{"ruleId":"898","severity":1,"message":"940","line":18,"column":5,"nodeType":"900","messageId":"901","endLine":18,"endColumn":10},{"ruleId":"898","severity":1,"message":"950","line":20,"column":5,"nodeType":"900","messageId":"901","endLine":20,"endColumn":14},{"ruleId":"898","severity":1,"message":"951","line":21,"column":5,"nodeType":"900","messageId":"901","endLine":21,"endColumn":19},{"ruleId":"898","severity":1,"message":"952","line":22,"column":5,"nodeType":"900","messageId":"901","endLine":22,"endColumn":21},{"ruleId":"898","severity":1,"message":"969","line":23,"column":5,"nodeType":"900","messageId":"901","endLine":23,"endColumn":14},{"ruleId":"898","severity":1,"message":"928","line":24,"column":5,"nodeType":"900","messageId":"901","endLine":24,"endColumn":11},{"ruleId":"898","severity":1,"message":"953","line":25,"column":5,"nodeType":"900","messageId":"901","endLine":25,"endColumn":15},{"ruleId":"898","severity":1,"message":"929","line":26,"column":5,"nodeType":"900","messageId":"901","endLine":26,"endColumn":19},{"ruleId":"898","severity":1,"message":"955","line":28,"column":5,"nodeType":"900","messageId":"901","endLine":28,"endColumn":16},{"ruleId":"898","severity":1,"message":"956","line":29,"column":5,"nodeType":"900","messageId":"901","endLine":29,"endColumn":22},{"ruleId":"898","severity":1,"message":"957","line":30,"column":5,"nodeType":"900","messageId":"901","endLine":30,"endColumn":23},{"ruleId":"898","severity":1,"message":"958","line":31,"column":5,"nodeType":"900","messageId":"901","endLine":31,"endColumn":14},{"ruleId":"898","severity":1,"message":"959","line":32,"column":5,"nodeType":"900","messageId":"901","endLine":32,"endColumn":20},{"ruleId":"898","severity":1,"message":"941","line":34,"column":5,"nodeType":"900","messageId":"901","endLine":34,"endColumn":12},{"ruleId":"898","severity":1,"message":"960","line":35,"column":5,"nodeType":"900","messageId":"901","endLine":35,"endColumn":9},{"ruleId":"898","severity":1,"message":"961","line":36,"column":5,"nodeType":"900","messageId":"901","endLine":36,"endColumn":12},{"ruleId":"898","severity":1,"message":"977","line":40,"column":8,"nodeType":"900","messageId":"901","endLine":40,"endColumn":15},{"ruleId":"898","severity":1,"message":"978","line":11,"column":3,"nodeType":"900","messageId":"901","endLine":11,"endColumn":9},{"ruleId":"979","severity":1,"message":"980","line":264,"column":73,"nodeType":"981","endLine":264,"endColumn":157},{"ruleId":"979","severity":1,"message":"980","line":267,"column":54,"nodeType":"981","endLine":267,"endColumn":103},{"ruleId":"979","severity":1,"message":"980","line":269,"column":78,"nodeType":"981","endLine":269,"endColumn":125},{"ruleId":"979","severity":1,"message":"980","line":272,"column":96,"nodeType":"981","endLine":272,"endColumn":168},{"ruleId":"917","severity":1,"message":"918","line":20,"column":8,"nodeType":"919","endLine":20,"endColumn":10,"suggestions":"982"},{"ruleId":"898","severity":1,"message":"983","line":17,"column":5,"nodeType":"900","messageId":"901","endLine":17,"endColumn":11},{"ruleId":"979","severity":1,"message":"980","line":228,"column":80,"nodeType":"981","endLine":228,"endColumn":164},{"ruleId":"979","severity":1,"message":"980","line":231,"column":56,"nodeType":"981","endLine":231,"endColumn":105},{"ruleId":"979","severity":1,"message":"980","line":233,"column":85,"nodeType":"981","endLine":233,"endColumn":132},{"ruleId":"979","severity":1,"message":"980","line":236,"column":125,"nodeType":"981","endLine":236,"endColumn":197},{"ruleId":"898","severity":1,"message":"984","line":214,"column":5,"nodeType":"900","messageId":"901","endLine":214,"endColumn":14},{"ruleId":"979","severity":1,"message":"980","line":276,"column":73,"nodeType":"981","endLine":276,"endColumn":157},{"ruleId":"979","severity":1,"message":"980","line":279,"column":54,"nodeType":"981","endLine":279,"endColumn":103},{"ruleId":"979","severity":1,"message":"980","line":281,"column":78,"nodeType":"981","endLine":281,"endColumn":125},{"ruleId":"979","severity":1,"message":"980","line":284,"column":96,"nodeType":"981","endLine":284,"endColumn":168},{"ruleId":"898","severity":1,"message":"985","line":2,"column":8,"nodeType":"900","messageId":"901","endLine":2,"endColumn":24},{"ruleId":"931","severity":1,"message":"932","line":9,"column":54,"nodeType":"933","messageId":"934","endLine":9,"endColumn":55},{"ruleId":"931","severity":1,"message":"932","line":56,"column":56,"nodeType":"933","messageId":"934","endLine":56,"endColumn":57},{"ruleId":"902","severity":1,"message":"903","line":2,"column":1,"nodeType":"904","endLine":8,"endColumn":5},{"ruleId":"898","severity":1,"message":"986","line":11,"column":9,"nodeType":"900","messageId":"901","endLine":11,"endColumn":19},{"ruleId":"898","severity":1,"message":"928","line":11,"column":21,"nodeType":"900","messageId":"901","endLine":11,"endColumn":27},{"ruleId":"898","severity":1,"message":"987","line":49,"column":7,"nodeType":"900","messageId":"901","endLine":49,"endColumn":20},{"ruleId":"898","severity":1,"message":"950","line":4,"column":58,"nodeType":"900","messageId":"901","endLine":4,"endColumn":67},{"ruleId":"942","severity":1,"message":"988","line":96,"column":31,"nodeType":"933","messageId":"944","endLine":96,"endColumn":33},{"ruleId":"942","severity":1,"message":"988","line":97,"column":30,"nodeType":"933","messageId":"944","endLine":97,"endColumn":32},{"ruleId":"942","severity":1,"message":"988","line":98,"column":30,"nodeType":"933","messageId":"944","endLine":98,"endColumn":32},{"ruleId":"898","severity":1,"message":"989","line":11,"column":9,"nodeType":"900","messageId":"901","endLine":11,"endColumn":13},{"ruleId":"979","severity":1,"message":"980","line":563,"column":82,"nodeType":"981","endLine":563,"endColumn":166},{"ruleId":"979","severity":1,"message":"980","line":566,"column":57,"nodeType":"981","endLine":566,"endColumn":106},{"ruleId":"979","severity":1,"message":"980","line":568,"column":86,"nodeType":"981","endLine":568,"endColumn":133},{"ruleId":"979","severity":1,"message":"980","line":571,"column":105,"nodeType":"981","endLine":571,"endColumn":177},{"ruleId":"898","severity":1,"message":"905","line":1,"column":27,"nodeType":"900","messageId":"901","endLine":1,"endColumn":35},{"ruleId":"979","severity":1,"message":"980","line":372,"column":82,"nodeType":"981","endLine":372,"endColumn":166},{"ruleId":"979","severity":1,"message":"980","line":375,"column":57,"nodeType":"981","endLine":375,"endColumn":106},{"ruleId":"979","severity":1,"message":"980","line":377,"column":86,"nodeType":"981","endLine":377,"endColumn":133},{"ruleId":"979","severity":1,"message":"980","line":380,"column":105,"nodeType":"981","endLine":380,"endColumn":177},{"ruleId":"917","severity":1,"message":"990","line":32,"column":6,"nodeType":"919","endLine":32,"endColumn":8,"suggestions":"991"},{"ruleId":"917","severity":1,"message":"992","line":36,"column":6,"nodeType":"919","endLine":36,"endColumn":13,"suggestions":"993"},{"ruleId":"894","replacedBy":"994"},{"ruleId":"896","replacedBy":"995"},{"ruleId":"902","severity":1,"message":"903","line":1,"column":1,"nodeType":"904","endLine":7,"endColumn":5},{"ruleId":"898","severity":1,"message":"950","line":4,"column":67,"nodeType":"900","messageId":"901","endLine":4,"endColumn":76},{"ruleId":"973","severity":1,"message":"974","line":206,"column":36,"nodeType":"975","endLine":206,"endColumn":50},{"ruleId":"917","severity":1,"message":"992","line":31,"column":6,"nodeType":"919","endLine":31,"endColumn":13,"suggestions":"996"},{"ruleId":"898","severity":1,"message":"938","line":3,"column":10,"nodeType":"900","messageId":"901","endLine":3,"endColumn":14},{"ruleId":"898","severity":1,"message":"976","line":10,"column":5,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"945","line":13,"column":5,"nodeType":"900","messageId":"901","endLine":13,"endColumn":14},{"ruleId":"898","severity":1,"message":"946","line":14,"column":5,"nodeType":"900","messageId":"901","endLine":14,"endColumn":18},{"ruleId":"898","severity":1,"message":"947","line":15,"column":5,"nodeType":"900","messageId":"901","endLine":15,"endColumn":18},{"ruleId":"898","severity":1,"message":"948","line":16,"column":5,"nodeType":"900","messageId":"901","endLine":16,"endColumn":20},{"ruleId":"898","severity":1,"message":"949","line":17,"column":5,"nodeType":"900","messageId":"901","endLine":17,"endColumn":10},{"ruleId":"898","severity":1,"message":"951","line":21,"column":5,"nodeType":"900","messageId":"901","endLine":21,"endColumn":19},{"ruleId":"898","severity":1,"message":"952","line":22,"column":5,"nodeType":"900","messageId":"901","endLine":22,"endColumn":21},{"ruleId":"898","severity":1,"message":"969","line":23,"column":5,"nodeType":"900","messageId":"901","endLine":23,"endColumn":14},{"ruleId":"898","severity":1,"message":"953","line":25,"column":5,"nodeType":"900","messageId":"901","endLine":25,"endColumn":15},{"ruleId":"898","severity":1,"message":"929","line":26,"column":5,"nodeType":"900","messageId":"901","endLine":26,"endColumn":19},{"ruleId":"898","severity":1,"message":"954","line":27,"column":5,"nodeType":"900","messageId":"901","endLine":27,"endColumn":16},{"ruleId":"898","severity":1,"message":"955","line":28,"column":5,"nodeType":"900","messageId":"901","endLine":28,"endColumn":16},{"ruleId":"898","severity":1,"message":"956","line":29,"column":5,"nodeType":"900","messageId":"901","endLine":29,"endColumn":22},{"ruleId":"898","severity":1,"message":"957","line":30,"column":5,"nodeType":"900","messageId":"901","endLine":30,"endColumn":23},{"ruleId":"898","severity":1,"message":"958","line":31,"column":5,"nodeType":"900","messageId":"901","endLine":31,"endColumn":14},{"ruleId":"898","severity":1,"message":"959","line":32,"column":5,"nodeType":"900","messageId":"901","endLine":32,"endColumn":20},{"ruleId":"898","severity":1,"message":"961","line":36,"column":5,"nodeType":"900","messageId":"901","endLine":36,"endColumn":12},{"ruleId":"917","severity":1,"message":"971","line":32,"column":7,"nodeType":"919","endLine":32,"endColumn":9,"suggestions":"997"},{"ruleId":"898","severity":1,"message":"912","line":5,"column":10,"nodeType":"900","messageId":"901","endLine":5,"endColumn":18},{"ruleId":"898","severity":1,"message":"910","line":10,"column":5,"nodeType":"900","messageId":"901","endLine":10,"endColumn":16},{"ruleId":"898","severity":1,"message":"941","line":13,"column":5,"nodeType":"900","messageId":"901","endLine":13,"endColumn":12},{"ruleId":"898","severity":1,"message":"998","line":36,"column":35,"nodeType":"900","messageId":"901","endLine":36,"endColumn":45},{"ruleId":"898","severity":1,"message":"999","line":36,"column":46,"nodeType":"900","messageId":"901","endLine":36,"endColumn":56},{"ruleId":"898","severity":1,"message":"1000","line":36,"column":57,"nodeType":"900","messageId":"901","endLine":36,"endColumn":67},{"ruleId":"942","severity":1,"message":"943","line":85,"column":29,"nodeType":"933","messageId":"944","endLine":85,"endColumn":31},{"ruleId":"973","severity":1,"message":"974","line":149,"column":15,"nodeType":"975","endLine":149,"endColumn":38},{"ruleId":"1001","severity":1,"message":"1002","line":22,"column":37,"nodeType":"1003","endLine":22,"endColumn":39},{"ruleId":"898","severity":1,"message":"950","line":13,"column":3,"nodeType":"900","messageId":"901","endLine":13,"endColumn":12},"no-native-reassign",["1004"],"no-negated-in-lhs",["1005"],"no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'RegisterEmployee' is defined but never used.","'CCardBody' is defined but never used.","'CCardHeader' is defined but never used.","'CPagination' is defined but never used.","'DocsLink' is defined but never used.","'employeeList' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'size' is assigned a value but never used.","'command' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["1006"],["1007"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'page' is assigned a value but never used.","'onChange' is assigned a value but never used.","'CInput' is defined but never used.","'CInputCheckbox' is defined but never used.","'route' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useStyles' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Link' is defined but never used.","'CButton' is defined but never used.","'CForm' is defined but never used.","'CSelect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'CCollapse' is defined but never used.","'CDropdownItem' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownToggle' is defined but never used.","'CFade' is defined but never used.","'CFormText' is defined but never used.","'CValidFeedback' is defined but never used.","'CInvalidFeedback' is defined but never used.","'CInputFile' is defined but never used.","'CInputRadio' is defined but never used.","'CInputGroup' is defined but never used.","'CInputGroupAppend' is defined but never used.","'CInputGroupPrepend' is defined but never used.","'CDropdown' is defined but never used.","'CInputGroupText' is defined but never used.","'CRow' is defined but never used.","'CSwitch' is defined but never used.","React Hook useEffect has a missing dependency: 'getLecture'. Either include it or remove the dependency array.",["1008"],"'events' is defined but never used.","'CCard' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'CTextarea' is defined but never used.","'AlertTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'getApi'. Either include it or remove the dependency array.",["1009"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CCardFooter' is defined but never used.","'Lecture' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["1010"],"'fields' is assigned a value but never used.","'payselect' is assigned a value but never used.","'CounselingDelete' is defined but never used.","'CFormGroup' is defined but never used.","'DialogActions' is assigned a value but never used.","Expected '===' and instead saw '=='.","'CCol' is defined but never used.","React Hook useEffect has a missing dependency: 'props.statementDetails'. Either include it or remove the dependency array. If 'setUsers' needs the current value of 'props.statementDetails', you can also switch to useReducer instead of useState and read 'props.statementDetails' in the reducer.",["1011"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1012"],["1004"],["1005"],["1013"],["1014"],"'BranchList' is assigned a value but never used.","'findBranch' is assigned a value but never used.","'searchType' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation",{"desc":"1015","fix":"1016"},{"desc":"1015","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1015","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1025","fix":"1026"},{"desc":"1025","fix":"1027"},{"desc":"1020","fix":"1028"},"Update the dependencies array to be: [getData]",{"range":"1029","text":"1030"},{"range":"1031","text":"1030"},"Update the dependencies array to be: [getLecture]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [getApi]",{"range":"1034","text":"1035"},{"range":"1036","text":"1030"},"Update the dependencies array to be: [props.statementDetails]",{"range":"1037","text":"1038"},"Update the dependencies array to be: [props, users]",{"range":"1039","text":"1040"},{"range":"1041","text":"1040"},{"range":"1042","text":"1035"},[535,537],"[getData]",[504,506],[1072,1074],"[getLecture]",[1091,1093],"[getApi]",[442,444],[700,702],"[props.statementDetails]",[761,768],"[props, users]",[644,651],[657,659]]
[{"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\index.js":"1","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\store.js":"2","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\App.js":"3","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js":"4","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js":"5","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js":"6","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js":"7","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\login\\Login.js":"8","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js":"9","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js":"10","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js":"11","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js":"12","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js":"13","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js":"14","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js":"15","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js":"16","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js":"17","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js":"18","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js":"19","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js":"20","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js":"21","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js":"22","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js":"23","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js":"24","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js":"25","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js":"26","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js":"27","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js":"28","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js":"29","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js":"30","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js":"31","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js":"32","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js":"33","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js":"34","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js":"35","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js":"36","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js":"37","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js":"38","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js":"39","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js":"40","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js":"41","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js":"42","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js":"43","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js":"44","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js":"45","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\calendar.js":"46","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js":"47","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js":"48","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js":"49","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js":"50","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js":"51","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\dashboard\\Dashboard.js":"52","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js":"53","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js":"54","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js":"55","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js":"56","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js":"57","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js":"58","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js":"59","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js":"60","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js":"61","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js":"62","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js":"63","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js":"64","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js":"65","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js":"66","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js":"67","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js":"68","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js":"69","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js":"70","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js":"71","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js":"72","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js":"73","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js":"74","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js":"75","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js":"76","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js":"77","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js":"78","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js":"79","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js":"80","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js":"81","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js":"82","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js":"83","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js":"84","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js":"85","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js":"86","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js":"87","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js":"88","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js":"89","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js":"90","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js":"91","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js":"92","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js":"93","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js":"94","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js":"95","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js":"96","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js":"97","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js":"98","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js":"99","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js":"100","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\MainChartExample.js":"101","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js":"102","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js":"103","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js":"104","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js":"105","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js":"106","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\events.js":"107","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js":"108","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js":"109","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js":"110","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js":"111","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js":"112","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js":"113","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js":"114","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js":"115","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js":"116","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\StandByAuth.js":"117","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\RegisterEmployee.js":"118","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index_view.js":"119","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Stu_att.js":"120","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Calendar.js":"121","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Ins_att.js":"122","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\Counseling.js":"123","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryList.js":"124","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index_view.js":"125","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index.js":"126","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_apply.js":"127","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_user.js":"128","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index.js":"129","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryEdit.js":"130","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\index.js":"131","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\paymentData.js":"132","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\getPayment.js":"133","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\HR.js":"134","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\getPayment\\getPayment.js":"135","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance_view.js":"136","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\events.js":"137","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\user\\paymentData.js":"138","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacation.js":"139","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\user\\vacation.js":"140","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacationApply.js":"141","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar.js":"142","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar_view.js":"143","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingRecord.js":"144","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Att_view.js":"145","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\insert\\insert.js":"146","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingUpdate.js":"147","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingAdd.js":"148","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingDelete.js":"149"},{"size":744,"mtime":1609519981903,"results":"150","hashOfConfig":"151"},{"size":340,"mtime":1609519981923,"results":"152","hashOfConfig":"151"},{"size":1460,"mtime":1611572469365,"results":"153","hashOfConfig":"151"},{"size":1476,"mtime":1609519981906,"results":"154","hashOfConfig":"151"},{"size":4813,"mtime":1609519981920,"results":"155","hashOfConfig":"151"},{"size":4074,"mtime":1609519981874,"results":"156","hashOfConfig":"151"},{"size":438,"mtime":1609519981895,"results":"157","hashOfConfig":"151"},{"size":2840,"mtime":1610274820341,"results":"158","hashOfConfig":"151"},{"size":1357,"mtime":1610274820206,"results":"159","hashOfConfig":"151"},{"size":1338,"mtime":1610274820293,"results":"160","hashOfConfig":"151"},{"size":2944,"mtime":1610274820158,"results":"161","hashOfConfig":"151"},{"size":617,"mtime":1609519981902,"results":"162","hashOfConfig":"151"},{"size":6963,"mtime":1609519981875,"results":"163","hashOfConfig":"151"},{"size":6949,"mtime":1609519981877,"results":"164","hashOfConfig":"151"},{"size":2311,"mtime":1609519981893,"results":"165","hashOfConfig":"151"},{"size":2612,"mtime":1609519981891,"results":"166","hashOfConfig":"151"},{"size":588,"mtime":1609519981884,"results":"167","hashOfConfig":"151"},{"size":2809,"mtime":1613484844556,"results":"168","hashOfConfig":"151"},{"size":2175,"mtime":1613484844543,"results":"169","hashOfConfig":"151"},{"size":3124,"mtime":1613484844528,"results":"170","hashOfConfig":"151"},{"size":4187,"mtime":1613484844524,"results":"171","hashOfConfig":"151"},{"size":1141,"mtime":1609519981882,"results":"172","hashOfConfig":"151"},{"size":7073,"mtime":1613484844559,"results":"173","hashOfConfig":"151"},{"size":14107,"mtime":1613484844570,"results":"174","hashOfConfig":"151"},{"size":244,"mtime":1609680618108,"results":"175","hashOfConfig":"151"},{"size":2776,"mtime":1609680618144,"results":"176","hashOfConfig":"151"},{"size":3669,"mtime":1609519981992,"results":"177","hashOfConfig":"151"},{"size":3159,"mtime":1610274815217,"results":"178","hashOfConfig":"151"},{"size":2028,"mtime":1609519981995,"results":"179","hashOfConfig":"151"},{"size":1659,"mtime":1609519981998,"results":"180","hashOfConfig":"151"},{"size":3136,"mtime":1609519981994,"results":"181","hashOfConfig":"151"},{"size":3483,"mtime":1609519981997,"results":"182","hashOfConfig":"151"},{"size":2489,"mtime":1612702152998,"results":"183","hashOfConfig":"151"},{"size":12331,"mtime":1612631923589,"results":"184","hashOfConfig":"151"},{"size":4992,"mtime":1612603306861,"results":"185","hashOfConfig":"151"},{"size":2230,"mtime":1612641364154,"results":"186","hashOfConfig":"151"},{"size":967,"mtime":1611928519934,"results":"187","hashOfConfig":"151"},{"size":2786,"mtime":1612700260995,"results":"188","hashOfConfig":"151"},{"size":5138,"mtime":1612628209825,"results":"189","hashOfConfig":"151"},{"size":2771,"mtime":1612702063955,"results":"190","hashOfConfig":"151"},{"size":6297,"mtime":1612443409800,"results":"191","hashOfConfig":"151"},{"size":2011,"mtime":1612187915689,"results":"192","hashOfConfig":"151"},{"size":6655,"mtime":1613484845226,"results":"193","hashOfConfig":"151"},{"size":5994,"mtime":1610274821752,"results":"194","hashOfConfig":"151"},{"size":1956,"mtime":1613484845342,"results":"195","hashOfConfig":"151"},{"size":895,"mtime":1609680618083,"results":"196","hashOfConfig":"151"},{"size":1024,"mtime":1613484846023,"results":"197","hashOfConfig":"151"},{"size":4732,"mtime":1613484845425,"results":"198","hashOfConfig":"151"},{"size":6784,"mtime":1613484845476,"results":"199","hashOfConfig":"151"},{"size":12671,"mtime":1610274819958,"results":"200","hashOfConfig":"151"},{"size":13871,"mtime":1613484845471,"results":"201","hashOfConfig":"151"},{"size":24413,"mtime":1610274821545,"results":"202","hashOfConfig":"151"},{"size":7704,"mtime":1613484845120,"results":"203","hashOfConfig":"151"},{"size":3813,"mtime":1610274820108,"results":"204","hashOfConfig":"151"},{"size":6331,"mtime":1613484844974,"results":"205","hashOfConfig":"151"},{"size":8208,"mtime":1613484845875,"results":"206","hashOfConfig":"151"},{"size":11236,"mtime":1610274820496,"results":"207","hashOfConfig":"151"},{"size":7178,"mtime":1610274819986,"results":"208","hashOfConfig":"151"},{"size":613,"mtime":1610274821208,"results":"209","hashOfConfig":"151"},{"size":3697,"mtime":1610274820920,"results":"210","hashOfConfig":"151"},{"size":6087,"mtime":1610274821034,"results":"211","hashOfConfig":"151"},{"size":629,"mtime":1610274821291,"results":"212","hashOfConfig":"151"},{"size":2816,"mtime":1610274823230,"results":"213","hashOfConfig":"151"},{"size":999,"mtime":1610274821420,"results":"214","hashOfConfig":"151"},{"size":5891,"mtime":1613484844990,"results":"215","hashOfConfig":"151"},{"size":3069,"mtime":1610274823523,"results":"216","hashOfConfig":"151"},{"size":9733,"mtime":1610274823677,"results":"217","hashOfConfig":"151"},{"size":3011,"mtime":1610274823632,"results":"218","hashOfConfig":"151"},{"size":5808,"mtime":1610274823253,"results":"219","hashOfConfig":"151"},{"size":4883,"mtime":1613484845125,"results":"220","hashOfConfig":"151"},{"size":5977,"mtime":1610274823743,"results":"221","hashOfConfig":"151"},{"size":6366,"mtime":1610274822692,"results":"222","hashOfConfig":"151"},{"size":13135,"mtime":1610274823795,"results":"223","hashOfConfig":"151"},{"size":14022,"mtime":1610274823097,"results":"224","hashOfConfig":"151"},{"size":13360,"mtime":1613484845444,"results":"225","hashOfConfig":"151"},{"size":16914,"mtime":1610274822933,"results":"226","hashOfConfig":"151"},{"size":25145,"mtime":1610274823344,"results":"227","hashOfConfig":"151"},{"size":33892,"mtime":1610274822548,"results":"228","hashOfConfig":"151"},{"size":2315,"mtime":1613484845211,"results":"229","hashOfConfig":"151"},{"size":2156,"mtime":1610274823949,"results":"230","hashOfConfig":"151"},{"size":1666,"mtime":1613484844508,"results":"231","hashOfConfig":"151"},{"size":9481,"mtime":1610274824117,"results":"232","hashOfConfig":"151"},{"size":7017,"mtime":1610274824188,"results":"233","hashOfConfig":"151"},{"size":52740,"mtime":1613484845195,"results":"234","hashOfConfig":"151"},{"size":18597,"mtime":1610274824310,"results":"235","hashOfConfig":"151"},{"size":1795,"mtime":1610274824431,"results":"236","hashOfConfig":"151"},{"size":5265,"mtime":1610274823280,"results":"237","hashOfConfig":"151"},{"size":5513,"mtime":1610274820370,"results":"238","hashOfConfig":"151"},{"size":1998,"mtime":1613484845945,"results":"239","hashOfConfig":"151"},{"size":960,"mtime":1613484845995,"results":"240","hashOfConfig":"151"},{"size":7818,"mtime":1613484845375,"results":"241","hashOfConfig":"151"},{"size":380,"mtime":1609680618157,"results":"242","hashOfConfig":"151"},{"size":5102,"mtime":1613484844658,"results":"243","hashOfConfig":"151"},{"size":60,"mtime":1609519981910,"results":"244","hashOfConfig":"151"},{"size":2019,"mtime":1612187915590,"results":"245","hashOfConfig":"151"},{"size":6339,"mtime":1612187915599,"results":"246","hashOfConfig":"151"},{"size":5990,"mtime":1612187915580,"results":"247","hashOfConfig":"151"},{"size":608,"mtime":1609519981908,"results":"248","hashOfConfig":"151"},{"size":4208,"mtime":1610274819896,"results":"249","hashOfConfig":"151"},{"size":4922,"mtime":1610274819804,"results":"250","hashOfConfig":"151"},{"size":2587,"mtime":1610274821729,"results":"251","hashOfConfig":"151"},{"size":1783,"mtime":1610274814866,"results":"252","hashOfConfig":"151"},{"size":1620,"mtime":1610274822062,"results":"253","hashOfConfig":"151"},{"size":3446,"mtime":1610274821851,"results":"254","hashOfConfig":"151"},{"size":7019,"mtime":1612187915723,"results":"255","hashOfConfig":"151"},{"size":6943,"mtime":1612187915781,"results":"256","hashOfConfig":"151"},{"size":129,"mtime":1613484844618,"results":"257","hashOfConfig":"151"},{"size":2615,"mtime":1613484844623,"results":"258","hashOfConfig":"151"},{"size":28948,"mtime":1613484844664,"results":"259","hashOfConfig":"151"},{"size":5554,"mtime":1612187915768,"results":"260","hashOfConfig":"151"},{"size":2011,"mtime":1612187915749,"results":"261","hashOfConfig":"151"},{"size":2014,"mtime":1612187915813,"results":"262","hashOfConfig":"151"},{"size":5294,"mtime":1612187915735,"results":"263","hashOfConfig":"151"},{"size":6381,"mtime":1613484845789,"results":"264","hashOfConfig":"151"},{"size":6046,"mtime":1613484845742,"results":"265","hashOfConfig":"151"},{"size":987,"mtime":1609519981879,"results":"266","hashOfConfig":"151"},{"size":665,"mtime":1613484845370,"results":"267","hashOfConfig":"151"},{"size":3829,"mtime":1613484845360,"results":"268","hashOfConfig":"151"},{"size":249,"mtime":1613484844683,"results":"269","hashOfConfig":"151"},{"size":7206,"mtime":1613484844878,"results":"270","hashOfConfig":"151"},{"size":1824,"mtime":1613484845143,"results":"271","hashOfConfig":"151"},{"size":4719,"mtime":1613484844873,"results":"272","hashOfConfig":"151"},{"size":4372,"mtime":1613484845239,"results":"273","hashOfConfig":"151"},{"size":1794,"mtime":1613484844838,"results":"274","hashOfConfig":"151"},{"size":261,"mtime":1613484844776,"results":"275","hashOfConfig":"151"},{"size":256,"mtime":1613484844737,"results":"276","hashOfConfig":"151"},{"size":283,"mtime":1613484846056,"results":"277","hashOfConfig":"151"},{"size":262,"mtime":1613484846061,"results":"278","hashOfConfig":"151"},{"size":263,"mtime":1613484846045,"results":"279","hashOfConfig":"151"},{"size":3663,"mtime":1613484844827,"results":"280","hashOfConfig":"151"},{"size":272,"mtime":1613484845689,"results":"281","hashOfConfig":"151"},{"size":1740,"mtime":1613484845562,"results":"282","hashOfConfig":"151"},{"size":3824,"mtime":1613484845544,"results":"283","hashOfConfig":"151"},{"size":417,"mtime":1613484844821,"results":"284","hashOfConfig":"151"},{"size":4392,"mtime":1613484845575,"results":"285","hashOfConfig":"151"},{"size":1474,"mtime":1613484844677,"results":"286","hashOfConfig":"151"},{"size":125,"mtime":1613484845175,"results":"287","hashOfConfig":"151"},{"size":1776,"mtime":1613484845727,"results":"288","hashOfConfig":"151"},{"size":13246,"mtime":1613484846036,"results":"289","hashOfConfig":"151"},{"size":9163,"mtime":1613484846777,"results":"290","hashOfConfig":"151"},{"size":15704,"mtime":1613484846041,"results":"291","hashOfConfig":"151"},{"size":9451,"mtime":1613484844722,"results":"292","hashOfConfig":"151"},{"size":2975,"mtime":1613484844727,"results":"293","hashOfConfig":"151"},{"size":5408,"mtime":1613484845289,"results":"294","hashOfConfig":"151"},{"size":14441,"mtime":1613484844674,"results":"295","hashOfConfig":"151"},{"size":1409,"mtime":1613484845710,"results":"296","hashOfConfig":"151"},{"size":4947,"mtime":1613484845293,"results":"297","hashOfConfig":"151"},{"size":4388,"mtime":1613484845243,"results":"298","hashOfConfig":"151"},{"size":2119,"mtime":1613484845276,"results":"299","hashOfConfig":"151"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},"y8rh76",{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"302"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"302"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"302"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"302"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"302"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"302"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"302"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"302"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"302"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"302"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"302"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"302"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"302"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"302"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"302"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"508"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"302"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"302"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"302"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"302"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"302"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"302"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"302"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"302"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"302"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"302"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"302"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"302"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"302"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"302"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"302"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"302"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"302"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"302"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"302"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"302"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"302"},"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\index.js",[],["635","636"],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\store.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\App.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\login\\Login.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js",["637"],"import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nexport default [\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['박수민']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '회사 일정',\r\n    to: '/Calendar',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '나의 출퇴근',\r\n    to: '/Attendance_user',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '휴가',\r\n    to: '/vacation',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '휴가 신청 보기',\r\n    to: '/vacation_apply',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '결제(관리자)',\r\n    to: '/adpayment',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '나의 휴가',\r\n    to: '/vacation_user',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '결제',\r\n    to: '/payment',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['직원']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '직원(데스크)',\r\n    route: '/base',\r\n    icon: 'cil-drop',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '수업관리 - 여진',\r\n        to: '/lecture',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '상담관리',\r\n        to: '/consult',\r\n      },\r\n    ]},\r\n    {\r\n      _tag: 'CSidebarNavDropdown',\r\n      name: '직원(재무)',\r\n      route: '/base',\r\n      icon: 'cil-drop',\r\n      _children: [\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: '수납관리',\r\n          to: '/receive',\r\n        },\r\n      ]},\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: '직원(인사)',\r\n        route: '/base',\r\n        icon: 'cil-drop',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: '공지사항관리',\r\n            to: '/notice',\r\n          },\r\n        ]},\r\n\r\n  //템플릿\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Components']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '템플릿',\r\n    route: '/base',\r\n    icon: 'cil-puzzle',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Dashboard',\r\n        to: '/dashboard',\r\n        icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\r\n        badge: {\r\n          color: 'info',\r\n          text: 'NEW',\r\n        }\r\n      },\r\n      {\r\n      _tag: 'CSidebarNavDropdown',\r\n      name: 'Base',\r\n      route: '/base',\r\n      icon: 'cil-puzzle',\r\n      _children: [\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Breadcrumb',\r\n          to: '/base/breadcrumbs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Cards',\r\n          to: '/base/cards',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Carousel',\r\n          to: '/base/carousels',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Collapse',\r\n          to: '/base/collapses',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Forms',\r\n          to: '/base/forms',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Jumbotron',\r\n          to: '/base/jumbotrons',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'List group',\r\n          to: '/base/list-groups',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Navs',\r\n          to: '/base/navs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Navbars',\r\n          to: '/base/navbars',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Pagination',\r\n          to: '/base/paginations',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Popovers',\r\n          to: '/base/popovers',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Progress',\r\n          to: '/base/progress-bar',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Switches',\r\n          to: '/base/switches',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tables',\r\n          to: '/base/tables',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tabs',\r\n          to: '/base/tabs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tooltips',\r\n          to: '/base/tooltips',\r\n        },\r\n      ],\r\n    },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Buttons',\r\n        route: '/buttons',\r\n        icon: 'cil-cursor',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Buttons',\r\n            to: '/buttons/buttons',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Brand buttons',\r\n            to: '/buttons/brand-buttons',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Buttons groups',\r\n            to: '/buttons/button-groups',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Dropdowns',\r\n            to: '/buttons/button-dropdowns',\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Charts',\r\n        to: '/charts',\r\n        icon: 'cil-chart-pie'\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Icons',\r\n        route: '/icons',\r\n        icon: 'cil-star',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Free',\r\n            to: '/icons/coreui-icons',\r\n            badge: {\r\n              color: 'success',\r\n              text: 'NEW',\r\n            },\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Flags',\r\n            to: '/icons/flags',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Brands',\r\n            to: '/icons/brands',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Notifications',\r\n        route: '/notifications',\r\n        icon: 'cil-bell',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Alerts',\r\n            to: '/notifications/alerts',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Badges',\r\n            to: '/notifications/badges',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Modal',\r\n            to: '/notifications/modals',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Toaster',\r\n            to: '/notifications/toaster'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Widgets',\r\n        to: '/widgets',\r\n        icon: 'cil-calculator',\r\n        badge: {\r\n          color: 'info',\r\n          text: 'NEW',\r\n        },\r\n      },]\r\n  }\r\n]\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js",["638"],"import React from 'react';\r\nimport RegisterEmployee from \"./views/employee/RegisterEmployee\";\r\n\r\nconst Toaster = React.lazy(() => import('./views/Template/notifications/toaster/Toaster'));\r\nconst Tables = React.lazy(() => import('./views/Template/base/tables/Tables'));\r\n\r\nconst Breadcrumbs = React.lazy(() => import('./views/Template/base/breadcrumbs/Breadcrumbs'));\r\nconst Cards = React.lazy(() => import('./views/Template/base/cards/Cards'));\r\nconst Carousels = React.lazy(() => import('./views/Template/base/carousels/Carousels'));\r\nconst Collapses = React.lazy(() => import('./views/Template/base/collapses/Collapses'));\r\nconst BasicForms = React.lazy(() => import('./views/Template/base/forms/BasicForms'));\r\nconst Jumbotrons = React.lazy(() => import('./views/Template/base/jumbotrons/Jumbotrons'));\r\nconst ListGroups = React.lazy(() => import('./views/Template/base/list-groups/ListGroups'));\r\nconst Navbars = React.lazy(() => import('./views/Template/base/navbars/Navbars'));\r\nconst Navs = React.lazy(() => import('./views/Template/base/navs/Navs'));\r\nconst Paginations = React.lazy(() => import('./views/Template/base/paginations/Pagnations'));\r\nconst Popovers = React.lazy(() => import('./views/Template/base/popovers/Popovers'));\r\nconst ProgressBar = React.lazy(() => import('./views/Template/base/progress-bar/ProgressBar'));\r\nconst Switches = React.lazy(() => import('./views/Template/base/switches/Switches'));\r\n\r\nconst Tabs = React.lazy(() => import('./views/Template/base/tabs/Tabs'));\r\nconst Tooltips = React.lazy(() => import('./views/Template/base/tooltips/Tooltips'));\r\nconst BrandButtons = React.lazy(() => import('./views/Template/buttons/brand-buttons/BrandButtons'));\r\nconst ButtonDropdowns = React.lazy(() => import('./views/Template/buttons/button-dropdowns/ButtonDropdowns'));\r\nconst ButtonGroups = React.lazy(() => import('./views/Template/buttons/button-groups/ButtonGroups'));\r\nconst Buttons = React.lazy(() => import('./views/Template/buttons/buttons/Buttons'));\r\nconst Charts = React.lazy(() => import('./views/Template/charts/Charts'));\r\nconst Dashboard = React.lazy(() => import('./views/Template/dashboard/Dashboard'));\r\nconst CoreUIIcons = React.lazy(() => import('./views/Template/icons/coreui-icons/CoreUIIcons'));\r\nconst Flags = React.lazy(() => import('./views/Template/icons/flags/Flags'));\r\nconst Brands = React.lazy(() => import('./views/Template/icons/brands/Brands'));\r\nconst Alerts = React.lazy(() => import('./views/Template/notifications/alerts/Alerts'));\r\nconst Badges = React.lazy(() => import('./views/Template/notifications/badges/Badges'));\r\nconst Modals = React.lazy(() => import('./views/Template/notifications/modals/Modals'));\r\nconst Colors = React.lazy(() => import('./views/Template/theme/colors/Colors'));\r\nconst Typography = React.lazy(() => import('./views/Template/theme/typography/Typography'));\r\nconst Widgets = React.lazy(() => import('./views/Template/widgets/Widgets'));\r\nconst Students = React.lazy(() => import('./views/Student/Students'));\r\nconst Student = React.lazy(() => import('./views/Student/Student'));\r\nconst Ins_stu = React.lazy(() => import('./views/Student/Ins_stu'));\r\nconst Edit_stu = React.lazy(() => import('./views/Student/Edit_stu'));\r\nconst Stu_att = React.lazy(() => import('./views/Stu_Att/Stu_att'));\r\nconst Ins_att = React.lazy(() => import('./views/Stu_Att/Ins_att'));\r\nconst Users = React.lazy(() => import('./views/users/Users'));\r\nconst User = React.lazy(() => import('./views/users/User'));\r\n/*-여진--------------------------*/\r\nconst Lectures = React.lazy(() => import('./views/lecture/Lectures'));\r\nconst Lecture = React.lazy(() => import('./views/lecture/Lecture'));\r\nconst LectureAdd = React.lazy(() => import('./views/lecture/LectureAdd'));\r\nconst LectureDelete = React.lazy(() => import('./views/lecture/LectureDelete'));\r\nconst LectureUpdate = React.lazy(() => import('./views/lecture/LectureUpdate'));\r\n\r\nconst Score = React.lazy(() => import('./views/score/Score'));\r\nconst Counseling = React.lazy(() => import('./views/counseling/Counseling'));\r\n/*-------------------------------*/\r\n\r\nconst HR = React.lazy(() => import('./views/HR/HR'));\r\nconst Sal_list = React.lazy(() => import('./views/HR/SalaryList'));\r\nconst Sal_edit = React.lazy(() => import('./views/HR/SalaryEdit'));\r\nconst Teacher = React.lazy(() => import('./views/Teacher/Calendar'));\r\n\r\n\r\n// ------------@최인아\r\n// ------------상담\r\nconst Consults = React.lazy(() => import('./views/consult/Consults'));\r\nconst Consult = React.lazy(() => import('./views/consult/Consult'));\r\nconst ConsultInsert = React.lazy(() => import('./views/consult/ConsultInsert'));\r\nconst ConsultUpdate = React.lazy(() => import('./views/consult/ConsultUpdate'));\r\n// ------------공지사항\r\nconst Notices = React.lazy(() => import('./views/notice/Notices'));\r\nconst Notice = React.lazy(() => import('./views/notice/Notice'));\r\nconst NoticeWrite = React.lazy(() => import('./views/notice/NoticeWrite'));\r\nconst NoticeUpdate = React.lazy(() => import('./views/notice/NoticeUpdate'));\r\n// ------------수납관리\r\nconst Receive = React.lazy(() => import('./views/receive/receive'));\r\n// ------------@최인아\r\nconst Branches = React.lazy(() => import('./views/branch/Branches'));\r\nconst Branch = React.lazy(() => import('./views/branch/Branch'));\r\nconst BranchAdd = React.lazy(() => import('./views/branch/BranchAdd'));\r\nconst BranchDelete = React.lazy(() => import('./views/branch/BranchDelete'));\r\nconst BranchUpdate = React.lazy(() => import('./views/branch/BranchUpdate'));\r\n// ------------박수민\r\nconst Attendance = React.lazy(() => import('./views/Attendance/index'));\r\nconst Calendar = React.lazy(() => import('./views/Calendar/index'));\r\nconst Calendar2 = React.lazy(() => import('./views/Calendar/index_view'));\r\nconst attUpdate = React.lazy(() => import('./views/Attendance/AttUpdate'));\r\nconst sessionLog = React.lazy(() => import('./views/users/sessionLog'));\r\nconst Attendance_user = React.lazy(() => import('./views/Attendance/index_view'));\r\nconst vacation = React.lazy(() => import('./views/vacation/index'));\r\nconst vacation_user = React.lazy(() => import('./views/vacation/index_user'));\r\nconst payment = React.lazy(() => import('./views/payment/index'));\r\nconst adpayment = React.lazy(() => import('./views/payment/admin/paymentData'));\r\nconst adpaymentget = React.lazy(() => import('./views/payment/admin/getPayment'));\r\nconst test = React.lazy(() => import('./suminCP/calendar'));\r\nconst paymentget = React.lazy(() => import('./views/payment/getPayment/getPayment'));\r\nconst vacationApply = React.lazy(() => import('./views/vacation/index_apply'));\r\n// -------------박수민\r\n\r\n//start Employee\r\nconst Employee = React.lazy(() => import('./views/employee/Employee'));\r\nconst SaveEmployee = React.lazy(() => import('./views/employee/RegisterEmployee'));\r\nconst StandByAuth = React.lazy(() => import('./views/employee/StandByAuth'));\r\n//end Employee\r\n\r\nconst routes = [\r\n  {path: '/', exact: true, name: 'Home'},\r\n  {path: '/dashboard', name: 'Dashboard', component: Dashboard},\r\n  {path: '/theme', name: 'Theme', component: Colors, exact: true},\r\n  {path: '/theme/colors', name: 'Colors', component: Colors},\r\n  {path: '/theme/typography', name: 'Typography', component: Typography},\r\n  {path: '/base', name: 'Base', component: Cards, exact: true},\r\n  {path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs},\r\n  {path: '/base/cards', name: 'Cards', component: Cards},\r\n  {path: '/base/carousels', name: 'Carousel', component: Carousels},\r\n  {path: '/base/collapses', name: 'Collapse', component: Collapses},\r\n  {path: '/base/forms', name: 'Forms', component: BasicForms},\r\n  {path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons},\r\n  {path: '/base/list-groups', name: 'List Groups', component: ListGroups},\r\n  {path: '/base/navbars', name: 'Navbars', component: Navbars},\r\n  {path: '/base/navs', name: 'Navs', component: Navs},\r\n  {path: '/base/paginations', name: 'Paginations', component: Paginations},\r\n  {path: '/base/popovers', name: 'Popovers', component: Popovers},\r\n  {path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar},\r\n  {path: '/base/switches', name: 'Switches', component: Switches},\r\n  {path: '/base/tables', name: 'Tables', component: Tables},\r\n  {path: '/base/tabs', name: 'Tabs', component: Tabs},\r\n  {path: '/base/tooltips', name: 'Tooltips', component: Tooltips},\r\n  {path: '/buttons', name: 'Buttons', component: Buttons, exact: true},\r\n  {path: '/buttons/buttons', name: 'Buttons', component: Buttons},\r\n  {path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns},\r\n  {path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups},\r\n  {path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons},\r\n  {path: '/charts', name: 'Charts', component: Charts},\r\n  {path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons},\r\n  {path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons},\r\n  {path: '/icons/flags', name: 'Flags', component: Flags},\r\n  {path: '/icons/brands', name: 'Brands', component: Brands},\r\n  {path: '/notifications', name: 'Notifications', component: Alerts, exact: true},\r\n  {path: '/notifications/alerts', name: 'Alerts', component: Alerts},\r\n  {path: '/notifications/badges', name: 'Badges', component: Badges},\r\n  {path: '/notifications/modals', name: 'Modals', component: Modals},\r\n  {path: '/notifications/toaster', name: 'Toaster', component: Toaster},\r\n\r\n  {path: '/widgets', name: 'Widgets', component: Widgets},\r\n  {path: '/students', exact: true, name: 'Students', component: Students},\r\n  {path: '/student', exact: true, name: 'Students', component: Student},\r\n  {path: '/ins_stu', exact: true, name: 'Ins_stu', component: Ins_stu},\r\n  {path: '/edit_stu', exact: true, name: 'Edit_stu', component: Edit_stu},\r\n\r\n  {path: '/stu_att', exact: true, name: 'stu_att', component: Stu_att},\r\n  {path: '/ins_att', exact: true, name: 'ins_att', component: Ins_att},\r\n\r\n  {path: '/users', exact: true, name: 'Users', component: Users},\r\n  {path: '/users/:id', exact: true, name: 'User Details', component: User},\r\n  /*--여진---------------------------------------*/\r\n  {path: '/lecture', exact: true, name: 'Lectures', component: Lectures},\r\n  {path: '/lecture/:id', exact: true, name: 'Lecture Details', component: Lecture},\r\n  {path: '/lectureAdd', exact: true, name: 'Lecture Add', component: LectureAdd},\r\n  {path: '/lectureDelete/:id', exact: true, name: 'Lecture Delete', component: LectureDelete},\r\n  {path: '/lectureUpdate', exact: true, name: 'Lecture Update', component: LectureUpdate},\r\n\r\n  {path: '/score', exact: true, name: 'Score', component: Score},\r\n  {path: '/counseling', exact: true, name: 'Counseling', component: Counseling},\r\n  /*--여진---------------------------------------*/\r\n\r\n  {path: '/HR', exact: true, name: 'HR', component: HR},\r\n  {path: '/sal_list', exact: true, name: 'sal_list', component: Sal_list},\r\n  {path: '/sal_edit', exact: true, name: 'sal_edit', component: Sal_edit},\r\n\r\n  {path: '/teacher', exact: true, name: 'teacher', component: Teacher},\r\n\r\n\r\n  // ------------@최인아\r\n  // ------------상담\r\n\r\n\r\n  {path: '/consult', exact: true, name: 'Consults', component: Consults},\r\n  {path: '/consult/:id', exact: true, name: 'Consult Details', component: Consult},\r\n  {path: '/consultInsert', exact: true, name: 'Consult Insert', component: ConsultInsert},\r\n  {path: '/consultUpdate', exact: true, name: 'Consult Update', component: ConsultUpdate},\r\n  // ------------공지사항\r\n  {path: '/notice/:id', exact: true, name: 'Notice Details', component: Notice},\r\n  {path: '/notice', exact: true, name: 'Notices', component: Notices},\r\n  {path: '/noticeWrite', exact: true, name: 'NoticeWrite', component: NoticeWrite},\r\n  {path: '/noticeUpdate', exact: true, name: 'Notice Update', component: NoticeUpdate},\r\n  // ------------수납관리\r\n  {path: '/receive', exact: true, name: 'Receive', component: Receive},\r\n  // ------------@최인아\r\n  {path: '/branch', exact: true, name: 'Branches', component: Branches},\r\n  {path: '/branch/:id', exact: true, name: 'Branch Details', component: Branch},\r\n  {path: '/branchAdd', exact: true, name: 'Branch Add', component: BranchAdd},\r\n  {path: '/branchDelete/:id', exact: true, name: 'Branch Delete', component: BranchDelete},\r\n  {path: '/branchUpdate', exact: true, name: 'Branch Update', component: BranchUpdate},\r\n\r\n  // -------------박수민\r\n  {path: '/Attendance', exact: true, name: 'Attendance', component: Attendance},\r\n  {path: '/Attendance/:no', exact: true, name: 'Attendance Update', component: attUpdate},\r\n\r\n  {path: '/Calendar_admin', exact: true, name: 'Calendar', component: Calendar},\r\n  {path: '/Calendar', exact: true, name: 'Calendar', component: Calendar2},\r\n  {path: '/logintest/:log/:no/:name/:dep', exact: true, name: 'sessionLog', component: sessionLog},\r\n  {path: '/logintest/:log/', exact: true, name: 'sessionLog', component: sessionLog},\r\n  {path: '/Attendance_user', exact: true, name: 'Attendance', component: Attendance_user},\r\n  {path: '/vacation', exact: true, name: 'vacation', component: vacation},\r\n  {path: '/vacation_user', exact: true, name: 'vacation', component: vacation_user},\r\n  {path: '/payment', exact: true, name: 'payment', component: payment},\r\n  {path: '/payment/:no', exact: true, name: 'payment', component: paymentget},\r\n  {path: '/test', exact: true, name: 'payment', component: test},\r\n  {path: '/vacation_apply', exact: true, name: 'vacationApply', component: vacationApply},\r\n  {path: '/adpayment', exact: true, name: 'adpayment', component: adpayment},\r\n  {path: '/adpaymentget/:no', exact: true, name: 'adpayment', component: adpaymentget},\r\n  // -------------박수민\r\n\r\n  //start Employee\r\n  {path: '/employee', exact: true, name: 'Employee', component: Employee},\r\n  {path: '/saveEmployee', exact: true, name: 'SaveEmployee', component: SaveEmployee},\r\n  {path: '/standByAuth', exact: true, name: 'StandByAuth', component: StandByAuth}\r\n  //end Employee\r\n];\r\n\r\nexport default routes;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js",["639"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, withStyles, Grid} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CTextarea} from '@coreui/react'\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n    display: 'none'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 210,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nclass NoticeWrite extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.noticeWrite = this.noticeWrite.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.noticeWrite()\r\n    this.setState({\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.title] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let nextState = {};\r\n    nextState[event.target.name] = event.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  noticeWrite() {\r\n    axios({\r\n      url: 'http://localhost:8080/notice',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        section: this.state.section,\r\n        title: this.state.title,\r\n        content: this.state.content\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      section: '',\r\n      title : '',\r\n      content: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container justify=\"flex-end\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>글쓰기</Button>\r\n        </Grid>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} fullWidth={true} maxWidth = {'xs'}>\r\n          <DialogTitle>공 지 사 항</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Grid>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">구분</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={this.state.section}\r\n                    onChange={this.handleChange}\r\n                    label=\"구분\"\r\n                    inputProps={{ name: 'section', id: 'outlined-age-native-simple',}}>\r\n                      <option aria-label=\"None\" value=\"section\" />\r\n                      <option value={\"공지\"}>공지</option>\r\n                      <option value={\"결혼\"}>결혼</option>\r\n                      <option value={\"출산\"}>출산</option>\r\n                      <option value={\"입양\"}>입양</option>\r\n                      <option value={\"사망\"}>사망</option>\r\n                </Select>\r\n              </FormControl>\r\n              </Grid>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <TextField label=\"제목\" type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/><br/>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CTextarea \r\n                      name=\"content\" \r\n                      id=\"textarea-input\" \r\n                      rows=\"9\"\r\n                      placeholder=\"...\" \r\n                      value={this.state.content} onChange={this.handleChange}\r\n                    />\r\n                  </CCol>\r\n                </CFormGroup>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>글등록</Button>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        \r\n          </Dialog>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(NoticeWrite)\r\n\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js",["640","641"],"//-----------------------\r\n// 제목 : 상담 수정\r\n// 파일명 : ConsultUpdate.js\r\n// 작성자 : 최인아\r\n// 작성일 : \r\n//-----------------------\r\nimport React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, withStyles} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CInputCheckbox, CLabel } from \"@coreui/react\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n});\r\n\r\nclass ConsultUpdate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.ConsultList.name,\r\n      hp: this.props.ConsultList.hp,\r\n      schedule: this.props.ConsultList.schedule,\r\n      memo: this.props.ConsultList.memo,\r\n      route: this.props.ConsultList.route,\r\n      writer: this.props.ConsultList.writer\r\n    }\r\n\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.updateConsult = this.updateConsult.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.checkboxChange = this.checkboxChange.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.updateConsult()\r\n    this.setState({\r\n      name: '',\r\n      hp: '',\r\n      schedule: '',\r\n      memo: '',\r\n      route: '',\r\n      writer: ''\r\n\r\n    })\r\n    alert(\"수정되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  updateConsult() {\r\n    axios({\r\n      url: 'http://localhost:8080/consult/edit/' + this.props.ConsultList.no,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        name: this.state.name,\r\n        hp: this.state.hp,\r\n        schedule: this.state.schedule,\r\n        memo: this.state.memo,\r\n        route: this.state.route.toString(),\r\n        writer: this.state.writer\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n   checkboxChange = (e) => {\r\n     const route=this.state.route\r\n     let index\r\n     if (e.target.checked) {\r\n       route.push(e.target.value)\r\n     } else {\r\n       index = route.indexOf(e.target.value)\r\n       route.splice(index, 1)\r\n    }\r\n     this.setState({route:route})\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    let ConsultList = this.props.ConsultList;\r\n    let route = this.state.route;\r\n    console.log(ConsultList);\r\n\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n          수정\r\n        </Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>상담 수정</DialogTitle>\r\n          <DialogContent>\r\n          {/* <CFormGroup row>\r\n              <CCol md=\"9\">\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox1\" name=\"route\" value={\"CALL\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"CALL\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">CALL</CLabel>\r\n                </CFormGroup>\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox2\" name=\"route\" value={\"ONLINE\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"ONLINE\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">ONLINE</CLabel>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup> */}\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"name\">성명</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"성명\" defaultValue={ConsultList.name} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hp\">전화번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"hp\" placeholder=\"전화번호\" defaultValue={ConsultList.hp} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"schedule\">상담날짜</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"schedule\" placeholder=\"상담날짜\" defaultValue={ConsultList.schedule} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"memo\">상담내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"meom\" placeholder=\"상담내용\" defaultValue={ConsultList.memo} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"wrtier\">작성자</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"writer\" placeholder=\"작성자\" defaultValue={ConsultList.writer} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>수정완료</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ConsultUpdate)\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js",["642"],"// import React, {Component} from \"react\";\r\n// import axios from \"axios\";\r\n// import './table.css';\r\n// import ConsultInsert from \"./ConsultInsert\";\r\n// import Consult from \"./Consult\";\r\n// import { CButton, CInput } from \"@coreui/react\";\r\n\r\n// class Consults extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       keyword: '', //공백으로 지정\r\n//         consultList: \"\"\r\n//     }\r\n//     this.stateRefresh = this.stateRefresh.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n// }\r\n\r\n// handleChange(e) { //위에 지정되는 걸 변화\r\n//   this.setState({\r\n//   keyword: e.target.value\r\n// });\r\n// }\r\n\r\n//   stateRefresh() {\r\n//     this.setState({\r\n//       consultList: \"\",\r\n//     });\r\n//     this.getApi(this.state.keyword);\r\n\r\n//   }\r\n\r\n// componentDidMount() {\r\n//     this.getApi(this.state.keyword);\r\n// }\r\n\r\n// getApi = (keyword) => {\r\n//     axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n//         .then(res => {\r\n//             this.setState({\r\n//               consultList: res.data.message\r\n//             })\r\n//         })\r\n//         .catch(res => console.log(res))\r\n// }\r\n\r\n//   render() {\r\n//     const { consultList } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <header>\r\n//           <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n//           <br></br>\r\n//         </header>\r\n//         <table id=\"table1\" border=\"0\">\r\n//          <tr id=\"table1\">\r\n//            <td id=\"table1\">\r\n//              <CInput\r\n//               name=\"keyword\"\r\n//               placeholder=\"Search\"\r\n//               value={this.state.keyword}\r\n//               onChange={this.handleChange}\r\n//               class=\"w-25 p-3\"\r\n//               //class=\"form-control\"\r\n//             />&nbsp;&nbsp;&nbsp;\r\n//             <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n//                      onClick = {(e) => {\r\n//                                 this.getApi(this.state.keyword)}}>검색</CButton>\r\n//           </td>\r\n//         </tr>\r\n//       </table>\r\n//         <table>\r\n//         <thead>\r\n//           <tr>\r\n//           <td>NO</td>\r\n//             <td>name</td>\r\n//              <td>  hp  </td>\r\n//            <td>schedule</td>\r\n//             <td>memo</td>\r\n//             <td>route</td>\r\n//              <td>writer</td>\r\n//            <td>regdate</td>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//          {consultList&&consultList.map((consultdata, insertIndex) => {\r\n//             return (\r\n//             <tr key={insertIndex}>\r\n//                 <td>{consultdata.no}</td>\r\n//                 <td> <Consult stateRefresh={this.stateRefresh} id={consultdata.no}/></td>\r\n//                 <td>{consultdata.hp}</td>\r\n//                <td>{consultdata.schedule}</td>\r\n//                <td>{consultdata.memo}</td>\r\n//                 <td>{consultdata.route}</td>\r\n//                  <td>{consultdata.writer}</td>\r\n//                  <td>{consultdata.regdate}</td>\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>\r\n//       </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Consults;\r\n\r\n//-----------------------\r\n// 제목 : 상담 기록 리스트\r\n// 파일명 : Consults.js\r\n// 작성자 : 최인아\r\n//-----------------------\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { CButton, CInput } from \"@coreui/react\";\r\nimport ConsultInsert from \"./ConsultInsert\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nclass Consults extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        keyword: '', //공백으로 지정\r\n        ConsultList: \"\"\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this)\r\n    this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(e) { //위에 지정되는 걸 변화\r\n  this.setState({\r\n  keyword: e.target.value\r\n});\r\n}\r\n\r\nstateRefresh() {\r\n  this.setState({\r\n    ConsultList: \"\"\r\n  });\r\n  this.getApi(this.state.keyword);\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.getApi(this.state.keyword);\r\n}\r\n\r\ngetApi = (keyword) => {\r\n    axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n        .then(res => {\r\n            this.setState({\r\n              ConsultList: res.data.message\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n}\r\n\r\n  render() {\r\n    const { ConsultList } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <table id=\"table1\" border=\"0\">\r\n        <tr id=\"table1\">\r\n          <td id=\"table1\">\r\n            <CInput\r\n              name=\"keyword\"\r\n              placeholder=\"Search\"\r\n              value={this.state.keyword}\r\n              onChange={this.handleChange}\r\n              class=\"w-25 p-3\"\r\n              //class=\"form-control\"\r\n            />&nbsp;&nbsp;&nbsp;\r\n            <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n                     onClick = {(e) => {\r\n                                this.getApi(this.state.keyword)}}>검색</CButton>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <header>\r\n        <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n      </header>\r\n        <br></br>\r\n    <table>\r\n        <thead>\r\n            <td>NO</td>\r\n            <td>name</td>\r\n            <td>  hp  </td>\r\n            <td>schedule</td>\r\n            <td>memo</td>\r\n            <td>route</td>\r\n            <td>writer</td>\r\n            <td>regdate</td>\r\n        </thead>\r\n          <tbody>\r\n           {ConsultList&&ConsultList.map((consultdata, insertIndex) => {\r\n            return (\r\n            <tr key={insertIndex}>\r\n                <td>{consultdata.no}</td>\r\n                <td><Link to={`/consult/${consultdata.no}`}>{consultdata.name}</Link></td>\r\n                <td>{consultdata.hp}</td>\r\n                <td>{consultdata.schedule}</td>\r\n                <td>{consultdata.memo}</td>\r\n                <td>{consultdata.route}</td>\r\n                <td>{consultdata.writer}</td>\r\n                <td>{consultdata.regdate}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody> \r\n      </table>\r\n      <br></br>\r\n      <div>\r\n        <Pagination count={10} color=\"primary\" />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Consults);\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js",["643","644","645","646","647"],"import React, {Component, useState} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\nimport {CCard, CCardBody, CCardHeader, CPagination} from \"@coreui/react\";\r\nimport {DocsLink} from \"../../reusable\";\r\n\r\nclass Employee extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      employeeList: [],\r\n      currentPage : 1,\r\n      size : 10,\r\n      setCurrentPage : 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    ApiService.getEmployee(this.state).then(res => {\r\n      this.setState({\r\n        employeeList : res.data.content,\r\n        currentPage : res.data.number+1,\r\n        size : this.state,\r\n        setCurrentPage : 0\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {employeeList, currentPage, size , setCurrentPage} = {}//useState(0);\r\n\r\n    return (\r\n      <div>\r\n        <h2>직원 목록</h2>\r\n         <table>\r\n           <thead>\r\n           <tr>\r\n             <th>번호</th>\r\n             <th>이름</th>\r\n             <th>전화번호</th>\r\n             <th>주소</th>\r\n             <th>생년월일</th>\r\n             <th>성별</th>\r\n             <th>직급</th>\r\n             <th>연봉</th>\r\n           </tr>\r\n           </thead>\r\n           <tbody>\r\n           {\r\n             this.state.employeeList.map(\r\n               data =>\r\n             <tr key = {data.no}>\r\n              <td>{data.no}</td>\r\n               <td>{data.name}</td>\r\n               <td>{data.hp}</td>\r\n               <td>{data.address}</td>\r\n               <td>{data.birth}</td>\r\n               <td>{data.sex}</td>\r\n               <td>{data.rank}</td>\r\n               <td>{data.salary}</td>\r\n             </tr>\r\n             )\r\n           }\r\n           </tbody>\r\n         </table>\r\n        <CCard>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={size}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n        </CCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\calendar.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\dashboard\\Dashboard.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js",["648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  import { DocsLink } from 'src/reusable'\r\n\r\nclass Student extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            no : '',\r\n            name : '',\r\n            hp : '',\r\n            email : '',\r\n            birth : '',\r\n            address : '',\r\n            lecture : '',\r\n            gender : '',\r\n            regdate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n            ApiService.Student(window.localStorage.getItem(\"StudentNO\"))\r\n                .then(res => {\r\n                    let stu =  res.data.listdata;\r\n                    this.setState({\r\n                        no : stu.no,\r\n                        name : stu.name,\r\n                        hp : stu.hp,\r\n                        email : stu.email,\r\n                        birth : stu.birth,\r\n                        address : stu.address,\r\n                        lecture : stu.lecture,\r\n                        gender : stu.gender,\r\n                        regdate : stu.regdate\r\n                    })\r\n                })\r\n            .catch(err =>{\r\n                console.log('getApi() 에러', err);\r\n            });\r\n        }\r\n\r\n    delStu = (NO) => {\r\n        ApiService.deleteStudent(NO)\r\n        .then( res => {\r\n            this.setState({\r\n                message : 'User Deleted Suscces'\r\n            });\r\n            alert(this.state.message);\r\n            this.props.history.push('/students');\r\n        })\r\n        .catch(err => {\r\n            console.log('delStu() Error!', err);\r\n        })\r\n    }\r\n\r\n    editStu = (NO) => {\r\n        window.localStorage.setItem(\"StudentNO\", NO);\r\n        this.props.history.push('/edit_stu');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CRow>\r\n                <CCol xs=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            학생 상세 정보\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CForm>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">등록번호</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.no}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.name}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">전화번호</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.hp}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.email}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">생년월일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.birth}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.address}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">교육과정</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.lecture}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">성별</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.gender}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">등록일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.regdate}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={() => this.editStu(this.state.no)}>수정</CButton>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={() => this.delStu(this.state.no)}>삭제</CButton>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Student;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js",["671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  //import { DocsLink } from 'src/reusable'\r\n\r\n  class Edit_stu extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            no : '',\r\n            name : '',\r\n            hp : '',\r\n            email : '',\r\n            birth : '',\r\n            address : '',\r\n            lecture : '',\r\n            gender : '',\r\n            regdate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Student(window.localStorage.getItem(\"StudentNO\"))\r\n            .then(res => {\r\n                let stu =  res.data.listdata;\r\n                this.setState({\r\n                    no : stu.no,\r\n                    name : stu.name,\r\n                    hp : stu.hp,\r\n                    email : stu.email,\r\n                    birth : stu.birth,\r\n                    address : stu.address,\r\n                    lecture : stu.lecture,\r\n                    gender : stu.gender,\r\n                    regdate : stu.regdate\r\n                })\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    saveStudent = (e) => {\r\n        e.preventDefault();\r\n\r\n        let student = {\r\n            no : this.state.no,\r\n            hp : this.state.hp,\r\n            email : this.state.email,\r\n            birth : this.state.birth,\r\n            address : this.state.address,\r\n            lecture : this.state.lecture,\r\n        }\r\n\r\n        ApiService.editStudent(student)\r\n            .then( res => {\r\n            this.setState({\r\n                message : student.name + '님의 정보가 수정되었습니다'\r\n            })\r\n            console.log(this.state.message);\r\n            this.props.history.push('/students');\r\n            })\r\n            .catch( err => {\r\n            console.log('saveStudent() 에러', err);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n              <CCard>\r\n                <CCardHeader>\r\n                  학생 정보 수정\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm>\r\n                   <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                      <CLabel>{this.state.name}</CLabel>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"hp\" placeholder={this.state.hp} value={this.state.hp} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"email-input\">이메일주소</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"email\" placeholder={this.state.email} value={this.state.email} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"date-input\">생년월일</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput type=\"date\" name=\"birth\" placeholder={this.state.birth} value={this.state.birth} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup><CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">주소 입력</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"address\" placeholder={this.state.address} value={this.state.address} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"select\">수강과목</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CSelect custom name=\"lecture\" onChange={this.onChange}>\r\n                        <option value=\"0\">과목을 선택하세요</option>\r\n                          <option value=\"1\">JAVA</option>\r\n                          <option value=\"2\">PYTHON</option>\r\n                          <option value=\"3\">C++</option>\r\n                          <option value=\"4\">KOTLIN</option>\r\n                          <option value=\"5\">수강과목 없음</option>\r\n                        </CSelect>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton onClick={this.saveStudent} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n                </CCardFooter>\r\n              </CCard>\r\n              </CCol>\r\n            </CRow>\r\n        );}\r\n}\r\n\r\nexport default Edit_stu","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js",["689"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CCol, CForm, CSelect} from \"@coreui/react\";\r\nimport {Button, Grid, IconButton} from \"@material-ui/core\";\r\nimport Exam from \"../exam/Exam\";\r\nimport ScoreEdit from \"./ScoreEdit\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ScoreTotal from \"./ScoreTotal\";\r\n\r\nclass Score extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: session_no,\r\n      lecture: \"\",\r\n      examList: \"\",\r\n      scoreArray: [],\r\n      disabled: true,\r\n      title: \"수정\",\r\n      totalWeight: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.editScore = this.editScore.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n    });\r\n    this.getLecture();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getLecture() {\r\n    axios.get(\"http://localhost:8080/api/students/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n      average:\"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/api/students/\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n          scoreArray: [],\r\n          examList: \"\",\r\n          totalWeight: \"\",\r\n          disabled: true,\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  editScore() {\r\n    axios({\r\n      url: 'http://localhost:8080/score',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        scoreArray: this.state.scoreArray,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  setData(scoreArray) {\r\n    let no\r\n    let exam\r\n    let lecture\r\n    let score\r\n    let student\r\n    let regdate = new Date();\r\n    let array = this.state.scoreArray;\r\n\r\n\r\n    scoreArray.map((scoreList) => {\r\n      exam = scoreList.exam;\r\n      lecture = scoreList.lecture;\r\n      score = scoreList.score;\r\n      student = scoreList.student;\r\n      no = scoreList.no;\r\n    })\r\n\r\n    let index = array.findIndex(isScore);\r\n    function isScore(element) {\r\n      if (element.exam === exam && element.lecture === lecture && element.student === student) {\r\n        return true;\r\n\r\n      }\r\n    }\r\n\r\n    if (score === \"\") {\r\n      score = 0;\r\n    }\r\n    if (index > -1) {\r\n      array[index].score = score;\r\n      array[index].regdate = regdate;\r\n    } else {\r\n      if (no === \"\") {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n        })\r\n      } else {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n          no: no,\r\n        })\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      scoreArray: array,\r\n    })\r\n    console.log(array)\r\n  }\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state\r\n    let name = \"수정\"\r\n    if (this.state.disabled) {\r\n      name = \"수정\"\r\n    } else {\r\n      name = \"수정완료\"\r\n    }\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"0\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n            <Grid container justify=\"flex-end\">\r\n              <Exam stateRefresh={this.stateRefresh} teacher={this.state.teacher}/>\r\n            </Grid>\r\n          </CForm>\r\n          <br/>\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td width=\"10%\">학생명</td>\r\n            {examList && examList.map((itemdata) => {\r\n              return (<td>{itemdata.name}&nbsp;({itemdata.weight}%)</td>);\r\n            })}\r\n            <td bgcolor=\"#eee8aa\">총점&nbsp;({this.state.totalWeight}%)</td>\r\n          </tr>\r\n          <tr>\r\n\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                {\r\n                  examList && examList.map((examdata) => {\r\n                    return (\r\n                      <td key={examdata.no}>\r\n                        <ScoreEdit\r\n                          id={itemdata.no}\r\n                          lecture={this.state.lecture}\r\n                          exam={examdata.no}\r\n                          setData={this.setData}\r\n                          disabled={this.state.disabled}/>\r\n                      </td>);\r\n                  })\r\n                }\r\n                <td bgcolor=\"#eee8aa\"><ScoreTotal\r\n                  id={itemdata.no}\r\n                  lecture={this.state.lecture}\r\n                  /></td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다.</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n        <br/>\r\n        <Grid container justify=\"flex-end\">\r\n          {studentList.length > 0 &&\r\n          <CCol md=\"1\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>{name}</Button>\r\n          </CCol>\r\n          }\r\n          {this.state.disabled === false &&\r\n          <Button variant=\"contained\" onClick={this.stateRefresh}>취소</Button>\r\n          }\r\n        </Grid>\r\n        <br/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js",["690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708"],"import React, { Component } from \"react\";\r\n//import axios from \"axios\";\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n   // import { DocsLink } from 'src/reusable'\r\n\r\nclass Ins_stu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      hp: '',\r\n      email: '',\r\n      bitrh: '',\r\n      address: '',\r\n      lecture: '',\r\n      gender: '',\r\n      regdate:''\r\n    }\r\n  }\r\n\r\n  onChange =(e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  saveStudent = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.email)\r\n\r\n    let student = {\r\n      name : this.state.name,\r\n      hp : this.state.hp,\r\n      email : this.state.email,\r\n      birth : this.state.birth,\r\n      address : this.state.address,\r\n      lecture : this.state.lecture,\r\n      gender : this.state.gender,\r\n      //regdate : this.state.regdate\r\n    }\r\n\r\n    console.log(this.state.email)\r\n\r\n    ApiService.addStudent(student)\r\n    .then( res => {\r\n      this.setState({\r\n        message : student.name + '님이 성공적으로 등록되었습니다'\r\n      })\r\n      console.log(this.state.message);\r\n      this.props.history.push('/students');\r\n    })\r\n    .catch( err => {\r\n      console.log('saveStudent() 에러', err);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              학생 정보 등록\r\n              <small> Elements</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm>\r\n               <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"name\" placeholder=\"이름\" value={this.state.name} onChange={this.onChange} />\r\n                    <CFormText>이름을 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"hp\" placeholder=\"핸드폰 번호\" value={this.state.hp} onChange={this.onChange}/>\r\n                    <CFormText>숫자만 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">이메일주소</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"email\" placeholder=\"이메일 주소\" value={this.state.email} onChange={this.onChange}/>\r\n                    <CFormText className=\"help-block\">이메일주소를 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"date-input\">생년월일</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"date\" name=\"birth\" placeholder=\"생년월일\" value={this.state.birth} onChange={this.onChange}/>\r\n                  </CCol>\r\n                </CFormGroup><CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">주소 입력</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"address\" placeholder=\"주소\" value={this.state.address} onChange={this.onChange}/>\r\n                    <CFormText>주소를 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">수강과목</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"lecture\" onChange={this.onChange}>\r\n                    <option value=\"0\">과목을 선택하세요</option>\r\n                      <option value=\"1\">JAVA</option>\r\n                      <option value=\"2\">PYTHON</option>\r\n                      <option value=\"3\">C++</option>\r\n                      <option value=\"4\">KOTLIN</option>\r\n                      <option value=\"5\">수강과목 없음</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">성별</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"gender\" onChange={this.onChange}>\r\n                    <option value=\"0\">성별을 선택하세요</option>\r\n                      <option value=\"male\">male</option>\r\n                      <option value=\"female\">female</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n            </CCardFooter>\r\n          </CCard>\r\n          </CCol>\r\n        </CRow>\r\n    );}\r\n}\r\n\r\nexport default Ins_stu;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js",["709","710","711","712","713","714","715"],"import React,{ Component,useState } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CPagination\r\n  } from '@coreui/react'\r\nimport Pagination from \"../Template/base/paginations/Pagnations\";\r\n\r\nclass Students extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            StudentList: \"\",\r\n            currentPages:\"\",\r\n            currentPage:\"\",\r\n            Size : 5,\r\n            totalPages :\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi(this.state.cuurentPages);\r\n    }\r\n\r\n    getApi = (currentPages) => {\r\n        currentPages = currentPages -1\r\n        ApiService.Students(currentPages,this.state.Size)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    StudentList : res.data.content,\r\n                    totalPages : res.data.totalPages,\r\n                    totalElements : res.data.totalElements\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n    selStu = (NO) => {\r\n        window.localStorage.setItem(\"StudentNO\", NO);\r\n        this.props.history.push('/student');\r\n    }\r\n\r\n    // Paginations = (e) => {\r\n    //     const [currentPage, setCurrentPage] = 1;\r\n    //     const {totalPages} = this.state;\r\n    //     console.log(currentPage)\r\n    //     console.log(this.state.currentPages)\r\n    //     console.log(this.state.currentPages != currentPage)\r\n    //         if(this.state.currentPages != currentPage){\r\n    //         this.state.currentPages = currentPage;\r\n    //         this.getApi(this.state.currentPages)\r\n    //         }else{\r\n    //             console.log(this.state.currentPages == currentPage)\r\n    //         }\r\n\r\n    //     return(\r\n    //     <>\r\n    //         <CCard>\r\n    //                 <CCardHeader>\r\n    //                 Pagination\r\n    //                 <DocsLink name=\"CPagination\"/>\r\n    //                 </CCardHeader>\r\n    //                     <CCardBody>\r\n    //                     <CPagination\r\n    //                     activePage={currentPage}\r\n    //                     pages= {totalPages}\r\n    //                     onActivePageChange={setCurrentPage}/>\r\n    //                 </CCardBody>\r\n    //          </CCard>\r\n    //     </>\r\n    //     )\r\n\r\n    // }\r\n    render () {\r\n        const { StudentList } =  this.state;\r\n\r\n        // const { currentPage } = this.state;\r\n        // const { totalPages } = this.state;\r\n\r\n        return (\r\n            <div>\r\n            <table>\r\n            <tr><td>no</td><td>name</td><td>hp</td><td>email</td><td>birth</td><td>address</td><td>lecture</td><td>gender</td><td>regdate</td><td></td></tr>\r\n                {StudentList&&StudentList.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>{itemdata.hp}</td>\r\n                    <td>{itemdata.email}</td>\r\n                    <td>{itemdata.birth}</td>\r\n                    <td>{itemdata.address}</td>\r\n                    <td>{itemdata.lecture}</td>\r\n                    <td>{itemdata.gender}</td>\r\n                    <td>{itemdata.regdate}</td>\r\n                    <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selStu(itemdata.no)}>상세</CButton></td>\r\n                    </tr>\r\n                    );\r\n                })}\r\n            <tr><td>\r\n                <Link to={\"/ins_stu\"}>학생등록하기</Link>\r\n                </td></tr>\r\n                <tr><td>\r\n                    {/* <CCard>\r\n                    <CCardHeader>\r\n                    Pagination\r\n                    <DocsLink name=\"CPagination\"/>\r\n                    </CCardHeader>\r\n                        <CCardBody>\r\n                        <CPagination\r\n                        activePage={currentPage}\r\n                        pages= {totalPages}\r\n                        onActivePageChange={setCurrentPage}/>\r\n                    </CCardBody>\r\n             </CCard> */}\r\n             \r\n             </td></tr>\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Paginations = () => {\r\n    //     const [currentPage, setCurrentPage] = useState(2)\r\n    //     return (\r\n    //   <>\r\n    //     <CCard>\r\n    //       <CCardBody>\r\n    //         <h6>Default</h6>\r\n    //         <CPagination\r\n    //           activePage={0}\r\n    //           pages={5}\r\n    //           onActivePageChange={setCurrentPage}\r\n    //         />\r\n    //         <br></br>\r\n    //         </CCardBody>\r\n    //         </CCard>\r\n    //     </>\r\n    //     )\r\n    // }\r\n}\r\n\r\nexport default Students;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js",["716"],"import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CPagination\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\n\r\nconst Pagination = () => {\r\n  const [currentPage, setCurrentPage] = useState(2)\r\n  console.log(currentPage)\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Pagination\r\n          <DocsLink name=\"CPagination\"/>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Default//{currentPage}//{setCurrentPage}</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Small</h6>\r\n          <CPagination\r\n            size=\"sm\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div className=\"d-md-down-none\">\r\n            <h6>Large</h6>\r\n            <CPagination\r\n              size=\"lg\"\r\n              activePage={currentPage}\r\n              pages={10}\r\n              onActivePageChange={setCurrentPage}\r\n            />\r\n            <br></br>\r\n          </div>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <strong> Pagination </strong>\r\n          <small>alignment</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Left alignment (default)</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Center alignment</h6>\r\n          <CPagination\r\n            align=\"center\"\r\n            addListClass=\"some-class\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Right (end) alignment</h6>\r\n          <CPagination\r\n            align=\"end\"\r\n            activePage={currentPage}\r\n            pages={7}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js",["717"],"import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:8080/api\";\r\n\r\nclass ApiService {\r\n\r\n    Students(currentPage,Size) {\r\n        return axios.get(USER_API_BASE_URL + '/students' + \"?page=\" + currentPage + \"&size=\" + Size);\r\n    }\r\n\r\n  Student(no) {\r\n    console.log(\"!!!!!!!!!!!!!!!!!\" + no);\r\n    return axios.get(USER_API_BASE_URL + '/student/' + no);\r\n  }\r\n\r\n  addStudent(student) {\r\n    return axios.post(USER_API_BASE_URL + '/ins_stu', student);\r\n  }\r\n\r\n  deleteStudent(no) {\r\n    return axios.delete(USER_API_BASE_URL + '/' + no);\r\n  }\r\n\r\n  editStudent(student) {\r\n    return axios.post(USER_API_BASE_URL + '/edit_stu/' + student.no, student);\r\n  }\r\n\r\n  getEmployee(state) {\r\n    return axios.get(USER_API_BASE_URL +\r\n      '/employee?size=' + state.size +\r\n      '&page=' + (state.setCurrentPage - 1));\r\n  }\r\n\r\n  InsertEmployee(employee) {\r\n    return axios.post(USER_API_BASE_URL +\r\n      '/employee', employee);\r\n  }\r\n  standByAuth() {\r\n    return axios.get(USER_API_BASE_URL +\r\n      '/standByAuth');\r\n  }\r\n    StuAtt(name) {\r\n        return axios.get(USER_API_BASE_URL + '/stu_att/' + name);\r\n    }\r\n\r\n    Leclist() {\r\n        return axios.get(USER_API_BASE_URL + '/stu_att');\r\n    }\r\n\r\n    InsAtt(lec) {\r\n        console.log(\"?????\" + lec);\r\n        return axios.get(USER_API_BASE_URL + '/ins_att/' + lec);\r\n    }\r\n\r\n    Salary() {\r\n        return axios.get(USER_API_BASE_URL + '/salary');\r\n    }\r\n\r\n    SalaryEmp(no) {\r\n        return axios.get(USER_API_BASE_URL + '/salary_emp/' + no);\r\n    }\r\n\r\n    Teacher(no) {\r\n        return axios.get(USER_API_BASE_URL + '/lec_time/' + no);\r\n    }\r\n\r\n}\r\n\r\nexport default new ApiService();\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js",["718"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CButton, CCol, CFormGroup, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, Grid, IconButton, Select, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExamAdd from \"./ExamAdd\";\r\nimport ExamUpdate from \"./ExamUpdate\";\r\nimport ExamDelete from \"./ExamDelete\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass Exam extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lectureList: \"\",\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n    }\r\n\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.lectureSelect = this.lectureSelect.bind(this);\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.id !== prevProps.id)\r\n    {\r\n      this.getDetail()\r\n    }\r\n  }\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getExam = () => {\r\n    axios.get(\"http://localhost:8080/exam?lecture=\"+this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getDetail = () => {\r\n    axios.get(\"http://localhost:8080/exam/\"+this.state.exam)\r\n      .then(res => {\r\n        if(res.data.list !== null){\r\n          this.setState({\r\n            partDetail: res.data.list,\r\n          })}else{this.setState({\r\n          partDetail:\"\",\r\n        })}\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      examList:\"\",\r\n      totalWeight:\"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  stateRefresh() {\r\n    console.log(\"refresh\")\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      exam: \"\",\r\n      totalWeight:\"\",\r\n    });\r\n    this.getExam();\r\n    this.getDetail();\r\n\r\n  }\r\n\r\n  render() {\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state;\r\n    const {examDetail} = this.state;\r\n    const handleChangeMultiple = (event) => {\r\n      const {options} = event.target;\r\n      const value = [];\r\n      for (let i = 0, l = options.length; i < l; i += 1) {\r\n        if (options[i].selected) {\r\n          value.push(options[i].value);\r\n        }\r\n      }\r\n      axios.get(\"http://localhost:8080/exam/\"+ value)\r\n        .then(res => {\r\n          this.setState({\r\n            examDetail: res.data.list,\r\n            exam: value,\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    };\r\n    return (\r\n      <div>\r\n        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n          <CButton color=\"primary\" color=\"danger\" onClick={this.handleClickOpen}>시험항목 관리</CButton>\r\n        </CCol>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            시험항목 조회</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n                    <option value=\"\">강의</option>\r\n                    {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Button onClick={this.stateRefresh}>새로고침</Button>\r\n                </Grid>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <Select\r\n                    multiple\r\n                    native\r\n                    onChange={handleChangeMultiple} value={this.state.exam}\r\n\r\n                  >\r\n                    {examList && examList.map((itemdata, insertIndex) => {\r\n                      return (<option\r\n                        value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}&nbsp;({itemdata.weight}%)</option>);\r\n                    })}\r\n                  </Select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"6\">\r\n                    <CLabel>가중치 합계</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <p className=\"form-control-static\">{this.state.totalWeight}%</p>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </DialogContent>\r\n          {this.state.lecture !== \"\" &&\r\n          <DialogActions>\r\n            <ExamAdd stateRefresh={this.stateRefresh} lecture={this.state.lecture} teacher={this.state.teacher}/>\r\n            <ExamUpdate stateRefresh={this.stateRefresh} teacher={this.state.teacher} examDetail={examDetail}/>\r\n            <ExamDelete stateRefresh={this.stateRefresh} id={this.state.exam}/>\r\n          </DialogActions>\r\n          }\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Exam)\r\n\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js",["719","720","721"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport '../Template/css/table.css';\r\nimport {\r\n  CButton,\r\n  CCol,CRow\r\n} from '@coreui/react'\r\nimport Moment from \"moment\"\r\nvar session_no=window.sessionStorage.getItem('no');\r\nconst style={width: \"50%\", float: \"left\"}\r\nconst style2={width: \"50%\", float: \"right\",textAlign: \"right\" }\r\nclass AttInOut extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        today: \"\",\r\n        date: \"\",\r\n        time: \"\",\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.today_get();\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000,\r\n    )\r\n    this.timer = setInterval(\r\n      () => this.timeSub(),1000\r\n      )\r\n\r\n  }\r\n  today_get() {\r\n    axios.get(\"http://localhost:8080/api2/today?no=\"+session_no)\r\n    .then(res => {\r\n      console.log(res)\r\n      this.setState({\r\n        today: res.data.today[0]\r\n      })\r\n    }).catch(res => console.log(res))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      clearInterval(this.timerID)\r\n      clearInterval(this.timer)\r\n  }\r\n\r\n  tick() {\r\n      this.setState({\r\n          date: Moment(new Date()).format(\"HH:mm:ss\")\r\n      })\r\n  }\r\n\r\n  timeSub=() => {\r\n    if(this.state.today){\r\n        let in1=this.countSeconds(this.state.date);\r\n      let in2=this.countSeconds(this.state.today.start_time);\r\n      let result=in1-in2;\r\n\r\n      this.setState({\r\n        time: this.secondsCount(result)\r\n      })\r\n    }\r\n  }\r\n\r\n  in = () =>{\r\n      axios.post(`http://localhost:8080/api2/in`,{no: session_no})\r\n      .then(res => {\r\n        if(res.data){\r\n          alert(\"출근되었습니다.\");\r\n          window.location.reload(false);\r\n        }else{\r\n          alert(\"이미 출근되었습니다.\");\r\n        }\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  out = () =>{\r\n    axios.get(`http://localhost:8080/api2/out?no=${session_no}`)\r\n    .then(res => {\r\n      if(res.data){\r\n        alert(\"퇴근되었습니다.\");\r\n        window.location.reload(false);\r\n      }else{\r\n        alert(\"출근을 해주세요!.\");\r\n      }\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  secondsCount = (seconds) => {\r\n    var hour, min, sec\r\n    hour = parseInt(seconds/3600);\r\n    min = parseInt((seconds%3600)/60);\r\n    sec = seconds%60;\r\n\r\n    if (hour.toString().length==1) hour = \"0\" + hour;\r\n    if (min.toString().length==1) min = \"0\" + min;\r\n    if (sec.toString().length==1) sec = \"0\" + sec;\r\n    return hour + \":\" + min + \":\" + sec;\r\n  }\r\n\r\n  countSeconds = (str) => {\r\n    const [hh = '0', mm = '0', ss = '0'] = (str || '0:0:0').split(':');\r\n    const hour = parseInt(hh, 10) || 0;\r\n    const minute = parseInt(mm, 10) || 0;\r\n    const second = parseInt(ss, 10) || 0;\r\n    return (hour*3600) + (minute*60) + (second);\r\n  }\r\n  night = () =>{\r\n    let today = new Date();\r\n    let hours = today.getHours();\r\n    let minutes = today.getMinutes();\r\n    let seconds = today.getSeconds();\r\n    let night = \"18:00:00\";\r\n\r\n    if(this.countSeconds(hours+':'+minutes+':'+seconds)>this.countSeconds(night)){\r\n      axios.get(`http://localhost:8083/api2/night?no=${session_no}`)\r\n      .then(res => {\r\n        if(res.data){\r\n          alert(\"연장근무후 퇴근을 해주세요.\");\r\n          window.location.reload(false);\r\n        }else{\r\n          alert(\"출근을 해주세요!.\");\r\n        }\r\n      })\r\n      .catch(res => console.log(res))\r\n    }else{\r\n      alert(\"연장근무는 \"+night+\"이후에 가능합니다.\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { today } = this.state;\r\n    return (\r\n      <div>\r\n        <div style={style}>\r\n          <CRow className=\"align-items-center\">\r\n                <CCol col=\"3\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                  <CButton block variant=\"outline\" color=\"info\" onClick={this.in}>출근</CButton>\r\n                </CCol>\r\n\r\n                <CCol col=\"3\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                  <CButton block variant=\"outline\" color=\"info\" onClick={this.out}>퇴근</CButton>\r\n                </CCol>\r\n\r\n                <CCol col=\"3\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                  <CButton block variant=\"outline\" color=\"info\" onClick={this.night}>연장</CButton>\r\n                </CCol>\r\n          </CRow>\r\n        </div>\r\n        <div style={style2}>\r\n          <div>현재 시간 :{this.state.date}</div>\r\n          {today !== undefined ?\r\n            <div>\r\n              <div>출근 시간 :{this.state.today.start_time}</div>\r\n              <div>퇴근 시간 :{this.state.today.end_time}</div>\r\n              <div>\r\n                {this.state.today.end_time === null ?\r\n                  <div>{this.state.today.end_time}현재 근무한 시간 :{this.state.time}</div> :\r\n                  <div>(퇴근)근무한 시간 :{this.secondsCount(this.countSeconds(this.state.today.end_time)-\r\n                                          this.countSeconds(this.state.today.start_time))}</div>\r\n                }\r\n            </div></div>\r\n            :\"\"\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttInOut;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js",[],["722","723"],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\MainChartExample.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\events.js",["724"],"\r\nexport default [\r\n    {\r\n      id: 0,\r\n      title: \"All Day Event very long title\",\r\n      date: \"2021-02-05\"\r\n    }\r\n  ];\r\n  ","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js",["725","726","727","728"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {CChartLine} from '@coreui/react-chartjs';\r\n\r\nimport '../Template/css/table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from \"moment\"\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,CSelect,CInput\r\n} from '@coreui/react'\r\nconst _numbers=[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];\r\nconst _color=[\"#F5A9BC\",\"#58FAF4\",\"#F3F781\",\"#00FFBF\",\"#82FA58\"];\r\nconst _week=[0,1,2,3,4,5,6];\r\nconst _default=0,_weekly=1,_monthly=2,_Chart=3;\r\nconst _HRD=1;\r\nlet HRD_login=false;\r\nvar session_dep=window.sessionStorage.getItem('dep');\r\nif(Number(session_dep)===_HRD){\r\n  HRD_login=true;\r\n}\r\n\r\n\r\nvar cot=-1;\r\nclass AttTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        ItemList: \"\",\r\n        depList: \"\",\r\n        q: [1],\r\n        date: new Date(),\r\n        day: '',\r\n        today: Moment().format('YYYY-MM-DD'), //i\r\n        name: '',\r\n        dep: '',\r\n        start: '',\r\n        end: '',\r\n        cyear: '',\r\n        mode: this.props.mode,\r\n        loopCheck: true,\r\n        page: ''\r\n    }\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.dayChange = this.dayChange.bind(this);\r\n    this.depChange = this.depChange.bind(this);\r\n    this.nameChange2 = this.nameChange2.bind(this);\r\n    this.dayChange2 = this.dayChange2.bind(this);\r\n    this.depChange2 = this.depChange2.bind(this);\r\n    this.dateDay = this.dateDay.bind(this);\r\n    this.getWeekly = this.getWeekly.bind(this);\r\n    this.DayReset = this.DayReset.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  DayToSETime(value){\r\n    var getDay=this.dateDay(value)\r\n    var start=Moment(value).add(getDay*-1,'days').format(\"YYYY-MM-DD\")\r\n    var end=Moment(start).add(6,'days').format(\"YYYY-MM-DD\")\r\n    this.setState({\r\n      start: start,\r\n      end: end\r\n    })\r\n    return({start: start,end: end})\r\n  }\r\n  timemap(time){          //일간 처음 빈공간을 구해줌\r\n    var arr=[];\r\n    var temp = new Date(\"2020-11-11 \"+time)\r\n    var temp2=(Moment(temp).format(\"HH\"))*6\r\n    var mit=Moment(temp).format(\"mm\")/10+temp2\r\n    for (var index = 30; index < mit; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap2(in_time1,in_time2){ //일간 색깔 공간을 구해줌\r\n    var arr=[];\r\n    var time1 = new Date(\"2020-11-11 \"+in_time1)\r\n    var time2 = new Date(\"2020-11-11 \"+in_time2)\r\n    var sh=Moment(time1).format(\"HH\")\r\n    var eh=Moment(time2).format(\"HH\")\r\n    var sm=Moment(time1).format(\"mm\")\r\n    var em=Moment(time2).format(\"mm\")\r\n    var hh=(eh-sh)*6\r\n    var rm=(em-sm)/10\r\n    var sum=hh+rm\r\n    for (var index = 3; index < sum; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap3(time1,time2){      //1,2채우고 나머지공간을 구해줌\r\n    var arr=[];\r\n    var timesum=this.timemap(time1).length+this.timemap2(time1,time2).length;\r\n    for (var index = 0; index < 116-timesum; index++) {\r\n      arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  dateDay(day){     //입력받은 날짜의 요일을 구해줌\r\n    return new Date(day).getDay();\r\n  }\r\n  countSeconds = (str) => {     //HH:MM:SS=>cenond\r\n    const [hh = '0', mm = '0', ss = '0'] = (str || '0:0:0').split(':');\r\n    const hour = parseInt(hh, 10) || 0;\r\n    const minute = parseInt(mm, 10) || 0;\r\n    const second = parseInt(ss, 10) || 0;\r\n    return (hour*3600) + (minute*60) + (second);\r\n  }\r\n  reseconds = (seconds) => {    //cenond=>HH:MM:SS\r\n    var hour = parseInt(seconds/3600);\r\n    var min = parseInt((seconds%3600)/60);\r\n    var sec = seconds%60;\r\n\r\n    return this.septo(hour)+':'+this.septo(min)+':'+this.septo(sec)\r\n  }\r\n  septo = (tt) =>{            //한자릿수를 두자리수로\r\n    if(tt<10){\r\n      tt='0'+tt;\r\n    }\r\n    return tt;\r\n  }\r\n  subsec = (sec1,sec2) =>{        //시간을 빼는 함수\r\n    var result;\r\n    if(sec1===0 || sec2===0){\r\n      result=0;\r\n    }else{\r\n      result=sec1-sec2;\r\n    }\r\n    return result;\r\n  }\r\n  nameChange = (e) => {         //name변경\r\n    this.setState({\r\n      name: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/'+1+'/'+this.state.page.cntPerPage+'?day='+this.state.day+'&name='+e.target.value+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  dayChange = (e) => {        //day변경\r\n    const {page}=this.state;\r\n    this.setState({\r\n      day: e.target.value,\r\n      loopCheck: true\r\n    })\r\n    this.DayToSETime(e.target.value);\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/'+1+'/'+page.cntPerPage+'?day='+e.target.value+'&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  depChange = (e) => {        //dep변경\r\n    const {page}=this.state;\r\n    this.setState({\r\n      dep: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/1/'+page.cntPerPage+'?day='+this.state.day+'&name='+this.state.name+'&dep='+e.target.value),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  nameChange2 = (e) => {      //주간 name변경\r\n    this.setState({\r\n      name: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+this.state.start+'&end='+this.state.end+'&name='+e.target.value+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  dayChange2 = (e) => {       //주간 day변경\r\n    var Time=this.DayToSETime(e.target.value);\r\n    this.setState({\r\n      day: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+Time.start+'&end='+Time.end+'&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  depChange2 = (e) => {       //주간 dep변경\r\n    this.setState({\r\n      dep: e.target.value\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+this.state.start+'&end='+this.state.end+'&name='+this.state.name+'&dep='+e.target.value),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  CyearChange = (e) =>{\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attCyear?year='+e.target.value),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        cyear: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  getWeekly(day){\r\n    var getDay=this.dateDay(day)\r\n    var start=Moment(day).add(getDay*-1,'days').format(\"YYYY-MM-DD\")\r\n    var end=Moment(start).add(6,'days').format(\"YYYY-MM-DD\")\r\n    this.setState({\r\n      start: start,\r\n      end: end\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind3?start='+start+'&end='+end+'&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  DayReset(){\r\n    var day=document.getElementsByClassName(\"day\")\r\n    for(var i=0;i<day.length;i++){\r\n      day[i].value=\"\";\r\n    }\r\n    this.setState({\r\n      day: '',\r\n      loopCheck: true\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attfind/1/10?day=&name='+this.state.name+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n        ItemList: res.data.list,\r\n        page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  makeYears(yyyy){\r\n    var result=[];\r\n    for(var i=4;i>=0;i--) result.push(Number(yyyy)-i)\r\n    for(var l=1;l<5;l++) result.push(Number(yyyy)+l)\r\n    return result;\r\n  }\r\n  makedata(dep){\r\n    const { cyear } = this.state;\r\n    var re=[]\r\n    var cyears=[]\r\n    for(var i=0;i<cyear.length;i++){\r\n      if(Number(cyear[i].department)===Number(dep)){\r\n        cyears.push(cyear[i])\r\n      }\r\n    }\r\n\r\n    for(var a=1;a<=12;a++){\r\n      var bool=true;\r\n      for(var n=0;n<cyears.length;n++){\r\n        if(Number(cyears[n].name)===a) {\r\n          re.push(cyears[n].rank)\r\n          bool=false;\r\n        }\r\n      }\r\n      if(bool) re.push(0)\r\n    }\r\n     console.log(re);\r\n    return re;\r\n  }\r\n  cyearsMake(){ //연도별 데이터 만들기\r\n    const { depList } = this.state;\r\n    var result=[];\r\n    var Tlabel,Tbgc,Tdata=[];\r\n    var rgbController=0;\r\n    const rgb=[\"rgb(400,100,100,0.9)\",\"rgb(170,300,170,0.9)\",\"rgb(210,10,310,0.9)\",\r\n      \"rgb(250,250,250,0.9)\",\"rgb(290,290,290,0.9)\",\"rgb(333,333,331,0.9)\"]\r\n    for(var i=0;i<depList.length;i++){\r\n      Tlabel=depList[i].name;\r\n      Tbgc=rgb[rgbController];\r\n      Tdata=this.makedata(depList[i].no);\r\n      var temp={\r\n        label: Tlabel,\r\n        backgroundColor: Tbgc,\r\n        data: Tdata\r\n      };\r\n      result.push(temp);rgbController++;\r\n      if(rgbController>6) rgbController=0;\r\n    }\r\n\r\n    return result;\r\n  }\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/api2/att/1/10\")\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              ItemList: res.data.list,\r\n              page: res.data.page\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/api/depart\")\r\n    .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          depList: res.data.depart\r\n        })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n  selChange() { //몇줄로 볼지\r\n    var sel = document.getElementById('cntPerPage').value;\r\n    this.movePage(1,sel)\r\n  }\r\n  pageChange(selPage){ //페이지 이동 클릭\r\n    const {page}=this.state;\r\n    this.movePage(selPage,page.cntPerPage)\r\n  }\r\n  nextpage(){ //다음 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.endPage+1,page.cntPerPage)\r\n  }\r\n  prevpage(){ //이전 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.startPage-1,page.cntPerPage)\r\n  }\r\n  movePage(nowpage,perpage){ //페이지 이동\r\n    var add\r\n    if(this.state.dep.length + this.state.name.length + this.state.day.length > 0){\r\n      add=\"http://localhost:8080/api2/attfind/\"+nowpage+\"/\"+perpage+\"?day=\"\r\n      +this.state.day+\"&name=\"+this.state.name+\"&dep=\"+this.state.dep\r\n    }else{\r\n      add=\"http://localhost:8080/api2/att/\"+nowpage+\"/\"+perpage\r\n    }\r\n    axios.get(add)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              ItemList: res.data.list,\r\n              page: res.data.page\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n  }\r\n  makeMap(start,end){ //배열 만드는 함수\r\n    var result=[];\r\n    for(var i=start;i<=end;i++){\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  render() {\r\n    const { ItemList } = this.state;\r\n    const { depList } = this.state;\r\n    const { page } = this.state;\r\n    const { q } = this.state;\r\n    const { cyear } = this.state;\r\n    var years;\r\n    var temp=[];\r\n    var Tname='';\r\n    var tempString='';\r\n    var depname='';\r\n    var cyearDATA=[];\r\n    const style={width: \"70%\"}\r\n    if(this.props.mode===_Chart){\r\n      years=this.makeYears(new Date().getFullYear());\r\n      if(cyear.length>0){\r\n        cyearDATA=this.cyearsMake();\r\n      }\r\n    }\r\n    if(this.props.mode===_weekly){\r\n      if(this.state.day===''){\r\n        this.getWeekly(this.state.today)\r\n        this.setState({day: this.state.today})\r\n      }else if(this.state.loopCheck){\r\n        this.getWeekly(this.state.day)\r\n        this.setState({loopCheck: false})\r\n      }\r\n      if(ItemList.length>0){\r\n        var num=ItemList[0].employee_no;\r\n        for(var i=0;i<ItemList.length;i++){\r\n          for(var l=0;l<depList.length;l++){\r\n            if(ItemList[i].department*1===depList[l].no){\r\n              depname=depList[l].name\r\n            }\r\n          }\r\n          if(ItemList[i].employee_no===num){\r\n            tempString = tempString + '/'+ ItemList[i].day;\r\n            Tname=ItemList[i].name+\"(\"+depname+\")\"\r\n          }else{\r\n            temp.push({\r\n              days: tempString,\r\n              name: Tname\r\n            })\r\n            tempString='/'+ ItemList[i].day;\r\n            num=ItemList[i].employee_no\r\n            Tname=ItemList[i].name+\"(\"+depname+\")\"\r\n          }\r\n          if(i===ItemList.length-1){\r\n            temp.push({\r\n              days: tempString,\r\n              name: Tname\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.mode===_default &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"email\" id=\"email-input\" onChange={this.nameChange} value={this.state.name} name=\"email-input\" placeholder=\"name\" autoComplete=\"name\"/>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CSelect custom id=\"ccyear\" onChange={this.depChange} value={this.state.dep} name=\"dep-input\">\r\n                  <option value=\"\">부서선택</option>\r\n                    {depList&&depList.map((itemdata, insertIndex) => {\r\n                      return(<option value={itemdata.no} >{insertIndex+1}.{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"success\" onClick={() =>{this.DayReset()}}>날짜 초기화</CButton>\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n            <div style={{float: \"right\"}}>\r\n              <select id=\"cntPerPage\" name=\"sel\" onChange={() => {this.selChange()}}>\r\n                <option value=\"5\">5줄 보기</option>\r\n                <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n                <option value=\"15\">15줄 보기</option>\r\n                <option value=\"20\">20줄 보기</option>\r\n              </select>\r\n            </div>\r\n            <table name=\"ATT\" class=\"default\">\r\n            <thead>\r\n              <tr class=\"default\">\r\n                <td class=\"default\">NO</td><td class=\"default\">근무일자</td><td class=\"default\">부서</td>\r\n                <td class=\"default\">이름</td><td class=\"default\">직급</td><td class=\"default\">출근시간</td>\r\n                <td class=\"default\">퇴근시간</td><td class=\"default\">출근구분</td><td class=\"default\">퇴근구분</td>\r\n                <td class=\"default\">연장근무시간</td><td class=\"default\">총근무시간</td>\r\n                <td class=\"default\" id=\"del\">수정</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ItemList&&ItemList.map((att, insertIndex) => {\r\n              var bool = \"정상\"\r\n              var bool2 = \"정상\"\r\n              var time = \"09:00:00\"\r\n              var time2 = \"17:00:00\"\r\n              if(this.countSeconds(time)<this.countSeconds(att.start_time)){\r\n                bool = \"지각\"\r\n              }\r\n              if(att.end_time==null){\r\n                bool2 = \"\"\r\n              }else if(this.countSeconds(att.end_time)<this.countSeconds(time2)){\r\n                bool2 = \"조퇴\"\r\n              }else if(att.night){\r\n                bool2 = \"연장\"\r\n              }\r\n              return (\r\n              <tr class=\"default\">\r\n                  <td class=\"default\">{att.no}</td>\r\n                  <td class=\"default\">{att.day}</td>\r\n                  {depList&&depList.map((dep) => {\r\n                    if(dep.no===(Number(att.department))) return <td class=\"default\">{dep.name}</td>;\r\n                    else return null;\r\n                  })}\r\n\r\n                  <td class=\"default\">{att.name}</td>\r\n                  <td class=\"default\">{att.rank}</td>\r\n                  <td class=\"default\">{att.start_time}</td>\r\n                  <td class=\"default\">{att.end_time}</td>\r\n                  <td class=\"default\">{bool}</td>\r\n                  <td class=\"default\">{bool2}</td>\r\n                  <td class=\"default\">{att.night === 1 && this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(time2)))}</td>\r\n                  <td class=\"default\">{this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(att.start_time)))}</td>\r\n                  {HRD_login===true ? <td id={insertIndex} class=\"default\"><Link to={`/Attendance/${att.no}`}>수정</Link></td>:\"\"}\r\n                </tr>\r\n              );\r\n            })}\r\n            </tbody>\r\n          </table>\r\n            {ItemList.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n            <br/>\r\n            <nav aria-label=\"pagination\">\r\n              <ul class=\"pagination justify-content-center\">\r\n                {page.startPage !== 1 ?\r\n                  <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n                {this.makeMap(page.startPage,page.endPage).map((i) => {\r\n                  if(page.nowPage===i){\r\n                    return(<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                  }else{\r\n                    return(<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                  }\r\n                })}\r\n                {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        }\r\n        {this.props.mode===_weekly &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange2}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"email\" id=\"email-input\" onChange={this.nameChange2} value={this.state.name} name=\"email-input\" placeholder=\"name\" autoComplete=\"name\"/>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CSelect custom id=\"ccyear\" onChange={this.depChange2} value={this.state.dep}>\r\n                  <option value=\"\">부서선택</option>\r\n                    {depList&&depList.map((itemdata, insertIndex) => {\r\n                      return(<option value={itemdata.no} >{insertIndex+1}.{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n\r\n            <table class=\"b\" width=\"100%\" >\r\n            <caption>{this.state.start}~{this.state.end}</caption>\r\n              <thead>\r\n                <tr>\r\n                  <th width=\"10%\" class=\"a\"></th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(0,'days').format(\"MM-DD\")}     [일]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(1,'days').format(\"MM-DD\")}     [월]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(2,'days').format(\"MM-DD\")}     [화]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(3,'days').format(\"MM-DD\")}     [수]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(4,'days').format(\"MM-DD\")}     [목]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(5,'days').format(\"MM-DD\")}     [금]</th>\r\n                  <th class=\"default\">{Moment(this.state.start).add(6,'days').format(\"MM-DD\")}     [토]</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {temp&&temp.map((itemdata) => {\r\n                    cot=cot+1;\r\n                    if(cot>=4) cot=0;\r\n                    var day=itemdata.days.split(\"/\");\r\n\r\n                    return(\r\n                      <tr><td class=\"sm\">{itemdata.name}</td>\r\n                      {_week.map((z) => {\r\n                        var bool=0;\r\n                          for(var a=0;a<day.length;a++){\r\n                            if(z===this.dateDay(day[a])){\r\n                              bool=1;\r\n                            }\r\n                          }\r\n                          if(bool===1){\r\n                            return(<td bgcolor={_color[cot]} class=\"a\"></td>);\r\n                          }else return(<td class=\"a\"></td>);\r\n                      })}\r\n                      </tr>\r\n                    );\r\n              })}\r\n              </tbody>\r\n            </table>\r\n            {temp.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n          </div>\r\n        }\r\n        {this.props.mode===_monthly &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"email\" id=\"email-input\" onChange={this.nameChange} value={this.state.name} name=\"email-input\" placeholder=\"name\" autoComplete=\"name\"/>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CSelect custom id=\"ccyear\" onChange={this.depChange} value={this.state.dep}>\r\n                  <option value=\"\">부서선택</option>\r\n                    {depList&&depList.map((itemdata, insertIndex) => {\r\n                      return(<option value={itemdata.no} >{insertIndex+1}.{itemdata.name}</option>);\r\n                    })}\r\n                </CSelect>\r\n              </CCol>\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"success\" onClick={() =>{this.DayReset()}}>날짜 초기화</CButton>\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n              <table class=\"b\" width=\"100%\" >\r\n              <thead>\r\n\r\n                <tr>\r\n                  <th width=\"11%\" >{this.state.day}</th>\r\n                  {_numbers.map((member,) => {\r\n                    return(\r\n                      <th width=\"4%\" class=\"default\" colSpan=\"6\">{member}</th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {ItemList&&ItemList.map((itemdata, insertIndex) => {\r\n                    cot=cot+1;\r\n                    if(cot>=4) cot=0;\r\n                    var count=0;\r\n                    return(\r\n                      <tr key={insertIndex}>\r\n                        <td  class=\"b\">{itemdata.name}\r\n                          {depList&&depList.map((dep, insertIndex2) => {\r\n                            if(dep.no===(itemdata.department*=1)) return <font size=\"1\">({dep.name})[{itemdata.day}]</font>;\r\n                            else return null;\r\n                          })}\r\n                        </td>\r\n                        {this.timemap(itemdata.start_time).map((d,insertIndex2) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td name={insertIndex2}></td> );}\r\n                          else{count=0; return( <td name={insertIndex2} class=\"e\"></td> );}\r\n                        })}\r\n                        {q.map((f,insertIndex11) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td bgcolor={_color[cot]} id=\"c\"></td> );}\r\n                          else{count=0; return( <td name={insertIndex11} class=\"e\" ></td> );}\r\n                        })}\r\n                        {this.timemap2(itemdata.start_time,itemdata.end_time).map((c,insertIndex3) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td bgcolor={_color[cot]}name={insertIndex3}></td> );}\r\n                          else{count=0; return( <td bgcolor={_color[cot]}name={insertIndex3} class=\"e\"></td> );}\r\n                          })}\r\n                        {q.map((g,insertIndex11) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td bgcolor={_color[cot]} id=\"d\"></td> );}\r\n                          else{count=0; return( <td name={insertIndex11} class=\"e\" ></td> );}\r\n                        })}\r\n                        {this.timemap3(itemdata.start_time,itemdata.end_time).map((h,insertIndex4) =>{\r\n                          count=count+1;\r\n                          if(count<6){return( <td name={insertIndex4}></td> );}\r\n                          else{count=0; return( <td name={insertIndex4} class=\"e\"></td> );}\r\n                        })}\r\n                        <td class=\"end\"></td>\r\n                      </tr>\r\n                    );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            {ItemList.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n          </div>\r\n        }\r\n        {this.props.mode===_Chart &&\r\n          <div>\r\n              <CCard>\r\n                <CCardHeader>\r\n                  <div style={{width: \"30%\"}}>\r\n                  <CRow className=\"align-items-center\">\r\n                    <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                    부서별 차트\r\n                    </CCol>\r\n                    <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                      <CSelect custom id=\"ccyear\" name=\"Cyear\" onChange={this.CyearChange} width=\"6px\">\r\n                        <option>연도 입력</option>\r\n                        {years.map((year)=>{\r\n                          return(\r\n                            <option value={year}>{year}</option>\r\n                            );\r\n                          })}\r\n                      </CSelect>\r\n                    </CCol>\r\n                  </CRow>\r\n                  </div>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                <CChartLine\r\n                    datasets={cyearDATA}\r\n                    options={{tooltips: { enabled: true}}}\r\n                    labels=\"months\"\r\n                />\r\n                </CCardBody>\r\n              </CCard>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttTable;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\StandByAuth.js",["729","730","731"],"import React, {Component} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\n\r\n\r\nclass StandByAuth extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    ApiService.standByAuth().then(res => {\r\n      this.setState({});\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {employeeList, currentPage, size} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>현재 승인 대기 중 입니다.</h1>\r\n        현재 승인 대기 중 입니다.\r\n        자세한 문의는 인사팀 또는 관리자에게 문의해주세요.\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandByAuth\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\RegisterEmployee.js",["732"],"import React, {Component} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CRow,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nclass RegisterEmployee extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n          name : '',\r\n          hp : '',\r\n          address : '',\r\n          email : '',\r\n          birth : ''\r\n    }\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange = (value) => {\r\n    this.setState({\r\n      [value.target.name] : value.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = (x) =>{\r\n    x.preventDefault();\r\n\r\n    console.log('test ::' + this.state.hp)\r\n\r\n    let employee = {\r\n      name : this.state.name,\r\n      hp : this.state.hp,\r\n      email : this.state.email,\r\n      birth : this.state.birth,\r\n      address : this.state.address,\r\n    }\r\n\r\n    ApiService.InsertEmployee(employee).then(res =>{\r\n      alert('회원가입 신청이 완료되었습니다. 관리자의 승인을 기다려주세요');\r\n      this.props.history.push('/');\r\n    })\r\n      .catch( err => {\r\n      console.log('회원가입 신청에 실패했습니다 관리가제에 문의해주세요', err);\r\n      this.props.history.push('/');\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardHeader align={'center'}>\r\n            <h2>회원가입</h2>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"name\" value={this.state.name} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">휴대폰번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"hp\" value={this.state.hp} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"address\"value={this.state.address} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"email\"value={this.state.email} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">생일</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"birth\"value={this.state.birth} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </CForm>\r\n          </CCardBody>\r\n          <CCardFooter>\r\n            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> 제출</CButton>\r\n            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화</CButton>\r\n          </CCardFooter>\r\n        </CCard>\r\n      </CCol>\r\n      </CRow>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterEmployee\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index_view.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Stu_att.js",["733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751"],"import React, { Component } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nclass Stu_att extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            attdata: '',\r\n            no: '',\r\n            leclist: '',\r\n            lecture: '',\r\n            date:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Leclist()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    leclist: res.data.list\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    SearchAtt = (name) => {\r\n        ApiService.StuAtt(name)\r\n            .then(res => {\r\n                this.setState({\r\n                    attdata: res.data.attdata\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('SearchAtt() 에러', err)\r\n            })\r\n    }\r\n\r\n    // lectureSelect = (e) => {\r\n    //     this.setState({\r\n    //         findLecture: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    InsertAtt = (e) => {\r\n        e.preventDefault();\r\n        window.localStorage.setItem(\"InsDateAtt\", this.state.date);\r\n        window.localStorage.setItem(\"InsLecAtt\", this.state.lecture);\r\n        console.log(window.localStorage.getItem(\"InsLecAtt\"));\r\n        this.props.history.push('/ins_att');\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const { attdata } = this.state;\r\n        const { leclist } = this.state;\r\n        return (\r\n            <div>\r\n                <CRow>\r\n                    <CCol xs=\"15\" md=\"6\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                학생 출결 등록\r\n                <DocsLink name=\"-Input\" />\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CForm>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">강의선택</CLabel>\r\n                                        </CCol>\r\n                                        <CCol>\r\n                                            <CSelect custom id=\"lecture\" name=\"lecture\" value={this.state.lecture} onChange={this.onChange}>\r\n                                                <option value=\"\">강의</option>\r\n                                                {leclist && leclist.map((itemdata, insertIndex) => {\r\n                                                    return (<option value={itemdata.name}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                                                })}\r\n                                            </CSelect>\r\n                                            <CFormText>강의를 선택하세요</CFormText>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">날짜선택</CLabel>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" md=\"9\">\r\n                                            <CInput type=\"date\" id=\"date-input\" name=\"date\" placeholder=\"date\" value={this.state.date} onChange={this.onChange} />\r\n                                            <CFormText>날짜를 선택하세요</CFormText>\r\n                                        <CButton onClick={this.InsertAtt} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 출결조회 </CButton>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol xs=\"15\" md=\"6\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                학생 출결 조회\r\n                <DocsLink name=\"-Input\" />\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CForm>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" md=\"9\">\r\n                                            <CInput name=\"name\" placeholder=\"이름\" value={this.state.name} onChange={this.onChange} />\r\n                                            <CFormText>이름을 입력하세요</CFormText>\r\n                                            <CButton onClick={() => this.SearchAtt(this.state.name)} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 출결조회 </CButton>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <table>\r\n                                        <tr><td>날짜</td><td>강의명</td><td>출결여부</td></tr>\r\n                                        {attdata && attdata.map((itemdata, insertIndex) => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{itemdata.date}</td>\r\n                                                    <td>{itemdata.lecname}</td>\r\n                                                    {itemdata.att === 0 ? <td>출석</td> : (itemdata.att === 1 ? <td>결석</td> : <td>지각</td>)}\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                        <tr></tr>\r\n                                    </table>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stu_att;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Calendar.js",["752","753"],"import React from 'react'\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from '@fullcalendar/list';\r\nimport events from \"./events\"\r\nimport ApiService from \"../../ApiService\";\r\n\r\n\r\nclass DemoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      events:\"\",\r\n      Edate:\"\",\r\n      arr:[],\r\n      data:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    ApiService.Teacher(4)\r\n      .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              Edate : res.data.list\r\n            })\r\n            console.log(this.state.Edate.length);\r\n            for(var i=0;i<this.state.Edate.length;i++) {\r\n              this.state.arr[i] = {\r\n              id: i,\r\n              title: \"수강일\",\r\n              date: this.state.Edate[i]\r\n            } \r\n          }\r\n          this.setState({\r\n            data : this.state.arr\r\n          })\r\n          \r\n        console.log(this.state.arr[37]);\r\n        })\r\n        \r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const{data} = this.state;\r\n    return (\r\n      \r\n      <FullCalendar\r\n        defaultView=\"timeGridDay\"\r\n        headerToolbar= {{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        }}\r\n        plugins={[dayGridPlugin, timeGridPlugin,listPlugin]}\r\n        navLinks= {true} \r\n        nowIndicator= {true}\r\n        weekNumbers= {true}\r\n        weekNumberCalculation= 'ISO'\r\n        editable= {true}\r\n        selectable= {true}\r\n        dayMaxEvents= {true}\r\n        events={data}\r\n      />)\r\n  }\r\n}\r\nexport default DemoApp","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Ins_att.js",["754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781"],"import React, { Component } from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport Lecture from \"../lecture/Lecture\";\r\n\r\nclass Ins_att extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            attStu : '',\r\n            LectureName : '',\r\n            InsDate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        console.log(window.localStorage.getItem(\"InsLecAtt\"));\r\n        ApiService.InsAtt(window.localStorage.getItem(\"InsLecAtt\"))\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    attStu : res.data.list,\r\n                    LectureName : window.localStorage.getItem(\"InsLecAtt\"),\r\n                    InsDate : window.localStorage.getItem(\"InsDateAtt\")\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n    saveAtt = (e) => {\r\n        e.preventDefault();\r\n    \r\n        console.log(this.state.email)\r\n    \r\n        let student = {\r\n          name : this.state.name,\r\n          hp : this.state.hp,\r\n          email : this.state.email,\r\n          birth : this.state.birth,\r\n          address : this.state.address,\r\n          lecture : this.state.lecture,\r\n          gender : this.state.gender,\r\n          //regdate : this.state.regdate\r\n        }\r\n    \r\n        console.log(this.state.email)\r\n    \r\n        ApiService.addStudent(student)\r\n        .then( res => {\r\n          this.setState({\r\n            message : student.name + '님이 성공적으로 등록되었습니다'\r\n          })\r\n          console.log(this.state.message);\r\n          this.props.history.push('/students');\r\n        })\r\n        .catch( err => {\r\n          console.log('saveStudent() 에러', err);\r\n        });\r\n    \r\n      }\r\n\r\n    render() {\r\n        const { attStu,LectureName,InsDate } = this.state;\r\n        return(\r\n            <div>\r\n            \r\n            <tr><td>수업이름</td><td>{LectureName}</td><td>날짜</td><td>{InsDate}</td><td colSpan='3'></td></tr>\r\n            <table>  \r\n            <tr><td>no</td><td>name</td><td>출결</td><td></td><td></td><td></td><td></td></tr>\r\n                {attStu&&attStu.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>\r\n                    {/* <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selStu(itemdata.no)}>상세</CButton></td> */}\r\n                    <CCol md=\"9\">\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio1\" name=\"inline-radios\" value=\"0\" defaultChecked/>\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio1\">출석</CLabel>\r\n                    </CFormGroup>\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio2\" name=\"inline-radios\" value=\"1\" />\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio2\">결석</CLabel>\r\n                    </CFormGroup>\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio3\" name=\"inline-radios\" value=\"2\" />\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio3\">지각</CLabel>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  </td>\r\n                </tr>\r\n                    );\r\n                })}\r\n            <tr><td>\r\n            <CButton onClick={this.saveAtt} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                </td></tr>\r\n            </table>\r\n            </div>\r\n                             \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Ins_att;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\Counseling.js",["782"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CForm, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CounselingRecord from \"./CounselingRecord\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Counseling extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: session_no,\r\n      lecture: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n    });\r\n    this.getCounseling();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getCounseling() {\r\n    axios.get(\"http://localhost:8080/api/students/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/api/students/\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"0\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n          </CForm>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td>학생명</td>\r\n            <td>HP</td>\r\n            <td>Email</td>\r\n            <td>상담 기록</td>\r\n          </tr>\r\n\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                <td>{itemdata.hp}</td>\r\n                <td>{itemdata.email}</td>\r\n                <td width=\"10%\"><CounselingRecord\r\n                  stateRefresh={this.stateRefresh}\r\n                  id={itemdata.no}\r\n                  name={itemdata.name}\r\n                  lecture={this.state.lecture}\r\n                />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다.</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counseling;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryList.js",["783","784","785","786","787","788"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CPagination\r\n  } from '@coreui/react'\r\n\r\n\r\nclass SalaryList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            SalaryList: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Salary()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    SalaryList : res.data.list    \r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n            \r\n    }\r\n\r\n    selSal = (NO) => {\r\n        window.localStorage.setItem(\"SalNO\", NO);\r\n        this.props.history.push('/sal_edit');\r\n    }\r\n    \r\n    render() {\r\n        const { SalaryList } =  this.state;\r\n        \r\n        return (\r\n            <div>\r\n            <table>\r\n            <tr><td>no</td><td>branch</td><td>name</td><td>salary</td></tr>\r\n                {SalaryList&&SalaryList.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.branch}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>{itemdata.salary}</td>\r\n                    <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selSal(itemdata.no)}>급여수정</CButton></td>\r\n                    </tr>\r\n                    );\r\n                })}\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalaryList;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index_view.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_apply.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_user.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryEdit.js",["789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  //import { DocsLink } from 'src/reusable'\r\n\r\n  class Edit_stu extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            salary : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.SalaryEmp(window.localStorage.getItem(\"SalNO\"))\r\n            .then(res => {\r\n                let emp =  res.data.list;\r\n                this.setState({\r\n                    name : emp.name,\r\n                    salary : emp.salary\r\n                })\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    saveSalary = (e) => {\r\n        e.preventDefault();\r\n\r\n        let employee = {\r\n            name : this.state.name,\r\n            salary : this.state.salary   \r\n        }\r\n\r\n        ApiService.editStudent(employee)\r\n            .then( res => {\r\n            this.setState({\r\n                message : employee.name + '님의 정보가 수정되었습니다'\r\n            })\r\n            console.log(this.state.message);\r\n            this.props.history.push('/sal_list');\r\n            })\r\n            .catch( err => {\r\n            console.log('saveSalary() 에러', err);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n              <CCard>\r\n                <CCardHeader>\r\n                  직원 급여 수정\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm>\r\n                   <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                      <CLabel>{this.state.name}</CLabel>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"hp\" placeholder={this.state.salary} value={this.state.salary} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton onClick={this.saveSalary} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n                </CCardFooter>\r\n              </CCard>\r\n              </CCol>\r\n            </CRow>\r\n        );}\r\n}\r\n\r\nexport default Edit_stu","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\paymentData.js",["808","809"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport {  Link } from 'react-router-dom';\r\n\r\nlet fields = ['no','employee_no', 'title', 'day'];\r\n\r\n\r\nconst PaymentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        page: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, []); \r\n\r\n    const { data, page } = inputs;\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n        });\r\n    };\r\n\r\n    \r\n    const getData = () =>{\r\n      axios.get(\"http://localhost:8080/adpayment\")\r\n        .then(res => {\r\n          console.log(res);\r\n          let list = res.data.list;\r\n          let user = res.data.user;\r\n          for(let i=0;i<list.length;i++){\r\n            for(let l=0;l<user.length;l++){\r\n              if(list[i].employee_no===user[l].no){\r\n                list[i].employee_no=user[l].name;\r\n              }\r\n            }\r\n          }\r\n          setInputs({\r\n            data: list,\r\n            page: res.data.page\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n          <CDataTable\r\n              items={data}\r\n              fields={fields}\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'title':\r\n                  (item)=>(\r\n                    <td>\r\n                      <Link to={`/adpaymentget/${item.no}`}> {item.title}</Link>\r\n                    </td>\r\n                  ),\r\n                  \r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n} \r\nexport default PaymentData;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\getPayment.js",["810"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    CDataTable\r\n} from '@coreui/react'\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CFade,\r\n} from '@coreui/react';\r\n\r\nlet fields = [];\r\n\r\n\r\nconst PaymentData = ({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        table: \"\",\r\n        sign: \"\",\r\n        signList:[],\r\n        playerList:[]\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    \r\n\r\n    const { data, table,signList ,playerList} = inputs;\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:8080/payment/\" + match.params.no)\r\n            .then(res => {\r\n                console.log(res)\r\n                let temp = [];\r\n                if (Number(res.data.list.kinds) === 1) {\r\n                    for (let i = 0; i < res.data.table.length; i++) {\r\n                        for(let l = 0; l<res.data.user.length; l++){\r\n                            if(res.data.table[i].employee_no === res.data.user[l].no){\r\n                                res.data.table[i].employee_no=res.data.user[l].name\r\n                            }\r\n                        }\r\n                        temp.push({\r\n                            no: res.data.table[i].no,\r\n                            start_day: res.data.table[i].start_day,\r\n                            end_day: res.data.table[i].end_day,\r\n                            name: res.data.table[i].employee_no,\r\n                        })\r\n                    }\r\n                    fields = ['no', 'start_day','end_day', 'name', ];\r\n                }\r\n                let playList=res.data.list.player.split(\"/\");\r\n                let userList=res.data.user;\r\n  \r\n                let playerLista=[];\r\n                for(let i=0;i<playList.length;i++){\r\n                    for(let l=0;l<userList.length;l++){\r\n                        if(Number(playList[i])===Number(userList[l].no)){\r\n    \r\n                            playerLista.push(userList[l].name);\r\n                        }\r\n                    }\r\n                }\r\n                setInputs({\r\n                    data: res.data.list,\r\n                    table: temp,\r\n                    sign: res.data.selectSign,\r\n                    signList: res.data.signList,\r\n                    playerList:playerLista\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n\r\n \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <CCard>\r\n                <CCardHeader>\r\n                    <h2>{data.title}</h2>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CFade timeout={300}  tag=\"h5\" className=\"mt-3\">\r\n\r\n                        <div style={{width: \"50%\",textAlign: \"center\"}}>\r\n                            <CDataTable\r\n                                items={table}\r\n                                fields={fields}\r\n                                itemsPerPage={10}\r\n                                pagination\r\n                                />\r\n                        </div><br></br>\r\n                        <br></br>\r\n                        {data.contents}\r\n                    </CFade>\r\n                    \r\n                </CCardBody>\r\n                결제해야하는 사람\r\n                <div>\r\n                    {playerList&&playerList.map((i)=>{\r\n                        return(<font>{i}</font>)\r\n                    })}\r\n                </div>\r\n                결제한 사인\r\n                <br></br>\r\n                {signList&&signList.map((i)=>{\r\n                    return(<img src={process.env.PUBLIC_URL + '/sign/'+i} alt=\"copy url\"  width=\"40\"height=\"40\"/>);\r\n                })}\r\n            </CCard>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PaymentData;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\HR.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\getPayment\\getPayment.js",["811","812"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    CDataTable\r\n} from '@coreui/react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CFade,\r\n} from '@coreui/react';\r\n\r\nlet fields = [];\r\n\r\n\r\nconst PaymentData = ({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        table: \"\",\r\n        sign: \"\",\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    \r\n    const fileChangedHandler = (e) => {\r\n        const file = new FormData();\r\n        file.append( \"file\",e.target.files[0]);\r\n        file.append( \"no\",window.sessionStorage.getItem(\"no\"));\r\n        const config = {\r\n            headers: {\r\n            \"content-type\": \"multipart/form-data\"\r\n            }\r\n        };\r\n        axios.post(`http://localhost:8080/upload`, file, config);\r\n        getData();\r\n    };\r\n\r\n    const { data, table,sign } = inputs;\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:8080/payment/\" + match.params.no+\"/\"+window.sessionStorage.getItem(\"no\"))\r\n            .then(res => {\r\n                console.log(res)\r\n                let temp = [];\r\n                if (Number(res.data.list.kinds) === 1) {\r\n                    for (let i = 0; i < res.data.table.length; i++) {\r\n                        for(let l = 0; l<res.data.user.length; l++){\r\n                            if(res.data.table[i].employee_no === res.data.user[l].no){\r\n                                res.data.table[i].employee_no=res.data.user[l].name\r\n                            }\r\n                        }\r\n                        temp.push({\r\n                            no: res.data.table[i].no,\r\n                            start_day: res.data.table[i].start_day,\r\n                            end_day: res.data.table[i].end_day,\r\n                            name: res.data.table[i].employee_no,\r\n                        })\r\n                    }\r\n                    fields = ['no', 'start_day','end_day', 'name', ];\r\n                }\r\n                setInputs({\r\n                    data: res.data.list,\r\n                    table: temp,\r\n                    sign: res.data.selectSign\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n    const payment = () => {\r\n        var params = new URLSearchParams();\r\n        params.append('id', window.sessionStorage.getItem('no'));\r\n        params.append('no', data.no);\r\n        axios.post(`http://localhost:8080/payment/approved`,params)\r\n        .then(res => {\r\n            if(res.data){\r\n            alert(\"결제되었습니다\");\r\n            window.location.reload(false);\r\n            }else{\r\n            alert(\"이미 결제했습니다.\");\r\n            }\r\n        })\r\n        .catch(res => console.log(res))       \r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {sign === false?\r\n                <div className=\"App\">\r\n                    <input type=\"file\"  onChange={fileChangedHandler} />\r\n                </div>:\r\n                <div>\r\n                    <img src={process.env.PUBLIC_URL + '/sign/'+sign} alt=\"copy url\" />\r\n                </div>\r\n            }\r\n            <CCard>\r\n                <CCardHeader>\r\n                    <h2>{data.title}</h2>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CFade timeout={300}  tag=\"h5\" className=\"mt-3\">\r\n\r\n                        <div style={{width: \"50%\",textAlign: \"center\"}}>\r\n                            <CDataTable\r\n                                items={table}\r\n                                fields={fields}\r\n                                itemsPerPage={10}\r\n                                pagination\r\n                                />\r\n                        </div><br></br>\r\n                        <br></br>\r\n                        {data.contents}\r\n                    </CFade>\r\n                    \r\n                </CCardBody>\r\n                <CCardFooter style={{textAlign: \"right\"}}>\r\n                    <CButton color=\"primary\" onClick={payment}>결제</CButton>\r\n                </CCardFooter>\r\n            </CCard>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PaymentData;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance_view.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\events.js",["813"],"export default [\r\n    {\r\n      id: 0,\r\n      title: \"All Day Event very long title\",\r\n      date: \"2021-02-05\"\r\n    }\r\n  ];\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\user\\paymentData.js",["814","815"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport {  Link } from 'react-router-dom';\r\n\r\nlet fields = ['no','employee_no', 'title', 'day'];\r\nlet id=window.sessionStorage.no;\r\n\r\n\r\nconst PaymentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        page: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, []); \r\n\r\n    const { data, page } = inputs;\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n        });\r\n    };\r\n\r\n    \r\n    const getData = () =>{\r\n      axios.get(\"http://localhost:8080/payment/1/10/\"+id)\r\n        .then(res => {\r\n          console.log(res);\r\n          let list = res.data.list;\r\n          let user = res.data.user;\r\n          for(let i=0;i<list.length;i++){\r\n            for(let l=0;l<user.length;l++){\r\n              if(list[i].employee_no===user[l].no){\r\n                list[i].employee_no=user[l].name;\r\n              }\r\n            }\r\n          }\r\n          setInputs({\r\n            data: list,\r\n            page: res.data.page\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n          <CDataTable\r\n              items={data}\r\n              fields={fields}\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'title':\r\n                  (item)=>(\r\n                    <td>\r\n                      <Link to={`/payment/${item.no}`}> {item.title}</Link>\r\n                    </td>\r\n                  ),\r\n                  \r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n} \r\nexport default PaymentData;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacation.js",["816","817","818","819","820","821"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\n\r\n\r\n\r\nlet fields = ['no', 'employee_no', 'day', 'name', '수정'];\r\nlet payselect = 1;\r\n\r\n\r\nconst Info = () => {\r\n  const [inputs, setInputs] = useState({\r\n    data: \"\",\r\n    employeeNo: \"\",\r\n    day: \"\",\r\n    name: \"\",\r\n    page: \"\",\r\n    open: \"\",\r\n    open2: \"\",\r\n    open3: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const { name,  open, open2, day, page, data, employeeNo, selected , open3 } = inputs;\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(\"http://localhost:8080/getVacation/1/10\")\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            day: list[i].day,\r\n            name: list[i].name,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page2\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setInputs({\r\n      open: true,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setInputs({\r\n      open: false,\r\n      open2: false,\r\n      open3: false,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const insert = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: employeeNo,\r\n        day: day,\r\n        name: name\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const del = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendar/' + this.state.no,\r\n      method: \"DELETE\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        title: this.state.title,\r\n        start: this.state.start,\r\n        end: this.state.end,\r\n        color: this.state.color\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"삭제\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const update = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendars',\r\n      method: \"PUT\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        id: this.state.no,\r\n        title: this.state.title,\r\n        start: this.state.start,\r\n        end: this.state.end,\r\n        color: this.state.color,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    movePage(1, sel)\r\n  }\r\n  const pageChange = (selPage) => { //페이지 이동 클릭\r\n    movePage(selPage, page.cntPerPage)\r\n  }\r\n  const nextpage = () => { //다음 페이지\r\n    movePage(page.endPage + 1, page.cntPerPage)\r\n  }\r\n  const prevpage = () => { //이전 페이지\r\n    movePage(page.startPage - 1, page.cntPerPage)\r\n  }\r\n  const movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/getVacation/\" + nowpage + \"/\" + perpage;\r\n\r\n    axios.get(add)\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            day: list[i].day,\r\n            name: list[i].name,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  const payment = () => {\r\n    let count = document.getElementsByName(\"check\").length;\r\n    let temp = [];\r\n    for (var i = 0; i < count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        for (var l = 0; l < data.length; l++) {\r\n          if (Number(data[l].no) === Number(document.getElementsByName(\"check\")[i].value)) {\r\n            console.log(1)\r\n            temp.push(data[l])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(temp)\r\n    setInputs({\r\n      open2: true,\r\n      page: page,\r\n      data: data,\r\n      selected: temp\r\n    })\r\n  }\r\n\r\n  const select = () => {\r\n    payselect *= -1;\r\n    let list = data;\r\n    setInputs({\r\n      data: list,\r\n      page: page\r\n    })\r\n  }\r\n\r\n  const vacationUse = () => {\r\n    setInputs({\r\n      open3: true,\r\n      page: page,\r\n      data: data,\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            추가하기\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={select}>\r\n            선택\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={payment}>\r\n            결제\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={vacationUse}>\r\n            휴가 사용\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <select id=\"cntPerPage\" name=\"sel\" onChange={() => { selChange() }}>\r\n            <option value=\"5\">5줄 보기</option>\r\n            <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n            <option value=\"15\">15줄 보기</option>\r\n            <option value=\"20\">20줄 보기</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <CDataTable\r\n            items={data}\r\n            fields={fields}\r\n            itemsPerPage={page.cntPerPage}\r\n            pagination\r\n            scopedSlots={{\r\n              '수정':\r\n                (item) => (\r\n                  <td>\r\n                    <a href=\"naver.com\">\r\n                      {item.수정}\r\n                    </a>\r\n                  </td>\r\n                ),\r\n              'no':\r\n                (item) => (\r\n                  <td>\r\n                    {payselect === 1 ?\r\n                      <div>\r\n                        {item.no}\r\n                      </div>\r\n                      :\r\n                      <div>\r\n                        <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                      </div>\r\n                    }\r\n                  </td>\r\n                ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <nav aria-label=\"pagination\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            {page.startPage !== 1 ?\r\n              <li onClick={() => prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n            {makeMap(page.startPage, page.endPage).map((i) => {\r\n              if (page.nowPage === i) {\r\n                return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n              } else {\r\n                return (<li onClick={() => pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n              }\r\n            })}\r\n            {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n          </ul>\r\n        </nav>\r\n        <Dialog open={open2} onClose={handleClose}>\r\n          <DialogTitle>결제 하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <table>\r\n                  <th>no</th>\r\n                  <th>E_no</th>\r\n                  <th>day</th>\r\n                  <th>name</th>\r\n                  {selected && selected.map((i) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{i.no}</td>\r\n                        <td>{i.employee_no}</td>\r\n                        <td>{i.day}</td>\r\n                        <td>{i.name}</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </table>\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>휴가 추가하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"day\" placeholder=\"일수\" value={day}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={open3} onClose={handleClose}>\r\n          <DialogTitle>휴가 추가하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"day\" placeholder=\"일수\" value={day}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Info;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\user\\vacation.js",["822","823","824","825"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {CDataTable} from '@coreui/react'\r\nimport Moment from 'moment';\r\n\r\n\r\nlet fields = ['no', 'day', 'name'];\r\nlet payselect = 1;\r\n\r\n\r\nconst Info = () => {\r\n  const [inputs, setInputs] = useState({\r\n    data: \"\",\r\n    page: \"\",\r\n    open: \"\",\r\n    elesected: \"\",\r\n    days: \"\",\r\n    startDay:\"\",\r\n    endDay: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const {  open, page, data, days,selected,startDay,endDay } = inputs;\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n    if(name===\"startDay\"){\r\n      check_start(e)\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(\"http://localhost:8080/getVacation/1/10/\"+window.sessionStorage.getItem('no'))\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            day: list[i].day,\r\n            name: list[i].name\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page2\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setInputs({\r\n      open: false,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    movePage(1, sel)\r\n  }\r\n  const pageChange = (selPage) => { //페이지 이동 클릭\r\n    movePage(selPage, page.cntPerPage)\r\n  }\r\n  const nextpage = () => { //다음 페이지\r\n    movePage(page.endPage + 1, page.cntPerPage)\r\n  }\r\n  const prevpage = () => { //이전 페이지\r\n    movePage(page.startPage - 1, page.cntPerPage)\r\n  }\r\n  const movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/getVacation/\" + nowpage + \"/\" + perpage+\"/\"+window.sessionStorage.getItem('no');\r\n\r\n    axios.get(add)\r\n    .then(res => {\r\n      console.log(res);\r\n      let list = res.data.list;\r\n      let page2 = res.data.page;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let temp = {\r\n          no: list[i].no,\r\n          day: list[i].day,\r\n          name: list[i].name\r\n        }\r\n        list[i] = temp\r\n      }\r\n      console.log(list);\r\n      setInputs({\r\n        data: list,\r\n        page: page2\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  const select = () => {\r\n    payselect *= -1;\r\n    let list = data;\r\n    setInputs({\r\n      data: list,\r\n      page: page\r\n    })\r\n  }\r\n\r\n  const vacationUse = () => {\r\n    var check_count = document.getElementsByName(\"check\").length;\r\n    if(check_count<1){\r\n      alert(\"휴가를 선택해주세요\")\r\n      return\r\n    }\r\n    let selectDay = 0;\r\n    let selects=\"\";\r\n    for (var i=0; i<check_count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        selects+=document.getElementsByName(\"check\")[i].value+\"/\";\r\n        for(let l=0;l<data.length;l++){\r\n          if(Number(document.getElementsByName(\"check\")[i].value) === Number(data[l].no)){\r\n            selectDay+=data[l].day\r\n          }\r\n        } \r\n      }\r\n    }\r\n    setInputs({\r\n      open: true,\r\n      page: page,\r\n      data: data,\r\n      days: selectDay,\r\n      selected: selects\r\n    })\r\n  }\r\n\r\n  const check_start = (e) =>{\r\n    var start = Moment(e.target.value).format(\"YYYY-MM-DD\");\r\n    let now = Moment().format(\"YYYY-MM-DD\");\r\n    if(start<=now){\r\n      alert(\"오늘 이후로 지정해주세요.\")\r\n      setInputs({\r\n        open: true,\r\n        page: page,\r\n        data: data,\r\n        days: days,\r\n        selected: selected,\r\n        startDay: \"\",\r\n        endDay: endDay\r\n      })\r\n    }else{\r\n      let end=Moment(e.target.value).add(days-1, 'days').format(\"YYYY-MM-DD\")\r\n      setInputs({\r\n        open: true,\r\n        page: page,\r\n        data: data,\r\n        days: days,\r\n        selected: selected,\r\n        startDay: e.target.value,\r\n        endDay: end\r\n      })\r\n    }\r\n  }\r\n\r\n  const apply = () =>{\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation_apply',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: window.sessionStorage.getItem('no'),\r\n        start_day: startDay,\r\n        end_day: endDay,\r\n        use_vacation: String(selected)\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={select}>\r\n            선택\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={vacationUse}>\r\n            휴가 사용\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <select id=\"cntPerPage\" name=\"sel\" onChange={() => { selChange() }}>\r\n            <option value=\"5\">5줄 보기</option>\r\n            <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n            <option value=\"15\">15줄 보기</option>\r\n            <option value=\"20\">20줄 보기</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <CDataTable\r\n            items={data}\r\n            fields={fields}\r\n            itemsPerPage={page.cntPerPage}\r\n            pagination\r\n            scopedSlots={{\r\n              'no':\r\n                (item) => (\r\n                  <td>\r\n                    {payselect === 1 ?\r\n                      <div>\r\n                        {item.no}\r\n                      </div>\r\n                      :\r\n                      <div>\r\n                        <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                      </div>\r\n                    }\r\n                  </td>\r\n                ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <nav aria-label=\"pagination\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            {page.startPage !== 1 ?\r\n              <li onClick={() => prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n            {makeMap(page.startPage, page.endPage).map((i) => {\r\n              if (page.nowPage === i) {\r\n                return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n              } else {\r\n                return (<li onClick={() => pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n              }\r\n            })}\r\n            {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n          </ul>\r\n        </nav>\r\n        \r\n\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>휴가 신청</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">start</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"startDay\" placeholder=\"day\" value={startDay}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              \r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">end</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"2\" md=\"9\">\r\n                <CInput type=\"date\" name=\"endDay\" placeholder=\"day\" value={endDay}\r\n                  />\r\n                  \r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                {days}\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">사용 휴가</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                {selected}\r\n              </CCol>\r\n              \r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={apply}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Info;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacationApply.js",["826","827","828","829","830"],"import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel, CSelect } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport PaymentInsert from \"../../payment/insert/insert\"\r\n\r\n\r\nlet fields = ['no', 'employee_no', 'start_day', 'end_day', 'use_vacation' , 'day', '수정'];\r\nlet payselect = 1;\r\n\r\n\r\n\r\nexport default class Apply extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: \"\",\r\n      user: \"\",\r\n      day: \"\",\r\n      name: \"\",\r\n      page: \"\",\r\n      open: \"\",\r\n      open2: \"\",\r\n      open3: \"\",\r\n      title: \"\",\r\n      contents:\"\",\r\n      player:\"\",\r\n      paymentPlayer:1,\r\n      paymentPlayerArr: [1]\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n\r\n\r\n  getData = () => {\r\n    axios.get(\"http://localhost:8080/Vacation_apply/1/10\")\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            start_day: list[i].start_day,\r\n            end_day: list[i].end_day,\r\n            use_vacation: list[i].use_vacation,\r\n            day: list[i].day,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        this.setState({\r\n          data: list,\r\n          page: page2,\r\n          user: res.data.user\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n      open2: false,\r\n      open3: false\r\n    })\r\n  };\r\n\r\n  insert = () => { \r\n    let count = document.getElementsByName(\"player\").length;\r\n    let playerTemp = \"\";\r\n    let kindsTemp = \"\";\r\n\r\n    for (var i = 0; i < count; i++) \r\n      playerTemp+=document.getElementsByName(\"player\")[i].value+\"/\"\r\n    for (var l=0;l<this.state.selected.length;l++){\r\n      kindsTemp += this.state.selected[l].no+\"/\"\r\n    }\r\n\r\n    axios({\r\n      url: 'http://localhost:8080/payment',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: window.sessionStorage.getItem(\"no\"),\r\n        player: playerTemp,\r\n        title: this.state.title,\r\n        contents: this.state.contents,\r\n        kinds: 1,\r\n        kinds_no: kindsTemp\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  del = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendar/' + this.state.no,\r\n      method: \"DELETE\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"삭제\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  update = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendars',\r\n      method: \"PUT\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n \r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n   selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    this.movePage(1, sel)\r\n  }\r\n   pageChange = (selPage) => { //페이지 이동 클릭\r\n    this.movePage(selPage, this.page.cntPerPage)\r\n  }\r\n   nextpage = () => { //다음 페이지\r\n    this.movePage(this.page.endPage + 1, this.page.cntPerPage)\r\n  }\r\n   prevpage = () => { //이전 페이지\r\n    this.movePage(this.page.startPage - 1, this.page.cntPerPage)\r\n  }\r\n   movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/Vacation_apply/\" + nowpage + \"/\" + perpage;\r\n\r\n    axios.get(add)\r\n    .then(res => {\r\n      console.log(res);\r\n      let list = res.data.list;\r\n      let page2 = res.data.page;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let temp = {\r\n          no: list[i].no,\r\n          employee_no: list[i].employee_no,\r\n          start_day: list[i].start_day,\r\n          end_name: list[i].end_day,\r\n          use_vacation: list[i].use_vacation,\r\n          수정: 1\r\n        }\r\n        list[i] = temp\r\n      }\r\n      console.log(list);\r\n      this.setState({\r\n        data: list,\r\n        page: page2,\r\n        user: res.data.user\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  payment = () => {\r\n    let count = document.getElementsByName(\"check\").length;\r\n    let temp = [];\r\n    \r\n    \r\n    for (var i = 0; i < count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        for (var l = 0; l < this.state.data.length; l++) {\r\n          if (Number(this.state.data[l].no) === Number(document.getElementsByName(\"check\")[i].value)) {\r\n            temp.push(this.state.data[l])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      open2: true,\r\n      selected: temp\r\n    })   \r\n  }\r\n\r\n   select = () => {\r\n    payselect *= -1;\r\n    let list = this.state.data;\r\n    this.setState({\r\n      data: list,\r\n    })\r\n  }\r\n\r\n\r\n\r\n  paymentPlayerAdd = () =>{\r\n    let index = this.state.paymentPlayer+1;\r\n    let temp =[];\r\n    for(var i=0;i<index;i++){\r\n      temp.push(i)\r\n    }\r\n    this.setState({\r\n      paymentPlayerArr: temp,\r\n      paymentPlayer: index,\r\n    })\r\n  }\r\n\r\n  paymentPlayerSub = () =>{\r\n    let index = this.state.paymentPlayer-1;\r\n    let temp =[];\r\n    for(var i=0;i<index;i++){\r\n      temp.push(i)\r\n    }\r\n    this.setState({\r\n      paymentPlayerArr: temp,\r\n      paymentPlayer: index,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div align=\"right\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n              추가하기\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.select}>\r\n              선택\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.payment}>\r\n              결제\r\n            </Button>            \r\n          </div>\r\n  \r\n          <div style={{ float: \"right\" }}>\r\n            <select id=\"cntPerPage\" name=\"sel\" onChange={() => { this.selChange() }}>\r\n              <option value=\"5\">5줄 보기</option>\r\n              <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n              <option value=\"15\">15줄 보기</option>\r\n              <option value=\"20\">20줄 보기</option>\r\n            </select>\r\n          </div>\r\n  \r\n          <div>\r\n            <CDataTable\r\n              items={this.state.data}\r\n              fields={this.state.fields}\r\n              itemsPerPage={this.state.page.cntPerPage}\r\n              pagination\r\n              scopedSlots={{\r\n                '수정':\r\n                  (item) => (\r\n                    <td>\r\n                      <a href=\"naver.com\">\r\n                        {item.수정}\r\n                      </a>\r\n                    </td>\r\n                  ),\r\n                'no':\r\n                  (item) => (\r\n                    <td>\r\n                      {payselect === 1 ?\r\n                        <div>\r\n                          {item.no}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                          <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                  ),\r\n              }}\r\n            />\r\n          </div>\r\n  \r\n  \r\n          <nav aria-label=\"pagination\">\r\n            <ul class=\"pagination justify-content-center\">\r\n              {this.state.page.startPage !== 1 ?\r\n                <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n              {this.makeMap(this.state.page.startPage, this.state.page.endPage).map((i) => {\r\n                if (this.state.page.nowPage === i) {\r\n                  return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                } else {\r\n                  return (<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                }\r\n              })}\r\n              {this.state.page.endPage !== this.state.page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n            </ul>\r\n          </nav>\r\n          <Dialog open={this.state.open2} onClose={this.handleClose}>\r\n            <DialogTitle>결제 하기</DialogTitle>\r\n            <DialogContent>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">title</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"title\" placeholder=\"이름\" value={this.state.title}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">player</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                <div>\r\n                  <div>\r\n                    {this.state.paymentPlayerArr&&this.state.paymentPlayerArr.map((i)=>{\r\n                      return(\r\n                        <CSelect type=\"select\"name=\"player\" placeholder=\"결제할 사람\"  >\r\n                            <option value=\"\">선택</option>\r\n                            {this.state.user&&this.state.user.map((index,l)=>{\r\n                              return(\r\n                                <option value={index.no}>{index.no}. {index.name}</option>\r\n                              )\r\n                            })}\r\n                        </CSelect>\r\n                      )\r\n                    })}\r\n  \r\n                  </div>\r\n                  <button onClick={this.paymentPlayerAdd}>추가</button>\r\n                  <button onClick={this.paymentPlayerSub}>삭제</button>\r\n                </div>\r\n                  \r\n                  \r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">table</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <table border=\"1\">\r\n                    <th>no</th>\r\n                    <th>E_no</th>\r\n                    <th>start_day</th>\r\n                    <th>end_name</th>\r\n                    <th>use_vacation</th>\r\n                    <th>day</th>\r\n                    {this.state.selected && this.state.selected.map((i) => {\r\n                      return (\r\n                        <tr>\r\n                          <td>{i.no}</td>\r\n                          <td>{i.employee_no}</td>\r\n                          <td>{i.start_day}</td>\r\n                          <td>{i.end_day}</td>\r\n                          <td>{i.use_vacation}</td>\r\n                          <td>{i.day}</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">contents</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"contents\" placeholder=\"내용\" value={this.state.contents}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <PaymentInsert kind={1} selected={this.state.selected} title={this.state.title} contents={this.state.contents}/>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n  \r\n          <Dialog open={this.state.open} onClose={this.handleClose}>\r\n            <DialogTitle>휴가 추가하기</DialogTitle>\r\n            <DialogContent>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">User</CLabel>\r\n                </CCol>\r\n             \r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"day\" placeholder=\"일수\" value={this.state.day}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"name\" placeholder=\"내용\" value={this.state.name}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.insert}>추가</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n  \r\n          <Dialog open={this.state.open3} onClose={this.handleClose}>\r\n            <DialogTitle>휴가 추가하기</DialogTitle>\r\n            <DialogContent>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">User</CLabel>\r\n                </CCol>\r\n              \r\n  \r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"day\" placeholder=\"일수\" value={this.state.day}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"name\" placeholder=\"내용\" value={this.state.name}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.insert}>추가</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar_view.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingRecord.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Att_view.js",["831","832","833","834","835"],"import React, { Component,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from '@fullcalendar/list';\r\nimport '../Template/css/table.css';\r\nimport Moment from \"moment\"\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CLabel} from '@coreui/react'\r\n\r\nimport {\r\n  CButton,\r\n  CRow,CInput\r\n} from '@coreui/react'\r\nvar session_no=window.sessionStorage.getItem('no');\r\nconst _default=0,_Chart=3;\r\n\r\nclass AttTable extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        ItemList: \"\",\r\n        depList: \"\",\r\n        q: [1],\r\n        date: new Date(),\r\n        day: '',\r\n        today: Moment().format('YYYY-MM-DD'), //i\r\n        name: '',\r\n        dep: '',\r\n        start: '',\r\n        end: '',\r\n        cyear: '',\r\n        mode: this.props.mode,\r\n        loopCheck: true,\r\n        page: '',\r\n        events: [],\r\n        view: false,\r\n        fir: true,\r\n        page2:\"\"\r\n    }\r\n    this.dayChange = this.dayChange.bind(this);\r\n    this.dateDay = this.dateDay.bind(this); \r\n    this.DayReset = this.DayReset.bind(this); \r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  DayToSETime(value){\r\n    var getDay=this.dateDay(value)\r\n    var start=Moment(value).add(getDay*-1,'days').format(\"YYYY-MM-DD\")\r\n    var end=Moment(start).add(6,'days').format(\"YYYY-MM-DD\")\r\n    this.setState({\r\n      start: start,\r\n      end: end\r\n    })\r\n    return({start: start,end: end})\r\n  }\r\n  timemap(time){          //일간 처음 빈공간을 구해줌\r\n    var arr=[];\r\n    var temp = new Date(\"2020-11-11 \"+time)\r\n    var temp2=(Moment(temp).format(\"HH\"))*6\r\n    var mit=Moment(temp).format(\"mm\")/10+temp2\r\n    for (var index = 30; index < mit; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap2(in_time1,in_time2){ //일간 색깔 공간을 구해줌\r\n    var arr=[];\r\n    var time1 = new Date(\"2020-11-11 \"+in_time1)\r\n    var time2 = new Date(\"2020-11-11 \"+in_time2)\r\n    var sh=Moment(time1).format(\"HH\")\r\n    var eh=Moment(time2).format(\"HH\")\r\n    var sm=Moment(time1).format(\"mm\")\r\n    var em=Moment(time2).format(\"mm\")\r\n    var hh=(eh-sh)*6\r\n    var rm=(em-sm)/10\r\n    var sum=hh+rm\r\n    for (var index = 3; index < sum; index++) {\r\n        arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  timemap3(time1,time2){      //1,2채우고 나머지공간을 구해줌\r\n    var arr=[];\r\n    var timesum=this.timemap(time1).length+this.timemap2(time1,time2).length;\r\n    for (var index = 0; index < 116-timesum; index++) {\r\n      arr.push(index)\r\n    }\r\n    return arr;\r\n  }\r\n  dateDay(day){     //입력받은 날짜의 요일을 구해줌\r\n    return new Date(day).getDay();\r\n  }\r\n  countSeconds = (str) => {     //HH:MM:SS=>cenond\r\n    const [hh = '0', mm = '0', ss = '0'] = (str || '0:0:0').split(':');\r\n    const hour = parseInt(hh, 10) || 0;\r\n    const minute = parseInt(mm, 10) || 0;\r\n    const second = parseInt(ss, 10) || 0;\r\n    return (hour*3600) + (minute*60) + (second);\r\n  }\r\n  reseconds = (seconds) => {    //cenond=>HH:MM:SS\r\n    var hour = parseInt(seconds/3600);\r\n    var min = parseInt((seconds%3600)/60);\r\n    var sec = seconds%60;\r\n    \r\n    return this.septo(hour)+':'+this.septo(min)+':'+this.septo(sec)\r\n  }\r\n  septo = (tt) =>{            //한자릿수를 두자리수로\r\n    if(tt<10){\r\n      tt='0'+tt;\r\n    }\r\n    return tt;\r\n  }\r\n  subsec = (sec1,sec2) =>{        //시간을 빼는 함수\r\n    var result;\r\n    if(sec1===0 || sec2===0){\r\n      result=0;\r\n    }else{\r\n      result=sec1-sec2;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  dayChange = (e) => {        //day변경 \r\n    const {page}=this.state;\r\n    this.setState({\r\n      day: e.target.value,\r\n      loopCheck: true\r\n    })\r\n    this.DayToSETime(e.target.value);\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+page.cntPerPage+'?day='+e.target.value+'&name='+session_no+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({\r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n\r\n  DayReset(){\r\n    var day=document.getElementsByClassName(\"day\")\r\n    for(var i=0;i<day.length;i++){\r\n      day[i].value=\"\";\r\n    }\r\n    this.setState({\r\n      day: '',\r\n      loopCheck: true\r\n    })\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+10+'?day=&name='+session_no+'&dep='),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({ \r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n\r\n  getApi = () => {\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+10+'?day=&name='+session_no+'&dep='+this.state.dep),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({ \r\n          ItemList: res.data.list,\r\n          page: res.data.page\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n  selChange() { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    this.movePage(1,sel)\r\n  }\r\n  pageChange(selPage){ //페이지 이동 클릭\r\n    const {page}=this.state;\r\n    this.movePage(selPage,page.cntPerPage)\r\n  }\r\n  nextpage(){ //다음 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.endPage+1,page.cntPerPage)\r\n  }\r\n  prevpage(){ //이전 페이지\r\n    const {page}=this.state;\r\n    this.movePage(page.startPage-1,page.cntPerPage)\r\n  }\r\n  movePage(nowpage,perpage){ //페이지 이동\r\n    var add\r\n    if(this.state.day.length > 0){\r\n      add=\"http://localhost:8080/api2/attgetno/\"+nowpage+\"/\"+perpage+\"?day=\"+this.state.day\r\n    +\"&name=\"+session_no+\"&dep=\"+this.state.dep\r\n    }else{\r\n      add=\"http://localhost:8080/api2/attgetno/\"+nowpage+\"/\"+perpage+'?day=&name='+session_no+'&dep='+this.state.dep\r\n    }\r\n    axios.get(add)\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              ItemList: res.data.list,\r\n              page: res.data.page\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n  }\r\n  makeMap(start,end){ //배열 만드는 함수\r\n    var result=[];\r\n    for(var i=start;i<=end;i++){\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getCalendar=()=>{\r\n    axios({\r\n      method:'get',\r\n      url:encodeURI('http://localhost:8080/api2/attgetno/'+1+'/'+10000000+'?day=&name='+session_no+'&dep='),\r\n      responseType:'stream',\r\n      responseEncoding: 'UTF-8',\r\n    }).then(res => {\r\n        console.log(res); \r\n        this.setState({ \r\n          events: this.data__event(res.data.list)\r\n        })\r\n      }).catch(res => console.log(res))\r\n  }\r\n\r\n  data__event(data){\r\n    let events = [];\r\n\r\n    for(var i=0;i<data.length;i++){\r\n      if(data[i].end_time===null) data[i].end_time=\"ing\";\r\n      let temp={\r\n        id: data[i].no,\r\n        title: data[i].start_time+\"~\"+data[i].end_time,\r\n        date: data[i].day,\r\n        color: \"#FF5675\"\r\n      };\r\n      events.push(temp)\r\n    }\r\n    return events;\r\n  }\r\n\r\n  eventClick=(info)=>{\r\n    this.setState({\r\n      view: true,\r\n      title: info.event.title,\r\n      start: Moment(info.event.start).format('YYYY-MM-DD').split(\"-\"),\r\n      end: Moment(info.event.end).format(\"YYYY-MM-DD\")\r\n    });\r\n  }\r\n\r\n  handleClose=()=> {\r\n    this.setState({\r\n      view: false\r\n    })\r\n  }\r\n\r\n  chage=(event)=>{\r\n    this.setState({\r\n      page2: event\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { ItemList } = this.state;\r\n    const { page } = this.state;\r\n    const style={width: \"35%\"};\r\n    if(this.props.mode===_Chart){\r\n      if(this.state.fir){\r\n        this.getCalendar();\r\n        this.setState({\r\n          fir:false\r\n        })\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        {this.props.mode===_default &&\r\n          <div>\r\n            <div style={style}>\r\n            <CRow className=\"align-items-center\">\r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CInput type=\"date\" value={this.state.day} onChange={this.dayChange}  id=\"date-input\" name=\"date-input\" placeholder=\"date\" />\r\n              </CCol>\r\n                \r\n              <CCol col=\"6\" sm=\"3\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <CButton block variant=\"outline\" color=\"success\" onClick={() =>{this.DayReset()}}>날짜 초기화</CButton>\r\n              </CCol>\r\n            </CRow>\r\n            <br/>\r\n            </div>\r\n            <div style={{float: \"right\"}}>\r\n              <select id=\"cntPerPage\" name=\"sel\" onChange={() => {this.selChange()}}>\r\n                <option value=\"5\">5줄 보기</option>\r\n                <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n                <option value=\"15\">15줄 보기</option>\r\n                <option value=\"20\">20줄 보기</option>\r\n              </select>\r\n            </div>\r\n            <table name=\"ATT\" class=\"default\">\r\n            <thead>\r\n              <tr class=\"default\">\r\n                <td class=\"default\">NO</td><td class=\"default\">근무일자</td>\r\n                <td class=\"default\">이름</td><td class=\"default\">출근시간</td>\r\n                <td class=\"default\">퇴근시간</td><td class=\"default\">출근구분</td><td class=\"default\">퇴근구분</td>\r\n                <td class=\"default\">연장근무시간</td><td class=\"default\">총근무시간</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {ItemList&&ItemList.map((att) => {\r\n              var bool = \"정상\"\r\n              var bool2 = \"정상\"\r\n              var time = \"09:00:00\"\r\n              var time2 = \"17:00:00\"\r\n              if(this.countSeconds(time)<this.countSeconds(att.start_time)){\r\n                bool = \"지각\"\r\n              }\r\n              if(att.end_time==null){\r\n                bool2 = \"\"\r\n              }else if(this.countSeconds(att.end_time)<this.countSeconds(time2)){\r\n                bool2 = \"조퇴\"\r\n              }else if(att.night){\r\n                bool2 = \"연장\"\r\n              }\r\n              return (\r\n              <tr class=\"default\">\r\n                  <td class=\"default\">{att.no}</td>\r\n                  <td class=\"default\">{att.day}</td>\r\n                  <td class=\"default\">{att.name}</td>\r\n                  <td class=\"default\">{att.start_time}</td>\r\n                  <td class=\"default\">{att.end_time}</td>\r\n                  <td class=\"default\">{bool}</td>\r\n                  <td class=\"default\">{bool2}</td>\r\n                  <td class=\"default\">{att.night === 1 && this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(time2)))}</td>\r\n                  <td class=\"default\">{this.reseconds(this.subsec(this.countSeconds(att.end_time),this.countSeconds(att.start_time)))}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n            </tbody> \r\n          </table>\r\n            {ItemList.length===0&&\r\n                <div align=\"center\">\r\n                  <h2>내용이 없습니다</h2>\r\n                  <hr></hr>\r\n                </div>\r\n            }\r\n        \r\n            <br/>\r\n            <nav aria-label=\"pagination\">\r\n              <ul class=\"pagination justify-content-center\">\r\n                {page.startPage !== 1 ? \r\n                  <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n                {this.makeMap(page.startPage,page.endPage).map((i) => {\r\n                  if(page.nowPage===i){\r\n                    return(<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                  }else{\r\n                    return(<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                  }\r\n                })}\r\n                {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n              </ul>\r\n            </nav>\r\n          </div>         \r\n        }       \r\n        {this.props.mode===_Chart &&\r\n          <div>\r\n              <FullCalendar\r\n                defaultView=\"timeGridDay\"\r\n                headerToolbar= {{\r\n                  left: 'prev,next today',\r\n                  center: 'title',\r\n                  right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n                }}\r\n                plugins={[dayGridPlugin, timeGridPlugin,listPlugin]}\r\n                navLinks= {true} \r\n                nowIndicator= {true}\r\n                weekNumberCalculation= 'ISO'\r\n                editable= {true}\r\n                selectable= {true}\r\n                dayMaxEvents= {true}\r\n                events={this.state.events}\r\n                eventClick={this.eventClick}\r\n                />\r\n                <Dialog open={this.state.view} onClose={this.handleClose}>\r\n                    <DialogTitle>\r\n                      {this.state.start[0]}년\r\n                      {this.state.start[1]}월\r\n                      {this.state.start[2]}일\r\n                    </DialogTitle>\r\n                    <DialogContent>          \r\n                      <CFormGroup row>\r\n                        <CCol md=\"6\">\r\n                          <CLabel htmlFor=\"start_date\">시간</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"9\">\r\n                        <font>{this.state.title}</font>\r\n                        </CCol>\r\n                      </CFormGroup>\r\n                  </DialogContent>\r\n          \r\n                  <DialogActions>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n          </div>\r\n        }\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttTable;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\insert\\insert.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingDelete.js",["836"],"import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {CCol} from \"@coreui/react\";\r\n\r\nclass CounselingDelete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n\r\n    }\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleClickOpen() {\r\n      this.setState({\r\n        open: true\r\n      });\r\n  }\r\n\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    })\r\n\r\n  }\r\n\r\n\r\n  delete(id) {\r\n    const url = 'http://localhost:8080/counseling/' + id;\r\n    fetch(url, {\r\n      method: 'DELETE'\r\n    });\r\n    alert(\"삭제 되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon fontSize=\"small\" onClick={this.handleClickOpen}/>\r\n        </IconButton>\r\n        <Dialog onClose={this.handleClose} open={this.state.open}>\r\n          <DialogTitle onClose={this.handleClose}>\r\n            삭제 경고\r\n          </DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Typography gutterBottom>\r\n              선택한 정보가 삭제됩니다.\r\n            </Typography>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => {\r\n              this.delete(this.props.id)\r\n            }}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(CounselingDelete)\r\n\r\n",{"ruleId":"837","replacedBy":"838"},{"ruleId":"839","replacedBy":"840"},{"ruleId":"841","severity":1,"message":"842","line":4,"column":1,"nodeType":"843","endLine":306,"endColumn":2},{"ruleId":"844","severity":1,"message":"845","line":2,"column":8,"nodeType":"846","messageId":"847","endLine":2,"endColumn":24},{"ruleId":"844","severity":1,"message":"848","line":4,"column":27,"nodeType":"846","messageId":"847","endLine":4,"endColumn":33},{"ruleId":"844","severity":1,"message":"849","line":10,"column":35,"nodeType":"846","messageId":"847","endLine":10,"endColumn":49},{"ruleId":"844","severity":1,"message":"850","line":114,"column":9,"nodeType":"846","messageId":"847","endLine":114,"endColumn":14},{"ruleId":"851","severity":1,"message":"852","line":165,"column":47,"nodeType":"853","messageId":"854","endLine":165,"endColumn":48},{"ruleId":"844","severity":1,"message":"855","line":1,"column":27,"nodeType":"846","messageId":"847","endLine":1,"endColumn":35},{"ruleId":"844","severity":1,"message":"856","line":3,"column":16,"nodeType":"846","messageId":"847","endLine":3,"endColumn":25},{"ruleId":"844","severity":1,"message":"857","line":3,"column":27,"nodeType":"846","messageId":"847","endLine":3,"endColumn":38},{"ruleId":"844","severity":1,"message":"858","line":4,"column":9,"nodeType":"846","messageId":"847","endLine":4,"endColumn":17},{"ruleId":"844","severity":1,"message":"859","line":30,"column":12,"nodeType":"846","messageId":"847","endLine":30,"endColumn":24},{"ruleId":"844","severity":1,"message":"860","line":10,"column":5,"nodeType":"846","messageId":"847","endLine":10,"endColumn":16},{"ruleId":"844","severity":1,"message":"861","line":13,"column":5,"nodeType":"846","messageId":"847","endLine":13,"endColumn":14},{"ruleId":"844","severity":1,"message":"862","line":14,"column":5,"nodeType":"846","messageId":"847","endLine":14,"endColumn":18},{"ruleId":"844","severity":1,"message":"863","line":15,"column":5,"nodeType":"846","messageId":"847","endLine":15,"endColumn":18},{"ruleId":"844","severity":1,"message":"864","line":16,"column":5,"nodeType":"846","messageId":"847","endLine":16,"endColumn":20},{"ruleId":"844","severity":1,"message":"865","line":17,"column":5,"nodeType":"846","messageId":"847","endLine":17,"endColumn":10},{"ruleId":"844","severity":1,"message":"866","line":20,"column":5,"nodeType":"846","messageId":"847","endLine":20,"endColumn":14},{"ruleId":"844","severity":1,"message":"867","line":21,"column":5,"nodeType":"846","messageId":"847","endLine":21,"endColumn":19},{"ruleId":"844","severity":1,"message":"868","line":22,"column":5,"nodeType":"846","messageId":"847","endLine":22,"endColumn":21},{"ruleId":"844","severity":1,"message":"869","line":23,"column":5,"nodeType":"846","messageId":"847","endLine":23,"endColumn":14},{"ruleId":"844","severity":1,"message":"848","line":24,"column":5,"nodeType":"846","messageId":"847","endLine":24,"endColumn":11},{"ruleId":"844","severity":1,"message":"870","line":25,"column":5,"nodeType":"846","messageId":"847","endLine":25,"endColumn":15},{"ruleId":"844","severity":1,"message":"849","line":26,"column":5,"nodeType":"846","messageId":"847","endLine":26,"endColumn":19},{"ruleId":"844","severity":1,"message":"871","line":27,"column":5,"nodeType":"846","messageId":"847","endLine":27,"endColumn":16},{"ruleId":"844","severity":1,"message":"872","line":28,"column":5,"nodeType":"846","messageId":"847","endLine":28,"endColumn":16},{"ruleId":"844","severity":1,"message":"873","line":29,"column":5,"nodeType":"846","messageId":"847","endLine":29,"endColumn":22},{"ruleId":"844","severity":1,"message":"874","line":30,"column":5,"nodeType":"846","messageId":"847","endLine":30,"endColumn":23},{"ruleId":"844","severity":1,"message":"875","line":31,"column":5,"nodeType":"846","messageId":"847","endLine":31,"endColumn":14},{"ruleId":"844","severity":1,"message":"876","line":32,"column":5,"nodeType":"846","messageId":"847","endLine":32,"endColumn":20},{"ruleId":"844","severity":1,"message":"877","line":34,"column":5,"nodeType":"846","messageId":"847","endLine":34,"endColumn":12},{"ruleId":"844","severity":1,"message":"878","line":36,"column":5,"nodeType":"846","messageId":"847","endLine":36,"endColumn":12},{"ruleId":"844","severity":1,"message":"879","line":38,"column":10,"nodeType":"846","messageId":"847","endLine":38,"endColumn":15},{"ruleId":"844","severity":1,"message":"858","line":39,"column":12,"nodeType":"846","messageId":"847","endLine":39,"endColumn":20},{"ruleId":"844","severity":1,"message":"861","line":13,"column":5,"nodeType":"846","messageId":"847","endLine":13,"endColumn":14},{"ruleId":"844","severity":1,"message":"862","line":14,"column":5,"nodeType":"846","messageId":"847","endLine":14,"endColumn":18},{"ruleId":"844","severity":1,"message":"863","line":15,"column":5,"nodeType":"846","messageId":"847","endLine":15,"endColumn":18},{"ruleId":"844","severity":1,"message":"864","line":16,"column":5,"nodeType":"846","messageId":"847","endLine":16,"endColumn":20},{"ruleId":"844","severity":1,"message":"865","line":17,"column":5,"nodeType":"846","messageId":"847","endLine":17,"endColumn":10},{"ruleId":"844","severity":1,"message":"866","line":20,"column":5,"nodeType":"846","messageId":"847","endLine":20,"endColumn":14},{"ruleId":"844","severity":1,"message":"867","line":21,"column":5,"nodeType":"846","messageId":"847","endLine":21,"endColumn":19},{"ruleId":"844","severity":1,"message":"868","line":22,"column":5,"nodeType":"846","messageId":"847","endLine":22,"endColumn":21},{"ruleId":"844","severity":1,"message":"869","line":23,"column":5,"nodeType":"846","messageId":"847","endLine":23,"endColumn":14},{"ruleId":"844","severity":1,"message":"870","line":25,"column":5,"nodeType":"846","messageId":"847","endLine":25,"endColumn":15},{"ruleId":"844","severity":1,"message":"849","line":26,"column":5,"nodeType":"846","messageId":"847","endLine":26,"endColumn":19},{"ruleId":"844","severity":1,"message":"871","line":27,"column":5,"nodeType":"846","messageId":"847","endLine":27,"endColumn":16},{"ruleId":"844","severity":1,"message":"872","line":28,"column":5,"nodeType":"846","messageId":"847","endLine":28,"endColumn":16},{"ruleId":"844","severity":1,"message":"873","line":29,"column":5,"nodeType":"846","messageId":"847","endLine":29,"endColumn":22},{"ruleId":"844","severity":1,"message":"874","line":30,"column":5,"nodeType":"846","messageId":"847","endLine":30,"endColumn":23},{"ruleId":"844","severity":1,"message":"875","line":31,"column":5,"nodeType":"846","messageId":"847","endLine":31,"endColumn":14},{"ruleId":"844","severity":1,"message":"876","line":32,"column":5,"nodeType":"846","messageId":"847","endLine":32,"endColumn":20},{"ruleId":"844","severity":1,"message":"878","line":36,"column":5,"nodeType":"846","messageId":"847","endLine":36,"endColumn":12},{"ruleId":"880","severity":1,"message":"881","line":162,"column":32,"nodeType":"882","messageId":"883","endLine":162,"endColumn":34},{"ruleId":"844","severity":1,"message":"884","line":5,"column":5,"nodeType":"846","messageId":"847","endLine":5,"endColumn":12},{"ruleId":"844","severity":1,"message":"861","line":11,"column":5,"nodeType":"846","messageId":"847","endLine":11,"endColumn":14},{"ruleId":"844","severity":1,"message":"862","line":12,"column":5,"nodeType":"846","messageId":"847","endLine":12,"endColumn":18},{"ruleId":"844","severity":1,"message":"863","line":13,"column":5,"nodeType":"846","messageId":"847","endLine":13,"endColumn":18},{"ruleId":"844","severity":1,"message":"864","line":14,"column":5,"nodeType":"846","messageId":"847","endLine":14,"endColumn":20},{"ruleId":"844","severity":1,"message":"865","line":15,"column":5,"nodeType":"846","messageId":"847","endLine":15,"endColumn":10},{"ruleId":"844","severity":1,"message":"867","line":19,"column":5,"nodeType":"846","messageId":"847","endLine":19,"endColumn":19},{"ruleId":"844","severity":1,"message":"868","line":20,"column":5,"nodeType":"846","messageId":"847","endLine":20,"endColumn":21},{"ruleId":"844","severity":1,"message":"869","line":21,"column":5,"nodeType":"846","messageId":"847","endLine":21,"endColumn":14},{"ruleId":"844","severity":1,"message":"870","line":23,"column":5,"nodeType":"846","messageId":"847","endLine":23,"endColumn":15},{"ruleId":"844","severity":1,"message":"849","line":24,"column":5,"nodeType":"846","messageId":"847","endLine":24,"endColumn":19},{"ruleId":"844","severity":1,"message":"871","line":25,"column":5,"nodeType":"846","messageId":"847","endLine":25,"endColumn":16},{"ruleId":"844","severity":1,"message":"872","line":26,"column":5,"nodeType":"846","messageId":"847","endLine":26,"endColumn":16},{"ruleId":"844","severity":1,"message":"873","line":27,"column":5,"nodeType":"846","messageId":"847","endLine":27,"endColumn":22},{"ruleId":"844","severity":1,"message":"874","line":28,"column":5,"nodeType":"846","messageId":"847","endLine":28,"endColumn":23},{"ruleId":"844","severity":1,"message":"875","line":29,"column":5,"nodeType":"846","messageId":"847","endLine":29,"endColumn":14},{"ruleId":"844","severity":1,"message":"876","line":30,"column":5,"nodeType":"846","messageId":"847","endLine":30,"endColumn":20},{"ruleId":"844","severity":1,"message":"878","line":34,"column":5,"nodeType":"846","messageId":"847","endLine":34,"endColumn":12},{"ruleId":"844","severity":1,"message":"879","line":36,"column":10,"nodeType":"846","messageId":"847","endLine":36,"endColumn":15},{"ruleId":"844","severity":1,"message":"855","line":1,"column":26,"nodeType":"846","messageId":"847","endLine":1,"endColumn":34},{"ruleId":"844","severity":1,"message":"858","line":5,"column":10,"nodeType":"846","messageId":"847","endLine":5,"endColumn":18},{"ruleId":"844","severity":1,"message":"885","line":8,"column":5,"nodeType":"846","messageId":"847","endLine":8,"endColumn":10},{"ruleId":"844","severity":1,"message":"856","line":9,"column":5,"nodeType":"846","messageId":"847","endLine":9,"endColumn":14},{"ruleId":"844","severity":1,"message":"857","line":10,"column":5,"nodeType":"846","messageId":"847","endLine":10,"endColumn":16},{"ruleId":"844","severity":1,"message":"886","line":11,"column":5,"nodeType":"846","messageId":"847","endLine":11,"endColumn":16},{"ruleId":"844","severity":1,"message":"887","line":13,"column":8,"nodeType":"846","messageId":"847","endLine":13,"endColumn":18},{"ruleId":"888","severity":1,"message":"889","line":22,"column":37,"nodeType":"890","endLine":22,"endColumn":39},{"ruleId":"851","severity":1,"message":"852","line":8,"column":58,"nodeType":"853","messageId":"854","endLine":8,"endColumn":59},{"ruleId":"891","severity":1,"message":"892","line":206,"column":36,"nodeType":"893","endLine":206,"endColumn":50},{"ruleId":"894","severity":1,"message":"895","line":96,"column":31,"nodeType":"853","messageId":"896","endLine":96,"endColumn":33},{"ruleId":"894","severity":1,"message":"895","line":97,"column":30,"nodeType":"853","messageId":"896","endLine":97,"endColumn":32},{"ruleId":"894","severity":1,"message":"895","line":98,"column":30,"nodeType":"853","messageId":"896","endLine":98,"endColumn":32},{"ruleId":"837","replacedBy":"897"},{"ruleId":"839","replacedBy":"898"},{"ruleId":"841","severity":1,"message":"842","line":2,"column":1,"nodeType":"843","endLine":8,"endColumn":5},{"ruleId":"899","severity":1,"message":"900","line":559,"column":82,"nodeType":"901","endLine":559,"endColumn":166},{"ruleId":"899","severity":1,"message":"900","line":562,"column":57,"nodeType":"901","endLine":562,"endColumn":106},{"ruleId":"899","severity":1,"message":"900","line":564,"column":86,"nodeType":"901","endLine":564,"endColumn":133},{"ruleId":"899","severity":1,"message":"900","line":567,"column":105,"nodeType":"901","endLine":567,"endColumn":177},{"ruleId":"844","severity":1,"message":"859","line":21,"column":12,"nodeType":"846","messageId":"847","endLine":21,"endColumn":24},{"ruleId":"844","severity":1,"message":"902","line":21,"column":26,"nodeType":"846","messageId":"847","endLine":21,"endColumn":37},{"ruleId":"844","severity":1,"message":"903","line":21,"column":39,"nodeType":"846","messageId":"847","endLine":21,"endColumn":43},{"ruleId":"844","severity":1,"message":"866","line":13,"column":3,"nodeType":"846","messageId":"847","endLine":13,"endColumn":12},{"ruleId":"844","severity":1,"message":"904","line":3,"column":10,"nodeType":"846","messageId":"847","endLine":3,"endColumn":14},{"ruleId":"844","severity":1,"message":"860","line":10,"column":5,"nodeType":"846","messageId":"847","endLine":10,"endColumn":16},{"ruleId":"844","severity":1,"message":"861","line":13,"column":5,"nodeType":"846","messageId":"847","endLine":13,"endColumn":14},{"ruleId":"844","severity":1,"message":"862","line":14,"column":5,"nodeType":"846","messageId":"847","endLine":14,"endColumn":18},{"ruleId":"844","severity":1,"message":"863","line":15,"column":5,"nodeType":"846","messageId":"847","endLine":15,"endColumn":18},{"ruleId":"844","severity":1,"message":"864","line":16,"column":5,"nodeType":"846","messageId":"847","endLine":16,"endColumn":20},{"ruleId":"844","severity":1,"message":"865","line":17,"column":5,"nodeType":"846","messageId":"847","endLine":17,"endColumn":10},{"ruleId":"844","severity":1,"message":"867","line":21,"column":5,"nodeType":"846","messageId":"847","endLine":21,"endColumn":19},{"ruleId":"844","severity":1,"message":"868","line":22,"column":5,"nodeType":"846","messageId":"847","endLine":22,"endColumn":21},{"ruleId":"844","severity":1,"message":"869","line":23,"column":5,"nodeType":"846","messageId":"847","endLine":23,"endColumn":14},{"ruleId":"844","severity":1,"message":"870","line":25,"column":5,"nodeType":"846","messageId":"847","endLine":25,"endColumn":15},{"ruleId":"844","severity":1,"message":"849","line":26,"column":5,"nodeType":"846","messageId":"847","endLine":26,"endColumn":19},{"ruleId":"844","severity":1,"message":"871","line":27,"column":5,"nodeType":"846","messageId":"847","endLine":27,"endColumn":16},{"ruleId":"844","severity":1,"message":"872","line":28,"column":5,"nodeType":"846","messageId":"847","endLine":28,"endColumn":16},{"ruleId":"844","severity":1,"message":"873","line":29,"column":5,"nodeType":"846","messageId":"847","endLine":29,"endColumn":22},{"ruleId":"844","severity":1,"message":"874","line":30,"column":5,"nodeType":"846","messageId":"847","endLine":30,"endColumn":23},{"ruleId":"844","severity":1,"message":"875","line":31,"column":5,"nodeType":"846","messageId":"847","endLine":31,"endColumn":14},{"ruleId":"844","severity":1,"message":"876","line":32,"column":5,"nodeType":"846","messageId":"847","endLine":32,"endColumn":20},{"ruleId":"844","severity":1,"message":"878","line":36,"column":5,"nodeType":"846","messageId":"847","endLine":36,"endColumn":12},{"ruleId":"844","severity":1,"message":"905","line":6,"column":8,"nodeType":"846","messageId":"847","endLine":6,"endColumn":14},{"ruleId":"906","severity":1,"message":"907","line":34,"column":15,"nodeType":"908","endLine":34,"endColumn":29},{"ruleId":"844","severity":1,"message":"904","line":4,"column":10,"nodeType":"846","messageId":"847","endLine":4,"endColumn":14},{"ruleId":"844","severity":1,"message":"858","line":5,"column":10,"nodeType":"846","messageId":"847","endLine":5,"endColumn":18},{"ruleId":"844","severity":1,"message":"885","line":8,"column":5,"nodeType":"846","messageId":"847","endLine":8,"endColumn":10},{"ruleId":"844","severity":1,"message":"856","line":9,"column":5,"nodeType":"846","messageId":"847","endLine":9,"endColumn":14},{"ruleId":"844","severity":1,"message":"860","line":10,"column":5,"nodeType":"846","messageId":"847","endLine":10,"endColumn":16},{"ruleId":"844","severity":1,"message":"857","line":11,"column":5,"nodeType":"846","messageId":"847","endLine":11,"endColumn":16},{"ruleId":"844","severity":1,"message":"861","line":13,"column":5,"nodeType":"846","messageId":"847","endLine":13,"endColumn":14},{"ruleId":"844","severity":1,"message":"862","line":14,"column":5,"nodeType":"846","messageId":"847","endLine":14,"endColumn":18},{"ruleId":"844","severity":1,"message":"863","line":15,"column":5,"nodeType":"846","messageId":"847","endLine":15,"endColumn":18},{"ruleId":"844","severity":1,"message":"864","line":16,"column":5,"nodeType":"846","messageId":"847","endLine":16,"endColumn":20},{"ruleId":"844","severity":1,"message":"865","line":17,"column":5,"nodeType":"846","messageId":"847","endLine":17,"endColumn":10},{"ruleId":"844","severity":1,"message":"909","line":18,"column":5,"nodeType":"846","messageId":"847","endLine":18,"endColumn":10},{"ruleId":"844","severity":1,"message":"866","line":20,"column":5,"nodeType":"846","messageId":"847","endLine":20,"endColumn":14},{"ruleId":"844","severity":1,"message":"867","line":21,"column":5,"nodeType":"846","messageId":"847","endLine":21,"endColumn":19},{"ruleId":"844","severity":1,"message":"868","line":22,"column":5,"nodeType":"846","messageId":"847","endLine":22,"endColumn":21},{"ruleId":"844","severity":1,"message":"869","line":23,"column":5,"nodeType":"846","messageId":"847","endLine":23,"endColumn":14},{"ruleId":"844","severity":1,"message":"848","line":24,"column":5,"nodeType":"846","messageId":"847","endLine":24,"endColumn":11},{"ruleId":"844","severity":1,"message":"870","line":25,"column":5,"nodeType":"846","messageId":"847","endLine":25,"endColumn":15},{"ruleId":"844","severity":1,"message":"849","line":26,"column":5,"nodeType":"846","messageId":"847","endLine":26,"endColumn":19},{"ruleId":"844","severity":1,"message":"872","line":28,"column":5,"nodeType":"846","messageId":"847","endLine":28,"endColumn":16},{"ruleId":"844","severity":1,"message":"873","line":29,"column":5,"nodeType":"846","messageId":"847","endLine":29,"endColumn":22},{"ruleId":"844","severity":1,"message":"874","line":30,"column":5,"nodeType":"846","messageId":"847","endLine":30,"endColumn":23},{"ruleId":"844","severity":1,"message":"875","line":31,"column":5,"nodeType":"846","messageId":"847","endLine":31,"endColumn":14},{"ruleId":"844","severity":1,"message":"876","line":32,"column":5,"nodeType":"846","messageId":"847","endLine":32,"endColumn":20},{"ruleId":"844","severity":1,"message":"877","line":34,"column":5,"nodeType":"846","messageId":"847","endLine":34,"endColumn":12},{"ruleId":"844","severity":1,"message":"910","line":35,"column":5,"nodeType":"846","messageId":"847","endLine":35,"endColumn":9},{"ruleId":"844","severity":1,"message":"878","line":36,"column":5,"nodeType":"846","messageId":"847","endLine":36,"endColumn":12},{"ruleId":"844","severity":1,"message":"911","line":39,"column":8,"nodeType":"846","messageId":"847","endLine":39,"endColumn":15},{"ruleId":"844","severity":1,"message":"912","line":11,"column":7,"nodeType":"846","messageId":"847","endLine":11,"endColumn":16},{"ruleId":"844","severity":1,"message":"904","line":3,"column":10,"nodeType":"846","messageId":"847","endLine":3,"endColumn":14},{"ruleId":"844","severity":1,"message":"858","line":5,"column":10,"nodeType":"846","messageId":"847","endLine":5,"endColumn":18},{"ruleId":"844","severity":1,"message":"885","line":8,"column":5,"nodeType":"846","messageId":"847","endLine":8,"endColumn":10},{"ruleId":"844","severity":1,"message":"856","line":9,"column":5,"nodeType":"846","messageId":"847","endLine":9,"endColumn":14},{"ruleId":"844","severity":1,"message":"857","line":10,"column":5,"nodeType":"846","messageId":"847","endLine":10,"endColumn":16},{"ruleId":"844","severity":1,"message":"886","line":11,"column":5,"nodeType":"846","messageId":"847","endLine":11,"endColumn":16},{"ruleId":"844","severity":1,"message":"861","line":13,"column":5,"nodeType":"846","messageId":"847","endLine":13,"endColumn":14},{"ruleId":"844","severity":1,"message":"862","line":14,"column":5,"nodeType":"846","messageId":"847","endLine":14,"endColumn":18},{"ruleId":"844","severity":1,"message":"863","line":15,"column":5,"nodeType":"846","messageId":"847","endLine":15,"endColumn":18},{"ruleId":"844","severity":1,"message":"864","line":16,"column":5,"nodeType":"846","messageId":"847","endLine":16,"endColumn":20},{"ruleId":"844","severity":1,"message":"865","line":17,"column":5,"nodeType":"846","messageId":"847","endLine":17,"endColumn":10},{"ruleId":"844","severity":1,"message":"866","line":20,"column":5,"nodeType":"846","messageId":"847","endLine":20,"endColumn":14},{"ruleId":"844","severity":1,"message":"867","line":21,"column":5,"nodeType":"846","messageId":"847","endLine":21,"endColumn":19},{"ruleId":"844","severity":1,"message":"868","line":22,"column":5,"nodeType":"846","messageId":"847","endLine":22,"endColumn":21},{"ruleId":"844","severity":1,"message":"869","line":23,"column":5,"nodeType":"846","messageId":"847","endLine":23,"endColumn":14},{"ruleId":"844","severity":1,"message":"870","line":25,"column":5,"nodeType":"846","messageId":"847","endLine":25,"endColumn":15},{"ruleId":"844","severity":1,"message":"849","line":26,"column":5,"nodeType":"846","messageId":"847","endLine":26,"endColumn":19},{"ruleId":"844","severity":1,"message":"871","line":27,"column":5,"nodeType":"846","messageId":"847","endLine":27,"endColumn":16},{"ruleId":"844","severity":1,"message":"872","line":28,"column":5,"nodeType":"846","messageId":"847","endLine":28,"endColumn":16},{"ruleId":"844","severity":1,"message":"873","line":29,"column":5,"nodeType":"846","messageId":"847","endLine":29,"endColumn":22},{"ruleId":"844","severity":1,"message":"874","line":30,"column":5,"nodeType":"846","messageId":"847","endLine":30,"endColumn":23},{"ruleId":"844","severity":1,"message":"875","line":31,"column":5,"nodeType":"846","messageId":"847","endLine":31,"endColumn":14},{"ruleId":"844","severity":1,"message":"876","line":32,"column":5,"nodeType":"846","messageId":"847","endLine":32,"endColumn":20},{"ruleId":"844","severity":1,"message":"877","line":34,"column":5,"nodeType":"846","messageId":"847","endLine":34,"endColumn":12},{"ruleId":"844","severity":1,"message":"878","line":36,"column":5,"nodeType":"846","messageId":"847","endLine":36,"endColumn":12},{"ruleId":"844","severity":1,"message":"913","line":21,"column":19,"nodeType":"846","messageId":"847","endLine":21,"endColumn":23},{"ruleId":"844","severity":1,"message":"914","line":22,"column":11,"nodeType":"846","messageId":"847","endLine":22,"endColumn":19},{"ruleId":"915","severity":1,"message":"916","line":28,"column":8,"nodeType":"917","endLine":28,"endColumn":10,"suggestions":"918"},{"ruleId":"915","severity":1,"message":"916","line":28,"column":8,"nodeType":"917","endLine":28,"endColumn":10,"suggestions":"919"},{"ruleId":"844","severity":1,"message":"914","line":92,"column":11,"nodeType":"846","messageId":"847","endLine":92,"endColumn":19},{"ruleId":"841","severity":1,"message":"842","line":1,"column":1,"nodeType":"843","endLine":7,"endColumn":5},{"ruleId":"844","severity":1,"message":"913","line":22,"column":19,"nodeType":"846","messageId":"847","endLine":22,"endColumn":23},{"ruleId":"844","severity":1,"message":"914","line":23,"column":11,"nodeType":"846","messageId":"847","endLine":23,"endColumn":19},{"ruleId":"844","severity":1,"message":"920","line":113,"column":9,"nodeType":"846","messageId":"847","endLine":113,"endColumn":12},{"ruleId":"844","severity":1,"message":"921","line":135,"column":9,"nodeType":"846","messageId":"847","endLine":135,"endColumn":15},{"ruleId":"899","severity":1,"message":"900","line":312,"column":73,"nodeType":"901","endLine":312,"endColumn":157},{"ruleId":"899","severity":1,"message":"900","line":315,"column":54,"nodeType":"901","endLine":315,"endColumn":103},{"ruleId":"899","severity":1,"message":"900","line":317,"column":78,"nodeType":"901","endLine":317,"endColumn":125},{"ruleId":"899","severity":1,"message":"900","line":320,"column":96,"nodeType":"901","endLine":320,"endColumn":168},{"ruleId":"899","severity":1,"message":"900","line":264,"column":73,"nodeType":"901","endLine":264,"endColumn":157},{"ruleId":"899","severity":1,"message":"900","line":267,"column":54,"nodeType":"901","endLine":267,"endColumn":103},{"ruleId":"899","severity":1,"message":"900","line":269,"column":78,"nodeType":"901","endLine":269,"endColumn":125},{"ruleId":"899","severity":1,"message":"900","line":272,"column":96,"nodeType":"901","endLine":272,"endColumn":168},{"ruleId":"844","severity":1,"message":"922","line":17,"column":5,"nodeType":"846","messageId":"847","endLine":17,"endColumn":11},{"ruleId":"899","severity":1,"message":"900","line":337,"column":80,"nodeType":"901","endLine":337,"endColumn":164},{"ruleId":"899","severity":1,"message":"900","line":340,"column":56,"nodeType":"901","endLine":340,"endColumn":105},{"ruleId":"899","severity":1,"message":"900","line":342,"column":85,"nodeType":"901","endLine":342,"endColumn":132},{"ruleId":"899","severity":1,"message":"900","line":345,"column":125,"nodeType":"901","endLine":345,"endColumn":197},{"ruleId":"844","severity":1,"message":"855","line":1,"column":27,"nodeType":"846","messageId":"847","endLine":1,"endColumn":35},{"ruleId":"899","severity":1,"message":"900","line":372,"column":82,"nodeType":"901","endLine":372,"endColumn":166},{"ruleId":"899","severity":1,"message":"900","line":375,"column":57,"nodeType":"901","endLine":375,"endColumn":106},{"ruleId":"899","severity":1,"message":"900","line":377,"column":86,"nodeType":"901","endLine":377,"endColumn":133},{"ruleId":"899","severity":1,"message":"900","line":380,"column":105,"nodeType":"901","endLine":380,"endColumn":177},{"ruleId":"844","severity":1,"message":"923","line":11,"column":9,"nodeType":"846","messageId":"847","endLine":11,"endColumn":13},"no-native-reassign",["924"],"no-negated-in-lhs",["925"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'RegisterEmployee' is defined but never used.","Identifier","unusedVar","'CInput' is defined but never used.","'CInputCheckbox' is defined but never used.","'route' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useState' is defined but never used.","'CCardBody' is defined but never used.","'CCardHeader' is defined but never used.","'DocsLink' is defined but never used.","'employeeList' is assigned a value but never used.","'CCardFooter' is defined but never used.","'CCollapse' is defined but never used.","'CDropdownItem' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownToggle' is defined but never used.","'CFade' is defined but never used.","'CFormText' is defined but never used.","'CValidFeedback' is defined but never used.","'CInvalidFeedback' is defined but never used.","'CTextarea' is defined but never used.","'CInputFile' is defined but never used.","'CInputRadio' is defined but never used.","'CInputGroup' is defined but never used.","'CInputGroupAppend' is defined but never used.","'CInputGroupPrepend' is defined but never used.","'CDropdown' is defined but never used.","'CInputGroupText' is defined but never used.","'CSelect' is defined but never used.","'CSwitch' is defined but never used.","'CIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CButton' is defined but never used.","'CCard' is defined but never used.","'CPagination' is defined but never used.","'Pagination' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","unexpected",["924"],["925"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'currentPage' is assigned a value but never used.","'size' is assigned a value but never used.","'Link' is defined but never used.","'events' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'CForm' is defined but never used.","'CRow' is defined but never used.","'Lecture' is defined but never used.","'useStyles' is assigned a value but never used.","'page' is assigned a value but never used.","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["926"],["927"],"'del' is assigned a value but never used.","'update' is assigned a value but never used.","'fields' is assigned a value but never used.","'CCol' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"928","fix":"929"},{"desc":"928","fix":"930"},"Update the dependencies array to be: [getData]",{"range":"931","text":"932"},{"range":"933","text":"932"},[504,506],"[getData]",[491,493]]
[{"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\index.js":"1","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js":"2","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\App.js":"3","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\store.js":"4","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js":"5","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js":"6","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js":"7","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js":"8","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js":"9","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js":"10","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js":"11","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js":"12","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\login\\Login.js":"13","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js":"14","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js":"15","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js":"16","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js":"17","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js":"18","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js":"19","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js":"20","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js":"21","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js":"22","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js":"23","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js":"24","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js":"25","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\RegisterEmployee.js":"26","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js":"27","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\StandByAuth.js":"28","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js":"29","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\dashboard\\Dashboard.js":"30","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js":"31","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js":"32","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js":"33","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js":"34","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Ins_att.js":"35","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js":"36","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js":"37","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js":"38","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js":"39","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\HR.js":"40","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Stu_att.js":"41","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js":"42","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js":"43","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryList.js":"44","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js":"45","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryEdit.js":"46","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js":"47","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Calendar.js":"48","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js":"49","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js":"50","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js":"51","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js":"52","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js":"53","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js":"54","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js":"55","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\Counseling.js":"56","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js":"57","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index.js":"58","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index_view.js":"59","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js":"60","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index_view.js":"61","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js":"62","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js":"63","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_user.js":"64","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_apply.js":"65","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index.js":"66","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\index.js":"67","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js":"68","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\paymentData.js":"69","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\getPayment.js":"70","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js":"71","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\calendar.js":"72","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js":"73","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\getPayment\\getPayment.js":"74","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js":"75","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js":"76","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js":"77","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js":"78","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js":"79","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js":"80","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js":"81","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js":"82","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js":"83","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js":"84","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js":"85","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js":"86","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js":"87","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js":"88","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js":"89","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js":"90","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js":"91","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js":"92","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js":"93","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js":"94","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js":"95","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js":"96","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js":"97","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js":"98","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js":"99","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js":"100","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js":"101","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js":"102","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js":"103","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js":"104","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js":"105","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js":"106","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js":"107","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js":"108","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance_view.js":"109","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\user\\vacation.js":"110","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\user\\paymentData.js":"111","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacation.js":"112","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacationApply.js":"113","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js":"114","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\events.js":"115","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar_view.js":"116","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingRecord.js":"117","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar.js":"118","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js":"119","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js":"120","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js":"121","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\insert\\insert.js":"122","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js":"123","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingDelete.js":"124","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js":"125","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js":"126","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\MainChartExample.js":"127","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingUpdate.js":"128","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingAdd.js":"129","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Att_view.js":"130","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js":"131","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js":"132","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js":"133","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\events.js":"134","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js":"135","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js":"136","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js":"137","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js":"138","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js":"139","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js":"140","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js":"141","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js":"142","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js":"143","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js":"144","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js":"145","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js":"146","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js":"147","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js":"148","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js":"149","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureSearch.js":"150"},{"size":718,"mtime":1608120716000,"results":"151","hashOfConfig":"152"},{"size":1429,"mtime":1608120716000,"results":"153","hashOfConfig":"152"},{"size":1460,"mtime":1612879463570,"results":"154","hashOfConfig":"152"},{"size":324,"mtime":1608120716000,"results":"155","hashOfConfig":"152"},{"size":4686,"mtime":1608120716000,"results":"156","hashOfConfig":"152"},{"size":3813,"mtime":1608120716000,"results":"157","hashOfConfig":"152"},{"size":1357,"mtime":1612879463810,"results":"158","hashOfConfig":"152"},{"size":6933,"mtime":1608120716000,"results":"159","hashOfConfig":"152"},{"size":6920,"mtime":1608120716000,"results":"160","hashOfConfig":"152"},{"size":978,"mtime":1608120716000,"results":"161","hashOfConfig":"152"},{"size":2944,"mtime":1612879463811,"results":"162","hashOfConfig":"152"},{"size":1338,"mtime":1612879463809,"results":"163","hashOfConfig":"152"},{"size":2840,"mtime":1612879463808,"results":"164","hashOfConfig":"152"},{"size":413,"mtime":1608120716000,"results":"165","hashOfConfig":"152"},{"size":596,"mtime":1608120716000,"results":"166","hashOfConfig":"152"},{"size":569,"mtime":1608120716000,"results":"167","hashOfConfig":"152"},{"size":1095,"mtime":1608120716000,"results":"168","hashOfConfig":"152"},{"size":4187,"mtime":1612879463582,"results":"169","hashOfConfig":"152"},{"size":3124,"mtime":1610456043356,"results":"170","hashOfConfig":"152"},{"size":2311,"mtime":1608191548351,"results":"171","hashOfConfig":"152"},{"size":2175,"mtime":1609774168788,"results":"172","hashOfConfig":"152"},{"size":2612,"mtime":1608191548154,"results":"173","hashOfConfig":"152"},{"size":2813,"mtime":1612879463593,"results":"174","hashOfConfig":"152"},{"size":14390,"mtime":1612889427512,"results":"175","hashOfConfig":"152"},{"size":7017,"mtime":1612879463602,"results":"176","hashOfConfig":"152"},{"size":3829,"mtime":1612879463892,"results":"177","hashOfConfig":"152"},{"size":1956,"mtime":1612879463878,"results":"178","hashOfConfig":"152"},{"size":665,"mtime":1612879463893,"results":"179","hashOfConfig":"152"},{"size":5994,"mtime":1612879463773,"results":"180","hashOfConfig":"152"},{"size":24413,"mtime":1612879463789,"results":"181","hashOfConfig":"152"},{"size":12671,"mtime":1612879463816,"results":"182","hashOfConfig":"152"},{"size":5891,"mtime":1612879463695,"results":"183","hashOfConfig":"152"},{"size":6331,"mtime":1612879463687,"results":"184","hashOfConfig":"152"},{"size":7704,"mtime":1612879463696,"results":"185","hashOfConfig":"152"},{"size":4719,"mtime":1612879463682,"results":"186","hashOfConfig":"152"},{"size":6623,"mtime":1612879463920,"results":"187","hashOfConfig":"152"},{"size":4815,"mtime":1612889364662,"results":"188","hashOfConfig":"152"},{"size":4732,"mtime":1612879463901,"results":"189","hashOfConfig":"152"},{"size":2011,"mtime":1612879463910,"results":"190","hashOfConfig":"152"},{"size":417,"mtime":1612879463651,"results":"191","hashOfConfig":"152"},{"size":7206,"mtime":1612879463683,"results":"192","hashOfConfig":"152"},{"size":1024,"mtime":1612879463983,"results":"193","hashOfConfig":"152"},{"size":13360,"mtime":1612879463909,"results":"194","hashOfConfig":"152"},{"size":1794,"mtime":1612879463667,"results":"195","hashOfConfig":"152"},{"size":3159,"mtime":1612879463982,"results":"196","hashOfConfig":"152"},{"size":3663,"mtime":1612879463660,"results":"197","hashOfConfig":"152"},{"size":2776,"mtime":1608201287904,"results":"198","hashOfConfig":"152"},{"size":1824,"mtime":1612879463708,"results":"199","hashOfConfig":"152"},{"size":8393,"mtime":1612879463969,"results":"200","hashOfConfig":"152"},{"size":5138,"mtime":1612879463836,"results":"201","hashOfConfig":"152"},{"size":6297,"mtime":1612879463839,"results":"202","hashOfConfig":"152"},{"size":6657,"mtime":1612879463847,"results":"203","hashOfConfig":"152"},{"size":13871,"mtime":1612879463912,"results":"204","hashOfConfig":"152"},{"size":2786,"mtime":1612879463828,"results":"205","hashOfConfig":"152"},{"size":2489,"mtime":1612879463934,"results":"206","hashOfConfig":"152"},{"size":4372,"mtime":1612879463861,"results":"207","hashOfConfig":"152"},{"size":2771,"mtime":1612879463927,"results":"208","hashOfConfig":"152"},{"size":256,"mtime":1609997801382,"results":"209","hashOfConfig":"152"},{"size":261,"mtime":1610029715686,"results":"210","hashOfConfig":"152"},{"size":4992,"mtime":1612879463942,"results":"211","hashOfConfig":"152"},{"size":249,"mtime":1610370578214,"results":"212","hashOfConfig":"152"},{"size":967,"mtime":1612879463957,"results":"213","hashOfConfig":"152"},{"size":244,"mtime":1609852886855,"results":"214","hashOfConfig":"152"},{"size":262,"mtime":1612684499976,"results":"215","hashOfConfig":"152"},{"size":283,"mtime":1612712255104,"results":"216","hashOfConfig":"152"},{"size":263,"mtime":1612099927744,"results":"217","hashOfConfig":"152"},{"size":272,"mtime":1612868249486,"results":"218","hashOfConfig":"152"},{"size":2230,"mtime":1612879463949,"results":"219","hashOfConfig":"152"},{"size":1740,"mtime":1612869219960,"results":"220","hashOfConfig":"152"},{"size":3824,"mtime":1612870835403,"results":"221","hashOfConfig":"152"},{"size":12331,"mtime":1612879463642,"results":"222","hashOfConfig":"152"},{"size":895,"mtime":1609852766445,"results":"223","hashOfConfig":"152"},{"size":1587,"mtime":1608120716000,"results":"224","hashOfConfig":"152"},{"size":4392,"mtime":1612890137359,"results":"225","hashOfConfig":"152"},{"size":3013,"mtime":1608120716000,"results":"226","hashOfConfig":"152"},{"size":3530,"mtime":1608120716000,"results":"227","hashOfConfig":"152"},{"size":3359,"mtime":1608120716000,"results":"228","hashOfConfig":"152"},{"size":5265,"mtime":1612879463750,"results":"229","hashOfConfig":"152"},{"size":2156,"mtime":1612879463729,"results":"230","hashOfConfig":"152"},{"size":7017,"mtime":1612879463715,"results":"231","hashOfConfig":"152"},{"size":9481,"mtime":1612879463718,"results":"232","hashOfConfig":"152"},{"size":18597,"mtime":1612879463713,"results":"233","hashOfConfig":"152"},{"size":9733,"mtime":1612879463733,"results":"234","hashOfConfig":"152"},{"size":3011,"mtime":1612879463744,"results":"235","hashOfConfig":"152"},{"size":3069,"mtime":1612879463746,"results":"236","hashOfConfig":"152"},{"size":5977,"mtime":1612879463732,"results":"237","hashOfConfig":"152"},{"size":1795,"mtime":1612879463712,"results":"238","hashOfConfig":"152"},{"size":5808,"mtime":1612879463752,"results":"239","hashOfConfig":"152"},{"size":13135,"mtime":1612879463730,"results":"240","hashOfConfig":"152"},{"size":2315,"mtime":1612879463742,"results":"241","hashOfConfig":"152"},{"size":2816,"mtime":1612879463755,"results":"242","hashOfConfig":"152"},{"size":5513,"mtime":1612879463805,"results":"243","hashOfConfig":"152"},{"size":3697,"mtime":1612879463800,"results":"244","hashOfConfig":"152"},{"size":52740,"mtime":1612879463727,"results":"245","hashOfConfig":"152"},{"size":25145,"mtime":1612879463748,"results":"246","hashOfConfig":"152"},{"size":6087,"mtime":1612879463798,"results":"247","hashOfConfig":"152"},{"size":11236,"mtime":1612879463803,"results":"248","hashOfConfig":"152"},{"size":14022,"mtime":1612879463757,"results":"249","hashOfConfig":"152"},{"size":33892,"mtime":1612879463764,"results":"250","hashOfConfig":"152"},{"size":629,"mtime":1612879463793,"results":"251","hashOfConfig":"152"},{"size":16914,"mtime":1612879463759,"results":"252","hashOfConfig":"152"},{"size":6366,"mtime":1612879463762,"results":"253","hashOfConfig":"152"},{"size":1943,"mtime":1608120716000,"results":"254","hashOfConfig":"152"},{"size":613,"mtime":1612879463795,"results":"255","hashOfConfig":"152"},{"size":7178,"mtime":1612879463814,"results":"256","hashOfConfig":"152"},{"size":3813,"mtime":1612879463812,"results":"257","hashOfConfig":"152"},{"size":999,"mtime":1612879463792,"results":"258","hashOfConfig":"152"},{"size":1783,"mtime":1612886006789,"results":"259","hashOfConfig":"152"},{"size":1474,"mtime":1612889313386,"results":"260","hashOfConfig":"152"},{"size":9163,"mtime":1612713017985,"results":"261","hashOfConfig":"152"},{"size":1776,"mtime":1612858645639,"results":"262","hashOfConfig":"152"},{"size":13246,"mtime":1612710061017,"results":"263","hashOfConfig":"152"},{"size":15704,"mtime":1612851263656,"results":"264","hashOfConfig":"152"},{"size":1666,"mtime":1612879463567,"results":"265","hashOfConfig":"152"},{"size":129,"mtime":1612509384236,"results":"266","hashOfConfig":"152"},{"size":2975,"mtime":1610453130394,"results":"267","hashOfConfig":"152"},{"size":5408,"mtime":1612879463865,"results":"268","hashOfConfig":"152"},{"size":9451,"mtime":1611902700630,"results":"269","hashOfConfig":"152"},{"size":380,"mtime":1608201287916,"results":"270","hashOfConfig":"152"},{"size":2615,"mtime":1611658074624,"results":"271","hashOfConfig":"152"},{"size":5102,"mtime":1612889330571,"results":"272","hashOfConfig":"152"},{"size":1409,"mtime":1612851253511,"results":"273","hashOfConfig":"152"},{"size":56,"mtime":1608120716000,"results":"274","hashOfConfig":"152"},{"size":2119,"mtime":1612879463864,"results":"275","hashOfConfig":"152"},{"size":4208,"mtime":1612879463817,"results":"276","hashOfConfig":"152"},{"size":4922,"mtime":1612879463819,"results":"277","hashOfConfig":"152"},{"size":2587,"mtime":1612879463775,"results":"278","hashOfConfig":"152"},{"size":4947,"mtime":1612879463866,"results":"279","hashOfConfig":"152"},{"size":4388,"mtime":1612879463863,"results":"280","hashOfConfig":"152"},{"size":14441,"mtime":1612889306842,"results":"281","hashOfConfig":"152"},{"size":972,"mtime":1612879463978,"results":"282","hashOfConfig":"152"},{"size":28948,"mtime":1612889296204,"results":"283","hashOfConfig":"152"},{"size":2010,"mtime":1612879463971,"results":"284","hashOfConfig":"152"},{"size":125,"mtime":1612879463709,"results":"285","hashOfConfig":"152"},{"size":1620,"mtime":1612879463768,"results":"286","hashOfConfig":"152"},{"size":3446,"mtime":1612879463771,"results":"287","hashOfConfig":"152"},{"size":7838,"mtime":1612879463895,"results":"288","hashOfConfig":"152"},{"size":6943,"mtime":1612879463958,"results":"289","hashOfConfig":"152"},{"size":7019,"mtime":1612879463951,"results":"290","hashOfConfig":"152"},{"size":581,"mtime":1608120716000,"results":"291","hashOfConfig":"152"},{"size":5294,"mtime":1612879463952,"results":"292","hashOfConfig":"152"},{"size":2011,"mtime":1612879463954,"results":"293","hashOfConfig":"152"},{"size":5554,"mtime":1612879463955,"results":"294","hashOfConfig":"152"},{"size":6438,"mtime":1612879463961,"results":"295","hashOfConfig":"152"},{"size":2014,"mtime":1612879463960,"results":"296","hashOfConfig":"152"},{"size":6139,"mtime":1612879463959,"results":"297","hashOfConfig":"152"},{"size":2019,"mtime":1612879463898,"results":"298","hashOfConfig":"152"},{"size":5990,"mtime":1612879463897,"results":"299","hashOfConfig":"152"},{"size":6339,"mtime":1612879463899,"results":"300","hashOfConfig":"152"},{"size":1353,"mtime":1608532171061,"results":"301","hashOfConfig":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},"1tkbl3",{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"304"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"304"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"304"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"304"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"304"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"304"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"304"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"304"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"304"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"304"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"304"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"304"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"304"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"304"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"304"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"304"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"304"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"304"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"304"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"304"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"304"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"304"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"304"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"304"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"304"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"304"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"304"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"304"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"304"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"304"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"304"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"304"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"304"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"304"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\index.js",[],["637","638"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\App.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\store.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\login\\Login.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js",["639"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// sidebar nav config\r\nimport navigation from './_nav'\r\n\r\n\r\n\r\nconst _HRD=1;\r\nconst score=3;\r\nlet HRD_login=false;\r\nlet score_login=false;\r\nvar session_dep=window.sessionStorage.getItem('dep');\r\nvar sm=[\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['박수민']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '인사',\r\n    route: '/base',\r\n    icon: 'cil-chart-pie',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Attendance',\r\n        to: '/Attendance',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '회사 휴일관리',\r\n        to: '/Calendar_admin',\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nvar sm_score=[\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['이여진']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '학생관리(강사)',\r\n    route: '/base',\r\n    icon: 'cil-drop',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '성적관리',\r\n        to: '/score',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '상담관리',\r\n        to: '/counseling',\r\n      },\r\n    ]}\r\n];\r\n\r\nif(Number(session_dep)===_HRD){\r\n  HRD_login=true;\r\n}else if(Number(session_dep)===score){\r\n  score_login = true;\r\n}\r\n\r\nif(HRD_login){\r\n  score_login = false;\r\n  for(var i=sm.length-1;i>-1;i--){\r\n    navigation.splice(2,0,sm[i])\r\n  }\r\n}else if(score_login) {\r\n  HRD_login=false;\r\n  for (var i = sm_score.length - 1; i > -1; i--) {\r\n    navigation.splice(2, 0, sm_score[i])\r\n  }\r\n}\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch()\r\n  const show = useSelector(state => state.sidebarShow)\r\n\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\r\n        <CIcon\r\n          className=\"c-sidebar-brand-full\"\r\n          name=\"logo-negative\"\r\n          height={35}\r\n        />\r\n        <CIcon\r\n          className=\"c-sidebar-brand-minimized\"\r\n          name=\"sygnet\"\r\n          height={35}\r\n        />\r\n      </CSidebarBrand>\r\n      <CSidebarNav>\r\n\r\n        <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle\r\n          }}\r\n        />\r\n      </CSidebarNav>\r\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(TheSidebar)\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js",["640"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js",["641"],"import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nexport default [\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Dashboard',\r\n    to: '/dashboard',\r\n    icon: <CIcon name=\"cil-speedometer\" customClasses=\"c-sidebar-nav-icon\"/>,\r\n    badge: {\r\n      color: 'info',\r\n      text: 'NEW',\r\n    }\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['박수민']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '회사 일정',\r\n    to: '/Calendar',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '나의 출퇴근',\r\n    to: '/Attendance_user',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '휴가',\r\n    to: '/vacation',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '휴가 신청 보기',\r\n    to: '/vacation_apply',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '결제(관리자)',\r\n    to: '/adpayment',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '나의 휴가',\r\n    to: '/vacation_user',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: '결제',\r\n    to: '/payment',\r\n    icon: 'cil-calendar'\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['직원']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '직원(데스크)',\r\n    route: '/base',\r\n    icon: 'cil-drop',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '수업관리',\r\n        to: '/lecture',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '상담관리',\r\n        to: '/consult',\r\n      },\r\n    ]},\r\n    {\r\n      _tag: 'CSidebarNavDropdown',\r\n      name: '직원(재무)',\r\n      route: '/base',\r\n      icon: 'cil-drop',\r\n      _children: [\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: '수납관리',\r\n          to: '/receive',\r\n        },\r\n      ]},\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: '직원(인사)',\r\n        route: '/base',\r\n        icon: 'cil-drop',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: '공지사항관리',\r\n            to: '/notice',\r\n          },\r\n        ]},\r\n\r\n  //템플릿\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Components']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '템플릿',\r\n    route: '/base',\r\n    icon: 'cil-puzzle',\r\n    _children: [ {\r\n      _tag: 'CSidebarNavDropdown',\r\n      name: 'Base',\r\n      route: '/base',\r\n      icon: 'cil-puzzle',\r\n      _children: [\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Breadcrumb',\r\n          to: '/base/breadcrumbs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Cards',\r\n          to: '/base/cards',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Carousel',\r\n          to: '/base/carousels',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Collapse',\r\n          to: '/base/collapses',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Forms',\r\n          to: '/base/forms',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Jumbotron',\r\n          to: '/base/jumbotrons',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'List group',\r\n          to: '/base/list-groups',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Navs',\r\n          to: '/base/navs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Navbars',\r\n          to: '/base/navbars',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Pagination',\r\n          to: '/base/paginations',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Popovers',\r\n          to: '/base/popovers',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Progress',\r\n          to: '/base/progress-bar',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Switches',\r\n          to: '/base/switches',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tables',\r\n          to: '/base/tables',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tabs',\r\n          to: '/base/tabs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tooltips',\r\n          to: '/base/tooltips',\r\n        },\r\n      ],\r\n    },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Buttons',\r\n        route: '/buttons',\r\n        icon: 'cil-cursor',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Buttons',\r\n            to: '/buttons/buttons',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Brand buttons',\r\n            to: '/buttons/brand-buttons',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Buttons groups',\r\n            to: '/buttons/button-groups',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Dropdowns',\r\n            to: '/buttons/button-dropdowns',\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Charts',\r\n        to: '/charts',\r\n        icon: 'cil-chart-pie'\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Icons',\r\n        route: '/icons',\r\n        icon: 'cil-star',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Free',\r\n            to: '/icons/coreui-icons',\r\n            badge: {\r\n              color: 'success',\r\n              text: 'NEW',\r\n            },\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Flags',\r\n            to: '/icons/flags',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Brands',\r\n            to: '/icons/brands',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Notifications',\r\n        route: '/notifications',\r\n        icon: 'cil-bell',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Alerts',\r\n            to: '/notifications/alerts',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Badges',\r\n            to: '/notifications/badges',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Modal',\r\n            to: '/notifications/modals',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Toaster',\r\n            to: '/notifications/toaster'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Widgets',\r\n        to: '/widgets',\r\n        icon: 'cil-calculator',\r\n        badge: {\r\n          color: 'info',\r\n          text: 'NEW',\r\n        },\r\n      },]\r\n  }\r\n]\r\n\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\RegisterEmployee.js",["642"],"import React, {Component} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CRow,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nclass RegisterEmployee extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n          name : '',\r\n          hp : '',\r\n          address : '',\r\n          email : '',\r\n          birth : ''\r\n    }\r\n    this.onValueChange = this.onValueChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onValueChange = (value) => {\r\n    this.setState({\r\n      [value.target.name] : value.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit = (x) =>{\r\n    x.preventDefault();\r\n\r\n    console.log('test ::' + this.state.hp)\r\n\r\n    let employee = {\r\n      name : this.state.name,\r\n      hp : this.state.hp,\r\n      email : this.state.email,\r\n      birth : this.state.birth,\r\n      address : this.state.address,\r\n    }\r\n\r\n    ApiService.InsertEmployee(employee).then(res =>{\r\n      alert('회원가입 신청이 완료되었습니다. 관리자의 승인을 기다려주세요');\r\n      this.props.history.push('/');\r\n    })\r\n      .catch( err => {\r\n      console.log('회원가입 신청에 실패했습니다 관리가제에 문의해주세요', err);\r\n      this.props.history.push('/');\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardHeader align={'center'}>\r\n            <h2>회원가입</h2>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CForm>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"name\" value={this.state.name} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">휴대폰번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"hp\" value={this.state.hp} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"address\"value={this.state.address} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"email\"value={this.state.email} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">생일</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput id=\"text-input\" name=\"birth\"value={this.state.birth} onChange={this.onValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </CForm>\r\n          </CCardBody>\r\n          <CCardFooter>\r\n            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.onSubmit}><CIcon name=\"cil-scrubber\" /> 제출</CButton>\r\n            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화</CButton>\r\n          </CCardFooter>\r\n        </CCard>\r\n      </CCol>\r\n      </CRow>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterEmployee\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js",["643","644","645","646","647"],"import React, {Component, useState} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\nimport {CCard, CCardBody, CCardHeader, CPagination} from \"@coreui/react\";\r\nimport {DocsLink} from \"../../reusable\";\r\n\r\nclass Employee extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      employeeList: [],\r\n      currentPage : 1,\r\n      size : 10,\r\n      setCurrentPage : 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    ApiService.getEmployee(this.state).then(res => {\r\n      this.setState({\r\n        employeeList : res.data.content,\r\n        currentPage : res.data.number+1,\r\n        size : this.state,\r\n        setCurrentPage : 0\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {employeeList, currentPage, size , setCurrentPage} = {}//useState(0);\r\n\r\n    return (\r\n      <div>\r\n        <h2>직원 목록</h2>\r\n         <table>\r\n           <thead>\r\n           <tr>\r\n             <th>번호</th>\r\n             <th>이름</th>\r\n             <th>전화번호</th>\r\n             <th>주소</th>\r\n             <th>생년월일</th>\r\n             <th>성별</th>\r\n             <th>직급</th>\r\n             <th>연봉</th>\r\n           </tr>\r\n           </thead>\r\n           <tbody>\r\n           {\r\n             this.state.employeeList.map(\r\n               data =>\r\n             <tr key = {data.no}>\r\n              <td>{data.no}</td>\r\n               <td>{data.name}</td>\r\n               <td>{data.hp}</td>\r\n               <td>{data.address}</td>\r\n               <td>{data.birth}</td>\r\n               <td>{data.sex}</td>\r\n               <td>{data.rank}</td>\r\n               <td>{data.salary}</td>\r\n             </tr>\r\n             )\r\n           }\r\n           </tbody>\r\n         </table>\r\n        <CCard>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={size}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n        </CCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\StandByAuth.js",["648","649","650"],"import React, {Component} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\n\r\n\r\nclass StandByAuth extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    ApiService.standByAuth().then(res => {\r\n      this.setState({});\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {employeeList, currentPage, size} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>현재 승인 대기 중 입니다.</h1>\r\n        현재 승인 대기 중 입니다.\r\n        자세한 문의는 인사팀 또는 관리자에게 문의해주세요.\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandByAuth\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\dashboard\\Dashboard.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js",["651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669"],"import React, { Component } from \"react\";\r\n//import axios from \"axios\";\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n   // import { DocsLink } from 'src/reusable'\r\n\r\nclass Ins_stu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      hp: '',\r\n      email: '',\r\n      bitrh: '',\r\n      address: '',\r\n      lecture: '',\r\n      gender: '',\r\n      regdate:''\r\n    }\r\n  }\r\n\r\n  onChange =(e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  saveStudent = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.email)\r\n\r\n    let student = {\r\n      name : this.state.name,\r\n      hp : this.state.hp,\r\n      email : this.state.email,\r\n      birth : this.state.birth,\r\n      address : this.state.address,\r\n      lecture : this.state.lecture,\r\n      gender : this.state.gender,\r\n      //regdate : this.state.regdate\r\n    }\r\n\r\n    console.log(this.state.email)\r\n\r\n    ApiService.addStudent(student)\r\n    .then( res => {\r\n      this.setState({\r\n        message : student.name + '님이 성공적으로 등록되었습니다'\r\n      })\r\n      console.log(this.state.message);\r\n      this.props.history.push('/students');\r\n    })\r\n    .catch( err => {\r\n      console.log('saveStudent() 에러', err);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              학생 정보 등록\r\n              <small> Elements</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm>\r\n               <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"name\" placeholder=\"이름\" value={this.state.name} onChange={this.onChange} />\r\n                    <CFormText>이름을 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"hp\" placeholder=\"핸드폰 번호\" value={this.state.hp} onChange={this.onChange}/>\r\n                    <CFormText>숫자만 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">이메일주소</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"email\" placeholder=\"이메일 주소\" value={this.state.email} onChange={this.onChange}/>\r\n                    <CFormText className=\"help-block\">이메일주소를 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"date-input\">생년월일</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"date\" name=\"birth\" placeholder=\"생년월일\" value={this.state.birth} onChange={this.onChange}/>\r\n                  </CCol>\r\n                </CFormGroup><CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">주소 입력</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"address\" placeholder=\"주소\" value={this.state.address} onChange={this.onChange}/>\r\n                    <CFormText>주소를 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">수강과목</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"lecture\" onChange={this.onChange}>\r\n                    <option value=\"0\">과목을 선택하세요</option>\r\n                      <option value=\"1\">JAVA</option>\r\n                      <option value=\"2\">PYTHON</option>\r\n                      <option value=\"3\">C++</option>\r\n                      <option value=\"4\">KOTLIN</option>\r\n                      <option value=\"5\">수강과목 없음</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">성별</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"gender\" onChange={this.onChange}>\r\n                    <option value=\"0\">성별을 선택하세요</option>\r\n                      <option value=\"male\">male</option>\r\n                      <option value=\"female\">female</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n            </CCardFooter>\r\n          </CCard>\r\n          </CCol>\r\n        </CRow>\r\n    );}\r\n}\r\n\r\nexport default Ins_stu;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js",["670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  //import { DocsLink } from 'src/reusable'\r\n\r\n  class Edit_stu extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            no : '',\r\n            name : '',\r\n            hp : '',\r\n            email : '',\r\n            birth : '',\r\n            address : '',\r\n            lecture : '',\r\n            gender : '',\r\n            regdate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Student(window.localStorage.getItem(\"StudentNO\"))\r\n            .then(res => {\r\n                let stu =  res.data.listdata;\r\n                this.setState({\r\n                    no : stu.no,\r\n                    name : stu.name,\r\n                    hp : stu.hp,\r\n                    email : stu.email,\r\n                    birth : stu.birth,\r\n                    address : stu.address,\r\n                    lecture : stu.lecture,\r\n                    gender : stu.gender,\r\n                    regdate : stu.regdate\r\n                })\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    saveStudent = (e) => {\r\n        e.preventDefault();\r\n\r\n        let student = {\r\n            no : this.state.no,\r\n            hp : this.state.hp,\r\n            email : this.state.email,\r\n            birth : this.state.birth,\r\n            address : this.state.address,\r\n            lecture : this.state.lecture,\r\n        }\r\n\r\n        ApiService.editStudent(student)\r\n            .then( res => {\r\n            this.setState({\r\n                message : student.name + '님의 정보가 수정되었습니다'\r\n            })\r\n            console.log(this.state.message);\r\n            this.props.history.push('/students');\r\n            })\r\n            .catch( err => {\r\n            console.log('saveStudent() 에러', err);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n              <CCard>\r\n                <CCardHeader>\r\n                  학생 정보 수정\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm>\r\n                   <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                      <CLabel>{this.state.name}</CLabel>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"hp\" placeholder={this.state.hp} value={this.state.hp} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"email-input\">이메일주소</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"email\" placeholder={this.state.email} value={this.state.email} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"date-input\">생년월일</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput type=\"date\" name=\"birth\" placeholder={this.state.birth} value={this.state.birth} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup><CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">주소 입력</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"address\" placeholder={this.state.address} value={this.state.address} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"select\">수강과목</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CSelect custom name=\"lecture\" onChange={this.onChange}>\r\n                        <option value=\"0\">과목을 선택하세요</option>\r\n                          <option value=\"1\">JAVA</option>\r\n                          <option value=\"2\">PYTHON</option>\r\n                          <option value=\"3\">C++</option>\r\n                          <option value=\"4\">KOTLIN</option>\r\n                          <option value=\"5\">수강과목 없음</option>\r\n                        </CSelect>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton onClick={this.saveStudent} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n                </CCardFooter>\r\n              </CCard>\r\n              </CCol>\r\n            </CRow>\r\n        );}\r\n}\r\n\r\nexport default Edit_stu","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js",["688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  import { DocsLink } from 'src/reusable'\r\n\r\nclass Student extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            no : '',\r\n            name : '',\r\n            hp : '',\r\n            email : '',\r\n            birth : '',\r\n            address : '',\r\n            lecture : '',\r\n            gender : '',\r\n            regdate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n            ApiService.Student(window.localStorage.getItem(\"StudentNO\"))\r\n                .then(res => {\r\n                    let stu =  res.data.listdata;\r\n                    this.setState({\r\n                        no : stu.no,\r\n                        name : stu.name,\r\n                        hp : stu.hp,\r\n                        email : stu.email,\r\n                        birth : stu.birth,\r\n                        address : stu.address,\r\n                        lecture : stu.lecture,\r\n                        gender : stu.gender,\r\n                        regdate : stu.regdate\r\n                    })\r\n                })\r\n            .catch(err =>{\r\n                console.log('getApi() 에러', err);\r\n            });\r\n        }\r\n\r\n    delStu = (NO) => {\r\n        ApiService.deleteStudent(NO)\r\n        .then( res => {\r\n            this.setState({\r\n                message : 'User Deleted Suscces'\r\n            });\r\n            alert(this.state.message);\r\n            this.props.history.push('/students');\r\n        })\r\n        .catch(err => {\r\n            console.log('delStu() Error!', err);\r\n        })\r\n    }\r\n\r\n    editStu = (NO) => {\r\n        window.localStorage.setItem(\"StudentNO\", NO);\r\n        this.props.history.push('/edit_stu');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CRow>\r\n                <CCol xs=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            학생 상세 정보\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CForm>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">등록번호</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.no}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.name}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">전화번호</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.hp}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.email}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">생년월일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.birth}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.address}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">교육과정</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.lecture}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">성별</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.gender}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">등록일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.regdate}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={() => this.editStu(this.state.no)}>수정</CButton>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={() => this.delStu(this.state.no)}>삭제</CButton>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Student;\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Ins_att.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738"],"import React, { Component } from \"react\";\r\nimport ApiService from \"../../ApiService\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport Lecture from \"../lecture/Lecture\";\r\n\r\nclass Ins_att extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            attStu : '',\r\n            LectureName : '',\r\n            InsDate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        console.log(window.localStorage.getItem(\"InsLecAtt\"));\r\n        ApiService.InsAtt(window.localStorage.getItem(\"InsLecAtt\"))\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    attStu : res.data.list,\r\n                    LectureName : window.localStorage.getItem(\"InsLecAtt\"),\r\n                    InsDate : window.localStorage.getItem(\"InsDateAtt\")\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n    saveAtt = (e) => {\r\n        e.preventDefault();\r\n    \r\n        console.log(this.state.email)\r\n    \r\n        let student = {\r\n          name : this.state.name,\r\n          hp : this.state.hp,\r\n          email : this.state.email,\r\n          birth : this.state.birth,\r\n          address : this.state.address,\r\n          lecture : this.state.lecture,\r\n          gender : this.state.gender,\r\n          //regdate : this.state.regdate\r\n        }\r\n    \r\n        console.log(this.state.email)\r\n    \r\n        ApiService.addStudent(student)\r\n        .then( res => {\r\n          this.setState({\r\n            message : student.name + '님이 성공적으로 등록되었습니다'\r\n          })\r\n          console.log(this.state.message);\r\n          this.props.history.push('/students');\r\n        })\r\n        .catch( err => {\r\n          console.log('saveStudent() 에러', err);\r\n        });\r\n    \r\n      }\r\n\r\n    render() {\r\n        const { attStu,LectureName,InsDate } = this.state;\r\n        return(\r\n            <div>\r\n            \r\n            <tr><td>수업이름</td><td>{LectureName}</td><td>날짜</td><td>{InsDate}</td><td colSpan='3'></td></tr>\r\n            <table>  \r\n            <tr><td>no</td><td>name</td><td>출결</td><td></td><td></td><td></td><td></td></tr>\r\n                {attStu&&attStu.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>\r\n                    {/* <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selStu(itemdata.no)}>상세</CButton></td> */}\r\n                    <CCol md=\"9\">\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio1\" name=\"inline-radios\" value=\"0\" defaultChecked/>\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio1\">출석</CLabel>\r\n                    </CFormGroup>\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio2\" name=\"inline-radios\" value=\"1\" />\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio2\">결석</CLabel>\r\n                    </CFormGroup>\r\n                    <CFormGroup variant=\"custom-radio\" inline>\r\n                      <CInputRadio custom id=\"inline-radio3\" name=\"inline-radios\" value=\"2\" />\r\n                      <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-radio3\">지각</CLabel>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                  </td>\r\n                </tr>\r\n                    );\r\n                })}\r\n            <tr><td>\r\n            <CButton onClick={this.saveAtt} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                </td></tr>\r\n            </table>\r\n            </div>\r\n                             \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Ins_att;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js",["739","740","741","742","743","744"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\HR.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Stu_Att\\Stu_att.js",["745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763"],"import React, { Component } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nclass Stu_att extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            attdata: '',\r\n            no: '',\r\n            leclist: '',\r\n            lecture: '',\r\n            date:''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Leclist()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    leclist: res.data.list\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    SearchAtt = (name) => {\r\n        ApiService.StuAtt(name)\r\n            .then(res => {\r\n                this.setState({\r\n                    attdata: res.data.attdata\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('SearchAtt() 에러', err)\r\n            })\r\n    }\r\n\r\n    // lectureSelect = (e) => {\r\n    //     this.setState({\r\n    //         findLecture: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    InsertAtt = (e) => {\r\n        e.preventDefault();\r\n        window.localStorage.setItem(\"InsDateAtt\", this.state.date);\r\n        window.localStorage.setItem(\"InsLecAtt\", this.state.lecture);\r\n        console.log(window.localStorage.getItem(\"InsLecAtt\"));\r\n        this.props.history.push('/ins_att');\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const { attdata } = this.state;\r\n        const { leclist } = this.state;\r\n        return (\r\n            <div>\r\n                <CRow>\r\n                    <CCol xs=\"15\" md=\"6\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                학생 출결 등록\r\n                <DocsLink name=\"-Input\" />\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CForm>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">강의선택</CLabel>\r\n                                        </CCol>\r\n                                        <CCol>\r\n                                            <CSelect custom id=\"lecture\" name=\"lecture\" value={this.state.lecture} onChange={this.onChange}>\r\n                                                <option value=\"\">강의</option>\r\n                                                {leclist && leclist.map((itemdata, insertIndex) => {\r\n                                                    return (<option value={itemdata.name}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                                                })}\r\n                                            </CSelect>\r\n                                            <CFormText>강의를 선택하세요</CFormText>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">날짜선택</CLabel>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" md=\"9\">\r\n                                            <CInput type=\"date\" id=\"date-input\" name=\"date\" placeholder=\"date\" value={this.state.date} onChange={this.onChange} />\r\n                                            <CFormText>날짜를 선택하세요</CFormText>\r\n                                        <CButton onClick={this.InsertAtt} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 출결조회 </CButton>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol xs=\"15\" md=\"6\">\r\n                        <CCard>\r\n                            <CCardHeader>\r\n                                학생 출결 조회\r\n                <DocsLink name=\"-Input\" />\r\n                            </CCardHeader>\r\n                            <CCardBody>\r\n                                <CForm>\r\n                                    <CFormGroup row>\r\n                                        <CCol md=\"3\">\r\n                                            <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                        </CCol>\r\n                                        <CCol xs=\"12\" md=\"9\">\r\n                                            <CInput name=\"name\" placeholder=\"이름\" value={this.state.name} onChange={this.onChange} />\r\n                                            <CFormText>이름을 입력하세요</CFormText>\r\n                                            <CButton onClick={() => this.SearchAtt(this.state.name)} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 출결조회 </CButton>\r\n                                        </CCol>\r\n                                    </CFormGroup>\r\n                                    <table>\r\n                                        <tr><td>날짜</td><td>강의명</td><td>출결여부</td></tr>\r\n                                        {attdata && attdata.map((itemdata, insertIndex) => {\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{itemdata.date}</td>\r\n                                                    <td>{itemdata.lecname}</td>\r\n                                                    {itemdata.att === 0 ? <td>출석</td> : (itemdata.att === 1 ? <td>결석</td> : <td>지각</td>)}\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                        <tr></tr>\r\n                                    </table>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stu_att;\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryList.js",["764","765","766","767","768","769"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport { DocsLink } from 'src/reusable';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CPagination\r\n  } from '@coreui/react'\r\n\r\n\r\nclass SalaryList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            SalaryList: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Salary()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    SalaryList : res.data.list    \r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n            \r\n    }\r\n\r\n    selSal = (NO) => {\r\n        window.localStorage.setItem(\"SalNO\", NO);\r\n        this.props.history.push('/sal_edit');\r\n    }\r\n    \r\n    render() {\r\n        const { SalaryList } =  this.state;\r\n        \r\n        return (\r\n            <div>\r\n            <table>\r\n            <tr><td>no</td><td>branch</td><td>name</td><td>salary</td></tr>\r\n                {SalaryList&&SalaryList.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.branch}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>{itemdata.salary}</td>\r\n                    <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selSal(itemdata.no)}>급여수정</CButton></td>\r\n                    </tr>\r\n                    );\r\n                })}\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SalaryList;\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\HR\\SalaryEdit.js",["770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  //import { DocsLink } from 'src/reusable'\r\n\r\n  class Edit_stu extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            salary : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.SalaryEmp(window.localStorage.getItem(\"SalNO\"))\r\n            .then(res => {\r\n                let emp =  res.data.list;\r\n                this.setState({\r\n                    name : emp.name,\r\n                    salary : emp.salary\r\n                })\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    saveSalary = (e) => {\r\n        e.preventDefault();\r\n\r\n        let employee = {\r\n            name : this.state.name,\r\n            salary : this.state.salary   \r\n        }\r\n\r\n        ApiService.editStudent(employee)\r\n            .then( res => {\r\n            this.setState({\r\n                message : employee.name + '님의 정보가 수정되었습니다'\r\n            })\r\n            console.log(this.state.message);\r\n            this.props.history.push('/sal_list');\r\n            })\r\n            .catch( err => {\r\n            console.log('saveSalary() 에러', err);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n              <CCard>\r\n                <CCardHeader>\r\n                  직원 급여 수정\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm>\r\n                   <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                      <CLabel>{this.state.name}</CLabel>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"hp\" placeholder={this.state.salary} value={this.state.salary} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton onClick={this.saveSalary} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n                </CCardFooter>\r\n              </CCard>\r\n              </CCol>\r\n            </CRow>\r\n        );}\r\n}\r\n\r\nexport default Edit_stu","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\Calendar.js",["789","790"],"import React from 'react'\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from '@fullcalendar/list';\r\nimport events from \"./events\"\r\nimport ApiService from \"../../ApiService\";\r\n\r\n\r\nclass DemoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      events:\"\",\r\n      Edate:\"\",\r\n      arr:[],\r\n      data:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    ApiService.Teacher(4)\r\n      .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              Edate : res.data.list\r\n            })\r\n            console.log(this.state.Edate.length);\r\n            for(var i=0;i<this.state.Edate.length;i++) {\r\n              this.state.arr[i] = {\r\n              id: i,\r\n              title: \"수강일\",\r\n              date: this.state.Edate[i]\r\n            } \r\n          }\r\n          this.setState({\r\n            data : this.state.arr\r\n          })\r\n          \r\n        console.log(this.state.arr[37]);\r\n        })\r\n        \r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const{data} = this.state;\r\n    return (\r\n      \r\n      <FullCalendar\r\n        defaultView=\"timeGridDay\"\r\n        headerToolbar= {{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        }}\r\n        plugins={[dayGridPlugin, timeGridPlugin,listPlugin]}\r\n        navLinks= {true} \r\n        nowIndicator= {true}\r\n        weekNumbers= {true}\r\n        weekNumberCalculation= 'ISO'\r\n        editable= {true}\r\n        selectable= {true}\r\n        dayMaxEvents= {true}\r\n        events={data}\r\n      />)\r\n  }\r\n}\r\nexport default DemoApp","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js",["791","792"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CCol, CForm, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, Grid, IconButton} from \"@material-ui/core\";\r\nimport Exam from \"../exam/Exam\";\r\nimport ScoreEdit from \"./ScoreEdit\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ScoreTotal from \"./ScoreTotal\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Score extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: session_no,\r\n      lecture: \"\",\r\n      examList: \"\",\r\n      scoreArray: [],\r\n      disabled: true,\r\n      title: \"수정\",\r\n      totalWeight: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.editScore = this.editScore.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n    });\r\n    this.getLecture();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getLecture() {\r\n    axios.get(\"http://localhost:8080/api/students/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n      average:\"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/api/students/\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n          scoreArray: [],\r\n          examList: \"\",\r\n          totalWeight: \"\",\r\n          disabled: true,\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  editScore() {\r\n    axios({\r\n      url: 'http://localhost:8080/score',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        scoreArray: this.state.scoreArray,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  setData(scoreArray) {\r\n    let no\r\n    let exam\r\n    let lecture\r\n    let score\r\n    let student\r\n    let regdate = new Date();\r\n    let array = this.state.scoreArray;\r\n\r\n\r\n    scoreArray.map((scoreList) => {\r\n      exam = scoreList.exam;\r\n      lecture = scoreList.lecture;\r\n      score = scoreList.score;\r\n      student = scoreList.student;\r\n      no = scoreList.no;\r\n    })\r\n\r\n    let index = array.findIndex(isScore);\r\n    function isScore(element) {\r\n      if (element.exam === exam && element.lecture === lecture && element.student === student) {\r\n        return true;\r\n\r\n      }\r\n    }\r\n\r\n    if (score === \"\") {\r\n      score = 0;\r\n    }\r\n    if (index > -1) {\r\n      array[index].score = score;\r\n      array[index].regdate = regdate;\r\n    } else {\r\n      if (no === \"\") {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n        })\r\n      } else {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n          no: no,\r\n        })\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      scoreArray: array,\r\n    })\r\n    console.log(array)\r\n  }\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state\r\n    let name = \"수정\"\r\n    if (this.state.disabled) {\r\n      name = \"수정\"\r\n    } else {\r\n      name = \"수정완료\"\r\n    }\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"0\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n            <Grid container justify=\"flex-end\">\r\n              <Exam stateRefresh={this.stateRefresh} teacher={this.state.teacher}/>\r\n            </Grid>\r\n          </CForm>\r\n          <br/>\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td width=\"10%\">학생명</td>\r\n            {examList && examList.map((itemdata) => {\r\n              return (<td>{itemdata.name}&nbsp;({itemdata.weight}%)</td>);\r\n            })}\r\n            <td bgcolor=\"#eee8aa\">총점&nbsp;({this.state.totalWeight}%)</td>\r\n          </tr>\r\n          <tr>\r\n\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                {\r\n                  examList && examList.map((examdata) => {\r\n                    return (\r\n                      <td key={examdata.no}>\r\n                        <ScoreEdit\r\n                          id={itemdata.no}\r\n                          lecture={this.state.lecture}\r\n                          exam={examdata.no}\r\n                          setData={this.setData}\r\n                          disabled={this.state.disabled}/>\r\n                      </td>);\r\n                  })\r\n                }\r\n                <td bgcolor=\"#eee8aa\"><ScoreTotal\r\n                  id={itemdata.no}\r\n                  lecture={this.state.lecture}\r\n                  /></td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다.</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n        <br/>\r\n        <Grid container justify=\"flex-end\">\r\n          {studentList.length > 0 &&\r\n          <CCol md=\"1\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>{name}</Button>\r\n          </CCol>\r\n          }\r\n          {this.state.disabled === false &&\r\n          <Button variant=\"contained\" onClick={this.stateRefresh}>취소</Button>\r\n          }\r\n        </Grid>\r\n        <br/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js",["793","794"],"//-----------------------\r\n// 제목 : 상담 수정\r\n// 파일명 : ConsultUpdate.js\r\n// 작성자 : 최인아\r\n// 작성일 : \r\n//-----------------------\r\nimport React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, withStyles} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CInputCheckbox, CLabel } from \"@coreui/react\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n});\r\n\r\nclass ConsultUpdate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.ConsultList.name,\r\n      hp: this.props.ConsultList.hp,\r\n      schedule: this.props.ConsultList.schedule,\r\n      memo: this.props.ConsultList.memo,\r\n      route: this.props.ConsultList.route,\r\n      writer: this.props.ConsultList.writer\r\n    }\r\n\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.updateConsult = this.updateConsult.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.checkboxChange = this.checkboxChange.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.updateConsult()\r\n    this.setState({\r\n      name: '',\r\n      hp: '',\r\n      schedule: '',\r\n      memo: '',\r\n      route: '',\r\n      writer: ''\r\n\r\n    })\r\n    alert(\"수정되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  updateConsult() {\r\n    axios({\r\n      url: 'http://localhost:8080/consult/edit/' + this.props.ConsultList.no,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        name: this.state.name,\r\n        hp: this.state.hp,\r\n        schedule: this.state.schedule,\r\n        memo: this.state.memo,\r\n        route: this.state.route.toString(),\r\n        writer: this.state.writer\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n   checkboxChange = (e) => {\r\n     const route=this.state.route\r\n     let index\r\n     if (e.target.checked) {\r\n       route.push(e.target.value)\r\n     } else {\r\n       index = route.indexOf(e.target.value)\r\n       route.splice(index, 1)\r\n    }\r\n     this.setState({route:route})\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    let ConsultList = this.props.ConsultList;\r\n    let route = this.state.route;\r\n    console.log(ConsultList);\r\n\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n          수정\r\n        </Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>상담 수정</DialogTitle>\r\n          <DialogContent>\r\n          {/* <CFormGroup row>\r\n              <CCol md=\"9\">\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox1\" name=\"route\" value={\"CALL\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"CALL\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">CALL</CLabel>\r\n                </CFormGroup>\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox2\" name=\"route\" value={\"ONLINE\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"ONLINE\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">ONLINE</CLabel>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup> */}\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"name\">성명</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"성명\" defaultValue={ConsultList.name} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hp\">전화번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"hp\" placeholder=\"전화번호\" defaultValue={ConsultList.hp} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"schedule\">상담날짜</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"schedule\" placeholder=\"상담날짜\" defaultValue={ConsultList.schedule} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"memo\">상담내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"meom\" placeholder=\"상담내용\" defaultValue={ConsultList.memo} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"wrtier\">작성자</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"writer\" placeholder=\"작성자\" defaultValue={ConsultList.writer} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>수정완료</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ConsultUpdate)\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js",["795"],"// import React, {Component} from \"react\";\r\n// import axios from \"axios\";\r\n// import './table.css';\r\n// import ConsultInsert from \"./ConsultInsert\";\r\n// import Consult from \"./Consult\";\r\n// import { CButton, CInput } from \"@coreui/react\";\r\n\r\n// class Consults extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       keyword: '', //공백으로 지정\r\n//         consultList: \"\"\r\n//     }\r\n//     this.stateRefresh = this.stateRefresh.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n// }\r\n\r\n// handleChange(e) { //위에 지정되는 걸 변화\r\n//   this.setState({\r\n//   keyword: e.target.value\r\n// });\r\n// }\r\n\r\n//   stateRefresh() {\r\n//     this.setState({\r\n//       consultList: \"\",\r\n//     });\r\n//     this.getApi(this.state.keyword);\r\n\r\n//   }\r\n\r\n// componentDidMount() {\r\n//     this.getApi(this.state.keyword);\r\n// }\r\n\r\n// getApi = (keyword) => {\r\n//     axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n//         .then(res => {\r\n//             this.setState({\r\n//               consultList: res.data.message\r\n//             })\r\n//         })\r\n//         .catch(res => console.log(res))\r\n// }\r\n\r\n//   render() {\r\n//     const { consultList } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <header>\r\n//           <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n//           <br></br>\r\n//         </header>\r\n//         <table id=\"table1\" border=\"0\">\r\n//          <tr id=\"table1\">\r\n//            <td id=\"table1\">\r\n//              <CInput\r\n//               name=\"keyword\"\r\n//               placeholder=\"Search\"\r\n//               value={this.state.keyword}\r\n//               onChange={this.handleChange}\r\n//               class=\"w-25 p-3\"\r\n//               //class=\"form-control\"\r\n//             />&nbsp;&nbsp;&nbsp;\r\n//             <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n//                      onClick = {(e) => {\r\n//                                 this.getApi(this.state.keyword)}}>검색</CButton>\r\n//           </td>\r\n//         </tr>\r\n//       </table>\r\n//         <table>\r\n//         <thead>\r\n//           <tr>\r\n//           <td>NO</td>\r\n//             <td>name</td>\r\n//              <td>  hp  </td>\r\n//            <td>schedule</td>\r\n//             <td>memo</td>\r\n//             <td>route</td>\r\n//              <td>writer</td>\r\n//            <td>regdate</td>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//          {consultList&&consultList.map((consultdata, insertIndex) => {\r\n//             return (\r\n//             <tr key={insertIndex}>\r\n//                 <td>{consultdata.no}</td>\r\n//                 <td> <Consult stateRefresh={this.stateRefresh} id={consultdata.no}/></td>\r\n//                 <td>{consultdata.hp}</td>\r\n//                <td>{consultdata.schedule}</td>\r\n//                <td>{consultdata.memo}</td>\r\n//                 <td>{consultdata.route}</td>\r\n//                  <td>{consultdata.writer}</td>\r\n//                  <td>{consultdata.regdate}</td>\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>\r\n//       </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Consults;\r\n\r\n//-----------------------\r\n// 제목 : 상담 기록 리스트\r\n// 파일명 : Consults.js\r\n// 작성자 : 최인아\r\n//-----------------------\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { CButton, CInput } from \"@coreui/react\";\r\nimport ConsultInsert from \"./ConsultInsert\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nclass Consults extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        keyword: '', //공백으로 지정\r\n        ConsultList: \"\"\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this)\r\n    this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(e) { //위에 지정되는 걸 변화\r\n  this.setState({\r\n  keyword: e.target.value\r\n});\r\n}\r\n\r\nstateRefresh() {\r\n  this.setState({\r\n    ConsultList: \"\"\r\n  });\r\n  this.getApi(this.state.keyword);\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.getApi(this.state.keyword);\r\n}\r\n\r\ngetApi = (keyword) => {\r\n    axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n        .then(res => {\r\n            this.setState({\r\n              ConsultList: res.data.message\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n}\r\n\r\n  render() {\r\n    const { ConsultList } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <table id=\"table1\" border=\"0\">\r\n        <tr id=\"table1\">\r\n          <td id=\"table1\">\r\n            <CInput\r\n              name=\"keyword\"\r\n              placeholder=\"Search\"\r\n              value={this.state.keyword}\r\n              onChange={this.handleChange}\r\n              class=\"w-25 p-3\"\r\n              //class=\"form-control\"\r\n            />&nbsp;&nbsp;&nbsp;\r\n            <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n                     onClick = {(e) => {\r\n                                this.getApi(this.state.keyword)}}>검색</CButton>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <header>\r\n        <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n      </header>\r\n        <br></br>\r\n    <table>\r\n        <thead>\r\n            <td>NO</td>\r\n            <td>name</td>\r\n            <td>  hp  </td>\r\n            <td>schedule</td>\r\n            <td>memo</td>\r\n            <td>route</td>\r\n            <td>writer</td>\r\n            <td>regdate</td>\r\n        </thead>\r\n          <tbody>\r\n           {ConsultList&&ConsultList.map((consultdata, insertIndex) => {\r\n            return (\r\n            <tr key={insertIndex}>\r\n                <td>{consultdata.no}</td>\r\n                <td><Link to={`/consult/${consultdata.no}`}>{consultdata.name}</Link></td>\r\n                <td>{consultdata.hp}</td>\r\n                <td>{consultdata.schedule}</td>\r\n                <td>{consultdata.memo}</td>\r\n                <td>{consultdata.route}</td>\r\n                <td>{consultdata.writer}</td>\r\n                <td>{consultdata.regdate}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody> \r\n      </table>\r\n      <br></br>\r\n      <div>\r\n        <Pagination count={10} color=\"primary\" />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Consults);\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\Counseling.js",["796"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CForm, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CounselingRecord from \"./CounselingRecord\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Counseling extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let session_no=window.sessionStorage.getItem('no');\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: session_no,\r\n      lecture: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n    });\r\n    this.getCounseling();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getCounseling() {\r\n    axios.get(\"http://localhost:8080/api/students/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/api/students/\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"0\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n          </CForm>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td>학생명</td>\r\n            <td>HP</td>\r\n            <td>Email</td>\r\n            <td>상담 기록</td>\r\n          </tr>\r\n\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                <td>{itemdata.hp}</td>\r\n                <td>{itemdata.email}</td>\r\n                <td width=\"10%\"><CounselingRecord\r\n                  stateRefresh={this.stateRefresh}\r\n                  id={itemdata.no}\r\n                  name={itemdata.name}\r\n                  lecture={this.state.lecture}\r\n                />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다.</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counseling;\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\index_view.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js",["797"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, withStyles, Grid} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CTextarea} from '@coreui/react'\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n    display: 'none'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 210,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nclass NoticeWrite extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.noticeWrite = this.noticeWrite.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.noticeWrite()\r\n    this.setState({\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.title] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let nextState = {};\r\n    nextState[event.target.name] = event.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  noticeWrite() {\r\n    axios({\r\n      url: 'http://localhost:8080/notice',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        section: this.state.section,\r\n        title: this.state.title,\r\n        content: this.state.content\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      section: '',\r\n      title : '',\r\n      content: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container justify=\"flex-end\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>글쓰기</Button>\r\n        </Grid>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} fullWidth={true} maxWidth = {'xs'}>\r\n          <DialogTitle>공 지 사 항</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Grid>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">구분</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={this.state.section}\r\n                    onChange={this.handleChange}\r\n                    label=\"구분\"\r\n                    inputProps={{ name: 'section', id: 'outlined-age-native-simple',}}>\r\n                      <option aria-label=\"None\" value=\"section\" />\r\n                      <option value={\"공지\"}>공지</option>\r\n                      <option value={\"결혼\"}>결혼</option>\r\n                      <option value={\"출산\"}>출산</option>\r\n                      <option value={\"입양\"}>입양</option>\r\n                      <option value={\"사망\"}>사망</option>\r\n                </Select>\r\n              </FormControl>\r\n              </Grid>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <TextField label=\"제목\" type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/><br/>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CTextarea \r\n                      name=\"content\" \r\n                      id=\"textarea-input\" \r\n                      rows=\"9\"\r\n                      placeholder=\"...\" \r\n                      value={this.state.content} onChange={this.handleChange}\r\n                    />\r\n                  </CCol>\r\n                </CFormGroup>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>글등록</Button>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        \r\n          </Dialog>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(NoticeWrite)\r\n\r\n\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index_view.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_user.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index_apply.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\paymentData.js",["798","799"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport {  Link } from 'react-router-dom';\r\n\r\nlet fields = ['no','employee_no', 'title', 'day'];\r\n\r\n\r\nconst PaymentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        page: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, []); \r\n\r\n    const { data, page } = inputs;\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n        });\r\n    };\r\n\r\n    \r\n    const getData = () =>{\r\n      axios.get(\"http://localhost:8080/adpayment\")\r\n        .then(res => {\r\n          console.log(res);\r\n          let list = res.data.list;\r\n          let user = res.data.user;\r\n          for(let i=0;i<list.length;i++){\r\n            for(let l=0;l<user.length;l++){\r\n              if(list[i].employee_no===user[l].no){\r\n                list[i].employee_no=user[l].name;\r\n              }\r\n            }\r\n          }\r\n          setInputs({\r\n            data: list,\r\n            page: res.data.page\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n          <CDataTable\r\n              items={data}\r\n              fields={fields}\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'title':\r\n                  (item)=>(\r\n                    <td>\r\n                      <Link to={`/adpaymentget/${item.no}`}> {item.title}</Link>\r\n                    </td>\r\n                  ),\r\n                  \r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n} \r\nexport default PaymentData;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\admin\\getPayment.js",["800"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    CDataTable\r\n} from '@coreui/react'\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CFade,\r\n} from '@coreui/react';\r\n\r\nlet fields = [];\r\n\r\n\r\nconst PaymentData = ({ match }) => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        table: \"\",\r\n        sign: \"\",\r\n        signList:[],\r\n        playerList:[]\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    \r\n\r\n    const { data, table,signList ,playerList} = inputs;\r\n\r\n    const getData = () => {\r\n        axios.get(\"http://localhost:8080/payment/\" + match.params.no)\r\n            .then(res => {\r\n                console.log(res)\r\n                let temp = [];\r\n                if (Number(res.data.list.kinds) === 1) {\r\n                    for (let i = 0; i < res.data.table.length; i++) {\r\n                        for(let l = 0; l<res.data.user.length; l++){\r\n                            if(res.data.table[i].employee_no === res.data.user[l].no){\r\n                                res.data.table[i].employee_no=res.data.user[l].name\r\n                            }\r\n                        }\r\n                        temp.push({\r\n                            no: res.data.table[i].no,\r\n                            start_day: res.data.table[i].start_day,\r\n                            end_day: res.data.table[i].end_day,\r\n                            name: res.data.table[i].employee_no,\r\n                        })\r\n                    }\r\n                    fields = ['no', 'start_day','end_day', 'name', ];\r\n                }\r\n                let playList=res.data.list.player.split(\"/\");\r\n                let userList=res.data.user;\r\n  \r\n                let playerLista=[];\r\n                for(let i=0;i<playList.length;i++){\r\n                    for(let l=0;l<userList.length;l++){\r\n                        if(Number(playList[i])===Number(userList[l].no)){\r\n    \r\n                            playerLista.push(userList[l].name);\r\n                        }\r\n                    }\r\n                }\r\n                setInputs({\r\n                    data: res.data.list,\r\n                    table: temp,\r\n                    sign: res.data.selectSign,\r\n                    signList: res.data.signList,\r\n                    playerList:playerLista\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n\r\n \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <CCard>\r\n                <CCardHeader>\r\n                    <h2>{data.title}</h2>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CFade timeout={300}  tag=\"h5\" className=\"mt-3\">\r\n\r\n                        <div style={{width: \"50%\",textAlign: \"center\"}}>\r\n                            <CDataTable\r\n                                items={table}\r\n                                fields={fields}\r\n                                itemsPerPage={10}\r\n                                pagination\r\n                                />\r\n                        </div><br></br>\r\n                        <br></br>\r\n                        {data.contents}\r\n                    </CFade>\r\n                    \r\n                </CCardBody>\r\n                결제해야하는 사람\r\n                <div>\r\n                    {playerList&&playerList.map((i)=>{\r\n                        return(<font>{i}</font>)\r\n                    })}\r\n                </div>\r\n                결제한 사인\r\n                <br></br>\r\n                {signList&&signList.map((i)=>{\r\n                    return(<img src={process.env.PUBLIC_URL + '/sign/'+i} alt=\"copy url\"  width=\"40\"height=\"40\"/>);\r\n                })}\r\n            </CCard>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default PaymentData;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\calendar.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\getPayment\\getPayment.js",["801","802"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js",["803"],"import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CPagination\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\n\r\nconst Pagination = () => {\r\n  const [currentPage, setCurrentPage] = useState(2)\r\n  console.log(currentPage)\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          Pagination\r\n          <DocsLink name=\"CPagination\"/>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Default//{currentPage}//{setCurrentPage}</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Small</h6>\r\n          <CPagination\r\n            size=\"sm\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div className=\"d-md-down-none\">\r\n            <h6>Large</h6>\r\n            <CPagination\r\n              size=\"lg\"\r\n              activePage={currentPage}\r\n              pages={10}\r\n              onActivePageChange={setCurrentPage}\r\n            />\r\n            <br></br>\r\n          </div>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <strong> Pagination </strong>\r\n          <small>alignment</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <h6>Left alignment (default)</h6>\r\n          <CPagination\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Center alignment</h6>\r\n          <CPagination\r\n            align=\"center\"\r\n            addListClass=\"some-class\"\r\n            activePage={currentPage}\r\n            pages={10}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <h6>Right (end) alignment</h6>\r\n          <CPagination\r\n            align=\"end\"\r\n            activePage={currentPage}\r\n            pages={7}\r\n            onActivePageChange={setCurrentPage}\r\n          />\r\n          <br></br>\r\n\r\n          <div>currentPage: {currentPage}</div>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance_view.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\user\\vacation.js",["804","805","806","807"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {CDataTable} from '@coreui/react'\r\nimport Moment from 'moment';\r\n\r\n\r\nlet fields = ['no', 'day', 'name'];\r\nlet payselect = 1;\r\n\r\n\r\nconst Info = () => {\r\n  const [inputs, setInputs] = useState({\r\n    data: \"\",\r\n    page: \"\",\r\n    open: \"\",\r\n    elesected: \"\",\r\n    days: \"\",\r\n    startDay:\"\",\r\n    endDay: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const {  open, page, data, days,selected,startDay,endDay } = inputs;\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n    if(name===\"startDay\"){\r\n      check_start(e)\r\n    }\r\n  \r\n  };\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(\"http://localhost:8080/getVacation/1/10/\"+window.sessionStorage.getItem('no'))\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            day: list[i].day,\r\n            name: list[i].name\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page2\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setInputs({\r\n      open: false,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    movePage(1, sel)\r\n  }\r\n  const pageChange = (selPage) => { //페이지 이동 클릭\r\n    movePage(selPage, page.cntPerPage)\r\n  }\r\n  const nextpage = () => { //다음 페이지\r\n    movePage(page.endPage + 1, page.cntPerPage)\r\n  }\r\n  const prevpage = () => { //이전 페이지\r\n    movePage(page.startPage - 1, page.cntPerPage)\r\n  }\r\n  const movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/getVacation/\" + nowpage + \"/\" + perpage+\"/\"+window.sessionStorage.getItem('no');\r\n\r\n    axios.get(add)\r\n    .then(res => {\r\n      console.log(res);\r\n      let list = res.data.list;\r\n      let page2 = res.data.page;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let temp = {\r\n          no: list[i].no,\r\n          day: list[i].day,\r\n          name: list[i].name\r\n        }\r\n        list[i] = temp\r\n      }\r\n      console.log(list);\r\n      setInputs({\r\n        data: list,\r\n        page: page2\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  const select = () => {\r\n    payselect *= -1;\r\n    let list = data;\r\n    setInputs({\r\n      data: list,\r\n      page: page\r\n    })\r\n  }\r\n\r\n  const vacationUse = () => {\r\n    var check_count = document.getElementsByName(\"check\").length;\r\n    if(check_count<1){\r\n      alert(\"휴가를 선택해주세요\")\r\n      return\r\n    }\r\n    let selectDay = 0;\r\n    let selects=\"\";\r\n    for (var i=0; i<check_count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        selects+=document.getElementsByName(\"check\")[i].value+\"/\";\r\n        for(let l=0;l<data.length;l++){\r\n          if(Number(document.getElementsByName(\"check\")[i].value) === Number(data[l].no)){\r\n            selectDay+=data[l].day\r\n          }\r\n        } \r\n      }\r\n    }\r\n    setInputs({\r\n      open: true,\r\n      page: page,\r\n      data: data,\r\n      days: selectDay,\r\n      selected: selects\r\n    })\r\n  }\r\n\r\n  const check_start = (e) =>{\r\n    var start = Moment(e.target.value).format(\"YYYY-MM-DD\");\r\n    let now = Moment().format(\"YYYY-MM-DD\");\r\n    if(start<=now){\r\n      alert(\"오늘 이후로 지정해주세요.\")\r\n      setInputs({\r\n        open: true,\r\n        page: page,\r\n        data: data,\r\n        days: days,\r\n        selected: selected,\r\n        startDay: \"\",\r\n        endDay: endDay\r\n      })\r\n    }else{\r\n      let end=Moment(e.target.value).add(days-1, 'days').format(\"YYYY-MM-DD\")\r\n      setInputs({\r\n        open: true,\r\n        page: page,\r\n        data: data,\r\n        days: days,\r\n        selected: selected,\r\n        startDay: e.target.value,\r\n        endDay: end\r\n      })\r\n    }\r\n  }\r\n\r\n  const apply = () =>{\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation_apply',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: window.sessionStorage.getItem('no'),\r\n        start_day: startDay,\r\n        end_day: endDay,\r\n        use_vacation: String(selected)\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={select}>\r\n            선택\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={vacationUse}>\r\n            휴가 사용\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <select id=\"cntPerPage\" name=\"sel\" onChange={() => { selChange() }}>\r\n            <option value=\"5\">5줄 보기</option>\r\n            <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n            <option value=\"15\">15줄 보기</option>\r\n            <option value=\"20\">20줄 보기</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <CDataTable\r\n            items={data}\r\n            fields={fields}\r\n            itemsPerPage={page.cntPerPage}\r\n            pagination\r\n            scopedSlots={{\r\n              'no':\r\n                (item) => (\r\n                  <td>\r\n                    {payselect === 1 ?\r\n                      <div>\r\n                        {item.no}\r\n                      </div>\r\n                      :\r\n                      <div>\r\n                        <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                      </div>\r\n                    }\r\n                  </td>\r\n                ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <nav aria-label=\"pagination\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            {page.startPage !== 1 ?\r\n              <li onClick={() => prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n            {makeMap(page.startPage, page.endPage).map((i) => {\r\n              if (page.nowPage === i) {\r\n                return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n              } else {\r\n                return (<li onClick={() => pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n              }\r\n            })}\r\n            {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n          </ul>\r\n        </nav>\r\n        \r\n\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>휴가 신청</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">start</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"startDay\" placeholder=\"day\" value={startDay}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              \r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">end</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"2\" md=\"9\">\r\n                <CInput type=\"date\" name=\"endDay\" placeholder=\"day\" value={endDay}\r\n                  />\r\n                  \r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                {days}\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">사용 휴가</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                {selected}\r\n              </CCol>\r\n              \r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={apply}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Info;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\user\\paymentData.js",["808","809"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport {  Link } from 'react-router-dom';\r\n\r\nlet fields = ['no','employee_no', 'title', 'day'];\r\nlet id=window.sessionStorage.no;\r\n\r\n\r\nconst PaymentData = () => {\r\n    const [inputs, setInputs] = useState({\r\n        data: \"\",\r\n        page: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, []); \r\n\r\n    const { data, page } = inputs;\r\n    const onChange = (e) => {\r\n        const { value, name } = e.target;\r\n        setInputs({\r\n        ...inputs,\r\n        [name]: value\r\n        });\r\n    };\r\n\r\n    \r\n    const getData = () =>{\r\n      axios.get(\"http://localhost:8080/payment/1/10/\"+id)\r\n        .then(res => {\r\n          console.log(res);\r\n          let list = res.data.list;\r\n          let user = res.data.user;\r\n          for(let i=0;i<list.length;i++){\r\n            for(let l=0;l<user.length;l++){\r\n              if(list[i].employee_no===user[l].no){\r\n                list[i].employee_no=user[l].name;\r\n              }\r\n            }\r\n          }\r\n          setInputs({\r\n            data: list,\r\n            page: res.data.page\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n          <CDataTable\r\n              items={data}\r\n              fields={fields}\r\n              itemsPerPage={10}\r\n              pagination\r\n              scopedSlots = {{\r\n                'title':\r\n                  (item)=>(\r\n                    <td>\r\n                      <Link to={`/payment/${item.no}`}> {item.title}</Link>\r\n                    </td>\r\n                  ),\r\n                  \r\n              }}\r\n            />\r\n        </div>\r\n    );\r\n} \r\nexport default PaymentData;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacation.js",["810","811","812","813","814","815"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\n\r\n\r\n\r\nlet fields = ['no', 'employee_no', 'day', 'name', '수정'];\r\nlet payselect = 1;\r\n\r\n\r\nconst Info = () => {\r\n  const [inputs, setInputs] = useState({\r\n    data: \"\",\r\n    employeeNo: \"\",\r\n    day: \"\",\r\n    name: \"\",\r\n    page: \"\",\r\n    open: \"\",\r\n    open2: \"\",\r\n    open3: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const { name,  open, open2, day, page, data, employeeNo, selected , open3 } = inputs;\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(\"http://localhost:8080/getVacation/1/10\")\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            day: list[i].day,\r\n            name: list[i].name,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page2\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  const handleClickOpen = () => {\r\n    setInputs({\r\n      open: true,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setInputs({\r\n      open: false,\r\n      open2: false,\r\n      open3: false,\r\n      page: page,\r\n      data: data\r\n    })\r\n  };\r\n\r\n  const insert = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Vacation',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: employeeNo,\r\n        day: day,\r\n        name: name\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const del = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendar/' + this.state.no,\r\n      method: \"DELETE\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        title: this.state.title,\r\n        start: this.state.start,\r\n        end: this.state.end,\r\n        color: this.state.color\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"삭제\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const update = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendars',\r\n      method: \"PUT\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        id: this.state.no,\r\n        title: this.state.title,\r\n        start: this.state.start,\r\n        end: this.state.end,\r\n        color: this.state.color,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  const makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    movePage(1, sel)\r\n  }\r\n  const pageChange = (selPage) => { //페이지 이동 클릭\r\n    movePage(selPage, page.cntPerPage)\r\n  }\r\n  const nextpage = () => { //다음 페이지\r\n    movePage(page.endPage + 1, page.cntPerPage)\r\n  }\r\n  const prevpage = () => { //이전 페이지\r\n    movePage(page.startPage - 1, page.cntPerPage)\r\n  }\r\n  const movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/getVacation/\" + nowpage + \"/\" + perpage;\r\n\r\n    axios.get(add)\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            day: list[i].day,\r\n            name: list[i].name,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        setInputs({\r\n          data: list,\r\n          page: page\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  const payment = () => {\r\n    let count = document.getElementsByName(\"check\").length;\r\n    let temp = [];\r\n    for (var i = 0; i < count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        for (var l = 0; l < data.length; l++) {\r\n          if (Number(data[l].no) === Number(document.getElementsByName(\"check\")[i].value)) {\r\n            console.log(1)\r\n            temp.push(data[l])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(temp)\r\n    setInputs({\r\n      open2: true,\r\n      page: page,\r\n      data: data,\r\n      selected: temp\r\n    })\r\n  }\r\n\r\n  const select = () => {\r\n    payselect *= -1;\r\n    let list = data;\r\n    setInputs({\r\n      data: list,\r\n      page: page\r\n    })\r\n  }\r\n\r\n  const vacationUse = () => {\r\n    setInputs({\r\n      open3: true,\r\n      page: page,\r\n      data: data,\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div align=\"right\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            추가하기\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={select}>\r\n            선택\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\" onClick={payment}>\r\n            결제\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={vacationUse}>\r\n            휴가 사용\r\n          </Button>\r\n        </div>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          <select id=\"cntPerPage\" name=\"sel\" onChange={() => { selChange() }}>\r\n            <option value=\"5\">5줄 보기</option>\r\n            <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n            <option value=\"15\">15줄 보기</option>\r\n            <option value=\"20\">20줄 보기</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <CDataTable\r\n            items={data}\r\n            fields={fields}\r\n            itemsPerPage={page.cntPerPage}\r\n            pagination\r\n            scopedSlots={{\r\n              '수정':\r\n                (item) => (\r\n                  <td>\r\n                    <a href=\"naver.com\">\r\n                      {item.수정}\r\n                    </a>\r\n                  </td>\r\n                ),\r\n              'no':\r\n                (item) => (\r\n                  <td>\r\n                    {payselect === 1 ?\r\n                      <div>\r\n                        {item.no}\r\n                      </div>\r\n                      :\r\n                      <div>\r\n                        <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                      </div>\r\n                    }\r\n                  </td>\r\n                ),\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <nav aria-label=\"pagination\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            {page.startPage !== 1 ?\r\n              <li onClick={() => prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n            {makeMap(page.startPage, page.endPage).map((i) => {\r\n              if (page.nowPage === i) {\r\n                return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n              } else {\r\n                return (<li onClick={() => pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n              }\r\n            })}\r\n            {page.endPage !== page.lastPage ? <li class=\"page-item\" onClick={() => nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n          </ul>\r\n        </nav>\r\n        <Dialog open={open2} onClose={handleClose}>\r\n          <DialogTitle>결제 하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <table>\r\n                  <th>no</th>\r\n                  <th>E_no</th>\r\n                  <th>day</th>\r\n                  <th>name</th>\r\n                  {selected && selected.map((i) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{i.no}</td>\r\n                        <td>{i.employee_no}</td>\r\n                        <td>{i.day}</td>\r\n                        <td>{i.name}</td>\r\n                      </tr>\r\n                    )\r\n                  })}\r\n                </table>\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>휴가 추가하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"day\" placeholder=\"일수\" value={day}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={open3} onClose={handleClose}>\r\n          <DialogTitle>휴가 추가하기</DialogTitle>\r\n          <DialogContent>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">User</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"employeeNo\" placeholder=\"이름\" value={employeeNo}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"day\" placeholder=\"일수\" value={day}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"내용\" value={name}\r\n                  onChange={onChange} />\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={insert}>추가</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Info;","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\vacation\\admin\\vacationApply.js",["816","817","818","819","820"],"import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport { CCol, CFormGroup, CInput, CLabel, CSelect } from '@coreui/react';\r\nimport axios from 'axios';\r\nimport {\r\n  CDataTable\r\n} from '@coreui/react'\r\nimport PaymentInsert from \"../../payment/insert/insert\"\r\n\r\n\r\nlet fields = ['no', 'employee_no', 'start_day', 'end_day', 'use_vacation' , 'day', '수정'];\r\nlet payselect = 1;\r\n\r\n\r\n\r\nexport default class Apply extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: \"\",\r\n      user: \"\",\r\n      day: \"\",\r\n      name: \"\",\r\n      page: \"\",\r\n      open: \"\",\r\n      open2: \"\",\r\n      open3: \"\",\r\n      title: \"\",\r\n      contents:\"\",\r\n      player:\"\",\r\n      paymentPlayer:1,\r\n      paymentPlayerArr: [1]\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n\r\n\r\n  getData = () => {\r\n    axios.get(\"http://localhost:8080/Vacation_apply/1/10\")\r\n      .then(res => {\r\n        console.log(res);\r\n        let list = res.data.list;\r\n        let page2 = res.data.page;\r\n        for (let i = 0; i < list.length; i++) {\r\n          let temp = {\r\n            no: list[i].no,\r\n            employee_no: list[i].employee_no,\r\n            start_day: list[i].start_day,\r\n            end_day: list[i].end_day,\r\n            use_vacation: list[i].use_vacation,\r\n            day: list[i].day,\r\n            수정: 1\r\n          }\r\n          list[i] = temp\r\n        }\r\n        console.log(list);\r\n        this.setState({\r\n          data: list,\r\n          page: page2,\r\n          user: res.data.user\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n      open2: false,\r\n      open3: false\r\n    })\r\n  };\r\n\r\n  insert = () => { \r\n    let count = document.getElementsByName(\"player\").length;\r\n    let playerTemp = \"\";\r\n    let kindsTemp = \"\";\r\n\r\n    for (var i = 0; i < count; i++) \r\n      playerTemp+=document.getElementsByName(\"player\")[i].value+\"/\"\r\n    for (var l=0;l<this.state.selected.length;l++){\r\n      kindsTemp += this.state.selected[l].no+\"/\"\r\n    }\r\n\r\n    axios({\r\n      url: 'http://localhost:8080/payment',\r\n      method: \"POST\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n        employee_no: window.sessionStorage.getItem(\"no\"),\r\n        player: playerTemp,\r\n        title: this.state.title,\r\n        contents: this.state.contents,\r\n        kinds: 1,\r\n        kinds_no: kindsTemp\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  del = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendar/' + this.state.no,\r\n      method: \"DELETE\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"삭제\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  update = () => {\r\n    axios({\r\n      url: 'http://localhost:8080/Calendars',\r\n      method: \"PUT\",\r\n      headers: { 'content-type': 'application/json' },\r\n      data: {\r\n \r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n        alert(\"등록완료\");\r\n        window.location.reload(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  };\r\n\r\n  makeMap = (start, end) => { //배열 만드는 함수\r\n    var result = [];\r\n    for (var i = start; i <= end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n\r\n   selChange = () => { //몇줄로 볼지 \r\n    var sel = document.getElementById('cntPerPage').value;\r\n    this.movePage(1, sel)\r\n  }\r\n   pageChange = (selPage) => { //페이지 이동 클릭\r\n    this.movePage(selPage, this.page.cntPerPage)\r\n  }\r\n   nextpage = () => { //다음 페이지\r\n    this.movePage(this.page.endPage + 1, this.page.cntPerPage)\r\n  }\r\n   prevpage = () => { //이전 페이지\r\n    this.movePage(this.page.startPage - 1, this.page.cntPerPage)\r\n  }\r\n   movePage = (nowpage, perpage) => { //페이지 이동\r\n    let add = \"http://localhost:8080/Vacation_apply/\" + nowpage + \"/\" + perpage;\r\n\r\n    axios.get(add)\r\n    .then(res => {\r\n      console.log(res);\r\n      let list = res.data.list;\r\n      let page2 = res.data.page;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let temp = {\r\n          no: list[i].no,\r\n          employee_no: list[i].employee_no,\r\n          start_day: list[i].start_day,\r\n          end_name: list[i].end_day,\r\n          use_vacation: list[i].use_vacation,\r\n          수정: 1\r\n        }\r\n        list[i] = temp\r\n      }\r\n      console.log(list);\r\n      this.setState({\r\n        data: list,\r\n        page: page2,\r\n        user: res.data.user\r\n      })\r\n    })\r\n    .catch(res => console.log(res))\r\n  }\r\n\r\n  payment = () => {\r\n    let count = document.getElementsByName(\"check\").length;\r\n    let temp = [];\r\n    \r\n    \r\n    for (var i = 0; i < count; i++) {\r\n      if (document.getElementsByName(\"check\")[i].checked === true) {\r\n        for (var l = 0; l < this.state.data.length; l++) {\r\n          if (Number(this.state.data[l].no) === Number(document.getElementsByName(\"check\")[i].value)) {\r\n            temp.push(this.state.data[l])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      open2: true,\r\n      selected: temp\r\n    })   \r\n  }\r\n\r\n   select = () => {\r\n    payselect *= -1;\r\n    let list = this.state.data;\r\n    this.setState({\r\n      data: list,\r\n    })\r\n  }\r\n\r\n\r\n\r\n  paymentPlayerAdd = () =>{\r\n    let index = this.state.paymentPlayer+1;\r\n    let temp =[];\r\n    for(var i=0;i<index;i++){\r\n      temp.push(i)\r\n    }\r\n    this.setState({\r\n      paymentPlayerArr: temp,\r\n      paymentPlayer: index,\r\n    })\r\n  }\r\n\r\n  paymentPlayerSub = () =>{\r\n    let index = this.state.paymentPlayer-1;\r\n    let temp =[];\r\n    for(var i=0;i<index;i++){\r\n      temp.push(i)\r\n    }\r\n    this.setState({\r\n      paymentPlayerArr: temp,\r\n      paymentPlayer: index,\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div align=\"right\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n              추가하기\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.select}>\r\n              선택\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.payment}>\r\n              결제\r\n            </Button>            \r\n          </div>\r\n  \r\n          <div style={{ float: \"right\" }}>\r\n            <select id=\"cntPerPage\" name=\"sel\" onChange={() => { this.selChange() }}>\r\n              <option value=\"5\">5줄 보기</option>\r\n              <option value=\"10\" selected=\"selected\">10줄 보기</option>\r\n              <option value=\"15\">15줄 보기</option>\r\n              <option value=\"20\">20줄 보기</option>\r\n            </select>\r\n          </div>\r\n  \r\n          <div>\r\n            <CDataTable\r\n              items={this.state.data}\r\n              fields={this.state.fields}\r\n              itemsPerPage={this.state.page.cntPerPage}\r\n              pagination\r\n              scopedSlots={{\r\n                '수정':\r\n                  (item) => (\r\n                    <td>\r\n                      <a href=\"naver.com\">\r\n                        {item.수정}\r\n                      </a>\r\n                    </td>\r\n                  ),\r\n                'no':\r\n                  (item) => (\r\n                    <td>\r\n                      {payselect === 1 ?\r\n                        <div>\r\n                          {item.no}\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                          <input type=\"checkbox\" name=\"check\" value={item.no} />\r\n                        </div>\r\n                      }\r\n                    </td>\r\n                  ),\r\n              }}\r\n            />\r\n          </div>\r\n  \r\n  \r\n          <nav aria-label=\"pagination\">\r\n            <ul class=\"pagination justify-content-center\">\r\n              {this.state.page.startPage !== 1 ?\r\n                <li onClick={() => this.prevpage()} class=\"page-item disabled\"><a class=\"disabled page-link\" aria-label=\"Go to previous page\" aria-disabled=\"true\">‹</a></li> : \"\"} {/*이전 */}\r\n              {this.makeMap(this.state.page.startPage, this.state.page.endPage).map((i) => {\r\n                if (this.state.page.nowPage === i) {\r\n                  return (<li class=\"active page-item\"><a class=\"page-link\" aria-label=\"Current page 1\">{i}</a></li>);\r\n                } else {\r\n                  return (<li onClick={() => this.pageChange(i)} class=\" page-item\"><a class=\"page-link\" aria-label=\"Go to page 2\">{i}</a></li>)\r\n                }\r\n              })}\r\n              {this.state.page.endPage !== this.state.page.lastPage ? <li class=\"page-item\" onClick={() => this.nextpage()}><a class=\"page-link\" aria-label=\"Go to next page\" aria-disabled=\"false\">›</a></li> : ''} {/*다음 */}\r\n            </ul>\r\n          </nav>\r\n          <Dialog open={this.state.open2} onClose={this.handleClose}>\r\n            <DialogTitle>결제 하기</DialogTitle>\r\n            <DialogContent>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">title</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"title\" placeholder=\"이름\" value={this.state.title}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">player</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                <div>\r\n                  <div>\r\n                    {this.state.paymentPlayerArr&&this.state.paymentPlayerArr.map((i)=>{\r\n                      return(\r\n                        <CSelect type=\"select\"name=\"player\" placeholder=\"결제할 사람\"  >\r\n                            <option value=\"\">선택</option>\r\n                            {this.state.user&&this.state.user.map((index,l)=>{\r\n                              return(\r\n                                <option value={index.no}>{index.no}. {index.name}</option>\r\n                              )\r\n                            })}\r\n                        </CSelect>\r\n                      )\r\n                    })}\r\n  \r\n                  </div>\r\n                  <button onClick={this.paymentPlayerAdd}>추가</button>\r\n                  <button onClick={this.paymentPlayerSub}>삭제</button>\r\n                </div>\r\n                  \r\n                  \r\n                </CCol>\r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">table</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <table border=\"1\">\r\n                    <th>no</th>\r\n                    <th>E_no</th>\r\n                    <th>start_day</th>\r\n                    <th>end_name</th>\r\n                    <th>use_vacation</th>\r\n                    <th>day</th>\r\n                    {this.state.selected && this.state.selected.map((i) => {\r\n                      return (\r\n                        <tr>\r\n                          <td>{i.no}</td>\r\n                          <td>{i.employee_no}</td>\r\n                          <td>{i.start_day}</td>\r\n                          <td>{i.end_day}</td>\r\n                          <td>{i.use_vacation}</td>\r\n                          <td>{i.day}</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </table>\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">contents</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"contents\" placeholder=\"내용\" value={this.state.contents}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <PaymentInsert kind={1} selected={this.state.selected} title={this.state.title} contents={this.state.contents}/>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n  \r\n          <Dialog open={this.state.open} onClose={this.handleClose}>\r\n            <DialogTitle>휴가 추가하기</DialogTitle>\r\n            <DialogContent>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">User</CLabel>\r\n                </CCol>\r\n             \r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"day\" placeholder=\"일수\" value={this.state.day}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"name\" placeholder=\"내용\" value={this.state.name}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.insert}>추가</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n  \r\n          <Dialog open={this.state.open3} onClose={this.handleClose}>\r\n            <DialogTitle>휴가 추가하기</DialogTitle>\r\n            <DialogContent>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">User</CLabel>\r\n                </CCol>\r\n              \r\n  \r\n              </CFormGroup>\r\n              <CFormGroup row>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">일수</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"day\" placeholder=\"일수\" value={this.state.day}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n                <CCol md=\"3\">\r\n                  <CLabel htmlFor=\"start_date\">내용</CLabel>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <CInput name=\"name\" placeholder=\"내용\" value={this.state.name}\r\n                    onChange={this.onChange} />\r\n                </CCol>\r\n              </CFormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={this.insert}>추가</Button>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js",["821"],"import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = \"http://localhost:8080/api\";\r\n\r\nclass ApiService {\r\n\r\n    Students(currentPage,Size) {\r\n        return axios.get(USER_API_BASE_URL + '/students' + \"?page=\" + currentPage + \"&size=\" + Size);\r\n    }\r\n\r\n  Student(no) {\r\n    console.log(\"!!!!!!!!!!!!!!!!!\" + no);\r\n    return axios.get(USER_API_BASE_URL + '/student/' + no);\r\n  }\r\n\r\n  addStudent(student) {\r\n    return axios.post(USER_API_BASE_URL + '/ins_stu', student);\r\n  }\r\n\r\n  deleteStudent(no) {\r\n    return axios.delete(USER_API_BASE_URL + '/' + no);\r\n  }\r\n\r\n  editStudent(student) {\r\n    return axios.post(USER_API_BASE_URL + '/edit_stu/' + student.no, student);\r\n  }\r\n\r\n  getEmployee(state) {\r\n    return axios.get(USER_API_BASE_URL +\r\n      '/employee?size=' + state.size +\r\n      '&page=' + (state.setCurrentPage - 1));\r\n  }\r\n\r\n  InsertEmployee(employee) {\r\n    return axios.post(USER_API_BASE_URL +\r\n      '/employee', employee);\r\n  }\r\n  standByAuth() {\r\n    return axios.get(USER_API_BASE_URL +\r\n      '/standByAuth');\r\n  }\r\n    StuAtt(name) {\r\n        return axios.get(USER_API_BASE_URL + '/stu_att/' + name);\r\n    }\r\n\r\n    Leclist() {\r\n        return axios.get(USER_API_BASE_URL + '/stu_att');\r\n    }\r\n\r\n    InsAtt(lec) {\r\n        console.log(\"?????\" + lec);\r\n        return axios.get(USER_API_BASE_URL + '/ins_att/' + lec);\r\n    }\r\n\r\n    Salary() {\r\n        return axios.get(USER_API_BASE_URL + '/salary');\r\n    }\r\n\r\n    SalaryEmp(no) {\r\n        return axios.get(USER_API_BASE_URL + '/salary_emp/' + no);\r\n    }\r\n\r\n    Teacher(no) {\r\n        return axios.get(USER_API_BASE_URL + '/lec_time/' + no);\r\n    }\r\n\r\n}\r\n\r\nexport default new ApiService();\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\events.js",["822"],"\r\nexport default [\r\n    {\r\n      id: 0,\r\n      title: \"All Day Event very long title\",\r\n      date: \"2021-02-05\"\r\n    }\r\n  ];\r\n  ","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar_view.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingRecord.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Calendar\\Calendar.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js",["823","824","825"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\payment\\insert\\insert.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingDelete.js",["826"],"import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {CCol} from \"@coreui/react\";\r\n\r\nclass CounselingDelete extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n\r\n    }\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleClickOpen() {\r\n      this.setState({\r\n        open: true\r\n      });\r\n  }\r\n\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      open: false\r\n    })\r\n\r\n  }\r\n\r\n\r\n  delete(id) {\r\n    const url = 'http://localhost:8080/counseling/' + id;\r\n    fetch(url, {\r\n      method: 'DELETE'\r\n    });\r\n    alert(\"삭제 되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon fontSize=\"small\" onClick={this.handleClickOpen}/>\r\n        </IconButton>\r\n        <Dialog onClose={this.handleClose} open={this.state.open}>\r\n          <DialogTitle onClose={this.handleClose}>\r\n            삭제 경고\r\n          </DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Typography gutterBottom>\r\n              선택한 정보가 삭제됩니다.\r\n            </Typography>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => {\r\n              this.delete(this.props.id)\r\n            }}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(CounselingDelete)\r\n\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\MainChartExample.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\counseling\\CounselingAdd.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Att_view.js",["827","828","829","830","831"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js",["832"],"import React from 'react'\r\nimport {CFormGroup, CInput} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\n\r\nclass ScoreTotal extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      student :this.props.id,\r\n      lecture :this.props.lecture,\r\n      totalScore:\"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/score-total?student=\"+this.props.id+\"&lecture=\"+this.props.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          totalScore: res.data.totalScore,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CInput\r\n                type=\"text\"\r\n                id=\"totalScore\"\r\n                name=\"totalScore\"\r\n                defaultValue={this.state.totalScore}\r\n                disabled={true}\r\n        />\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\nexport default ScoreTotal\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js",["833","834","835","836"],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js",["837"],"import React from 'react'\r\nimport {CFormGroup, CInput} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\n\r\nclass ScoreEdit extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      scoreList:\"\",\r\n      student :this.props.id,\r\n      lecture :this.props.lecture,\r\n      score:\"\",\r\n      exam:this.props.exam,\r\n      disabled:this.props.disabled,\r\n      no:\"\",\r\n    }\r\n\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.setScoreArray = this.setScoreArray.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/score?student=\"+this.props.id+\"&lecture=\"+this.props.lecture+\"&exam=\"+this.props.exam)\r\n\r\n      .then(res => {\r\n        this.setState({\r\n          scoreList : res.data.scoreList,\r\n          no : res.data.scoreList.no,\r\n          score : res.data.scoreList.score,\r\n        })\r\n\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n  handleNumChange(evt) {\r\n    const score = (evt.target.validity.valid) ? evt.target.value : this.state.score;\r\n    this.setState({ score });\r\n  }\r\n\r\n  setScoreArray(){\r\n    const scoreArray=[];\r\n    scoreArray.push({\r\n      student :this.state.student,\r\n      lecture :this.state.lecture,\r\n      score:this.state.score,\r\n      exam:this.state.exam,\r\n      no:this.state.no,\r\n    })\r\n    this.props.setData(scoreArray)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n            <CInput onBlur={(e) => {\r\n              this.setScoreArray();\r\n            }} name=\"score\"\r\n                    placeholder=\"점수\"\r\n                    pattern=\"[0-9]*\"\r\n                    value={this.state.score}\r\n                    disabled={this.props.disabled}\r\n                    onInput={this.handleNumChange.bind(this)}\r\n                    />\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\nexport default ScoreEdit\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Teacher\\events.js",["838"],"export default [\r\n    {\r\n      id: 0,\r\n      title: \"All Day Event very long title\",\r\n      date: \"2021-02-05\"\r\n    }\r\n  ];\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js",["839","840","841"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CButton, CCardHeader, CCol, CForm, CFormGroup, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, Grid, IconButton, Select, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExamAdd from \"./ExamAdd\";\r\nimport ExamUpdate from \"./ExamUpdate\";\r\nimport ExamDelete from \"./ExamDelete\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass Exam extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lectureList: \"\",\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n    }\r\n\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.lectureSelect = this.lectureSelect.bind(this);\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.id !== prevProps.id)\r\n    {\r\n      this.getDetail()\r\n    }\r\n  }\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/lecture/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getExam = () => {\r\n    axios.get(\"http://localhost:8080/exam?lecture=\"+this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getDetail = () => {\r\n    axios.get(\"http://localhost:8080/exam/\"+this.state.exam)\r\n      .then(res => {\r\n        if(res.data.list !== null){\r\n          this.setState({\r\n            partDetail: res.data.list,\r\n          })}else{this.setState({\r\n          partDetail:\"\",\r\n        })}\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      examList:\"\",\r\n      totalWeight:\"\",\r\n    })\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  stateRefresh() {\r\n    console.log(\"refresh\")\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      exam: \"\",\r\n      totalWeight:\"\",\r\n    });\r\n    this.getExam();\r\n    this.getDetail();\r\n\r\n  }\r\n\r\n  render() {\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state;\r\n    const {examDetail} = this.state;\r\n    const handleChangeMultiple = (event) => {\r\n      const {options} = event.target;\r\n      const value = [];\r\n      for (let i = 0, l = options.length; i < l; i += 1) {\r\n        if (options[i].selected) {\r\n          value.push(options[i].value);\r\n        }\r\n      }\r\n      axios.get(\"http://localhost:8080/exam/\"+ value)\r\n        .then(res => {\r\n          this.setState({\r\n            examDetail: res.data.list,\r\n            exam: value,\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    };\r\n    return (\r\n      <div>\r\n        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n          <CButton color=\"primary\" color=\"danger\" onClick={this.handleClickOpen}>시험항목 관리</CButton>\r\n        </CCol>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            시험항목 조회</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n                    <option value=\"\">강의</option>\r\n                    {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Button onClick={this.stateRefresh}>새로고침</Button>\r\n                </Grid>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <Select\r\n                    multiple\r\n                    native\r\n                    onChange={handleChangeMultiple} value={this.state.exam}\r\n\r\n                  >\r\n                    {examList && examList.map((itemdata, insertIndex) => {\r\n                      return (<option\r\n                        value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}&nbsp;({itemdata.weight}%)</option>);\r\n                    })}\r\n                  </Select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"6\">\r\n                    <CLabel>가중치 합계</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <p className=\"form-control-static\">{this.state.totalWeight}%</p>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </DialogContent>\r\n          {this.state.lecture !== \"\" &&\r\n          <DialogActions>\r\n            <ExamAdd stateRefresh={this.stateRefresh} lecture={this.state.lecture} teacher={this.state.teacher}/>\r\n            <ExamUpdate stateRefresh={this.stateRefresh} teacher={this.state.teacher} examDetail={examDetail}/>\r\n            <ExamDelete stateRefresh={this.stateRefresh} id={this.state.exam}/>\r\n          </DialogActions>\r\n          }\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Exam)\r\n\r\n\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js",["842","843","844"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CButton, CCol, CFormGroup, CInput, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, IconButton, Select, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RoomDelete from \"./RoomDelete\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass RoomUpdate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name: \"\",\r\n      branch:\"\",\r\n\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.updateRoom = this.updateRoom.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.branchSelect = this.branchSelect.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi()\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/lecture/branches\")\r\n      .then(res => {\r\n        this.setState({\r\n          branchList: res.data.list\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.updateRoom()\r\n    this.setState({\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name: \"\",\r\n      branch:\"\",\r\n    })\r\n    alert(\"수정되었습니다.\");\r\n    this.props.stateRefresh();\r\n    this.handleClose()\r\n    /*this.props.history.push('/lecture')*/\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n  handleNumChange(evt) {\r\n    var name = evt.target.name;\r\n    const num = (evt.target.validity.valid) ? evt.target.value : this.state[name];\r\n    this.setState({[evt.target.name]:num});\r\n  }\r\n  updateRoom() {\r\n    axios({\r\n      url: 'http://localhost:8080/room/' + this.props.roomDetail.no,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        branch: this.state.branch,\r\n        max_person: this.state.max_person,\r\n        name: this.state.name,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleClickOpen() {\r\n    if(this.props.roomDetail !== '') {\r\n      this.setState({\r\n        branch:this.props.roomDetail.branch,\r\n        max_person: this.props.roomDetail.max_person,\r\n        name: this.props.roomDetail.name,\r\n        open: true,\r\n      });\r\n    }else{\r\n      alert(\"수정항목을 선택하세요\")\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name:\"\",\r\n      branch:\"\",\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  branchSelect = (e) => {\r\n    this.setState({\r\n      branch: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {branchList} = this.state;\r\n\r\n    return (\r\n      <div>\r\n          <Button onClick={this.handleClickOpen}>수정</Button>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            강의실 수정</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.branchSelect} defaultValue={this.props.branch} disabled={true}>\r\n                    <option value=\"\">지점</option>\r\n                    {branchList && branchList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n            <CFormGroup>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"name\">강의실명</CLabel>\r\n                  <CInput type=\"text\" id=\"name\" name=\"name\" placeholder=\"강의실명\" defaultValue={this.props.roomDetail.name}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              </CRow>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CLabel htmlFor=\"name\">최대인원수</CLabel>\r\n                <CInput type=\"text\" id=\"max_person\" name=\"max_person\"\r\n                        pattern=\"[0-9]*\" placeholder=\"숫자만 입력가능\" value={this.state.max_person}\r\n                        onInput={this.handleNumChange.bind(this)}/>\r\n              </CCol>\r\n              </CRow>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>수정완료</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoomUpdate)\r\n\r\n\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js",["845","846"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CCol, CFormGroup, CInput, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, IconButton, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass RoomAdd extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name: \"\",\r\n      branch: \"\",\r\n\r\n    }\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.addRoom = this.addRoom.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.branchSelect = this.branchSelect.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/lecture/branches\")\r\n      .then(res => {\r\n        this.setState({\r\n          branchList: res.data.list\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.addRoom()\r\n    this.setState({\r\n      branch: '',\r\n      max_person: '',\r\n      name: '',\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.props.stateRefresh();\r\n    this.handleClose()\r\n    /*this.props.history.push('/lecture')*/\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n  handleNumChange(evt) {\r\n    var name = evt.target.name;\r\n    const num = (evt.target.validity.valid) ? evt.target.value : this.state[name];\r\n    this.setState({[evt.target.name]:num});\r\n  }\r\n  addRoom() {\r\n    axios({\r\n      url: 'http://localhost:8080/room',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        branch: this.state.branch,\r\n        max_person: this.state.max_person,\r\n        name: this.state.name,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      branch:this.props.branch,\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      branch: '',\r\n      max_person: '',\r\n      name: '',\r\n      roomList: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  branchSelect = (e) => {\r\n    this.setState({\r\n      branch: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {branchList} = this.state;\r\n    return (\r\n      <div>\r\n          <Button color=\"primary\" onClick={this.handleClickOpen}>추가</Button>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            강의실 등록</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.branchSelect} defaultValue={this.props.branch} >\r\n                    <option value=\"\">지점</option>\r\n                    {branchList && branchList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n            <CFormGroup>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"name\">강의실명</CLabel>\r\n                  <CInput type=\"text\" id=\"name\" name=\"name\" placeholder=\"강의실명\" value={this.state.name}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              </CRow>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CLabel htmlFor=\"name\">최대인원수</CLabel>\r\n                <CInput type=\"text\" id=\"max_person\" name=\"max_person\" pattern=\"[0-9]*\" placeholder=\"숫자만 입력가능\" value={this.state.max_person}\r\n                        onChange={this.handleNumChange.bind(this)}/>\r\n              </CCol>\r\n              </CRow>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>등록</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoomAdd)\r\n\r\n\r\n","C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js",[],"C:\\GitHub\\ERP2\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureSearch.js",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862"],{"ruleId":"863","replacedBy":"864"},{"ruleId":"865","replacedBy":"866"},{"ruleId":"867","severity":1,"message":"868","line":89,"column":12,"nodeType":"869","messageId":"870","endLine":89,"endColumn":13},{"ruleId":"871","severity":1,"message":"872","line":2,"column":8,"nodeType":"869","messageId":"873","endLine":2,"endColumn":24},{"ruleId":"874","severity":1,"message":"875","line":4,"column":1,"nodeType":"876","endLine":305,"endColumn":2},{"ruleId":"871","severity":1,"message":"877","line":13,"column":3,"nodeType":"869","messageId":"873","endLine":13,"endColumn":12},{"ruleId":"871","severity":1,"message":"878","line":1,"column":27,"nodeType":"869","messageId":"873","endLine":1,"endColumn":35},{"ruleId":"871","severity":1,"message":"879","line":3,"column":16,"nodeType":"869","messageId":"873","endLine":3,"endColumn":25},{"ruleId":"871","severity":1,"message":"880","line":3,"column":27,"nodeType":"869","messageId":"873","endLine":3,"endColumn":38},{"ruleId":"871","severity":1,"message":"881","line":4,"column":9,"nodeType":"869","messageId":"873","endLine":4,"endColumn":17},{"ruleId":"871","severity":1,"message":"882","line":30,"column":12,"nodeType":"869","messageId":"873","endLine":30,"endColumn":24},{"ruleId":"871","severity":1,"message":"882","line":21,"column":12,"nodeType":"869","messageId":"873","endLine":21,"endColumn":24},{"ruleId":"871","severity":1,"message":"883","line":21,"column":26,"nodeType":"869","messageId":"873","endLine":21,"endColumn":37},{"ruleId":"871","severity":1,"message":"884","line":21,"column":39,"nodeType":"869","messageId":"873","endLine":21,"endColumn":43},{"ruleId":"871","severity":1,"message":"885","line":5,"column":5,"nodeType":"869","messageId":"873","endLine":5,"endColumn":12},{"ruleId":"871","severity":1,"message":"886","line":11,"column":5,"nodeType":"869","messageId":"873","endLine":11,"endColumn":14},{"ruleId":"871","severity":1,"message":"887","line":12,"column":5,"nodeType":"869","messageId":"873","endLine":12,"endColumn":18},{"ruleId":"871","severity":1,"message":"888","line":13,"column":5,"nodeType":"869","messageId":"873","endLine":13,"endColumn":18},{"ruleId":"871","severity":1,"message":"889","line":14,"column":5,"nodeType":"869","messageId":"873","endLine":14,"endColumn":20},{"ruleId":"871","severity":1,"message":"890","line":15,"column":5,"nodeType":"869","messageId":"873","endLine":15,"endColumn":10},{"ruleId":"871","severity":1,"message":"891","line":19,"column":5,"nodeType":"869","messageId":"873","endLine":19,"endColumn":19},{"ruleId":"871","severity":1,"message":"892","line":20,"column":5,"nodeType":"869","messageId":"873","endLine":20,"endColumn":21},{"ruleId":"871","severity":1,"message":"893","line":21,"column":5,"nodeType":"869","messageId":"873","endLine":21,"endColumn":14},{"ruleId":"871","severity":1,"message":"894","line":23,"column":5,"nodeType":"869","messageId":"873","endLine":23,"endColumn":15},{"ruleId":"871","severity":1,"message":"895","line":24,"column":5,"nodeType":"869","messageId":"873","endLine":24,"endColumn":19},{"ruleId":"871","severity":1,"message":"896","line":25,"column":5,"nodeType":"869","messageId":"873","endLine":25,"endColumn":16},{"ruleId":"871","severity":1,"message":"897","line":26,"column":5,"nodeType":"869","messageId":"873","endLine":26,"endColumn":16},{"ruleId":"871","severity":1,"message":"898","line":27,"column":5,"nodeType":"869","messageId":"873","endLine":27,"endColumn":22},{"ruleId":"871","severity":1,"message":"899","line":28,"column":5,"nodeType":"869","messageId":"873","endLine":28,"endColumn":23},{"ruleId":"871","severity":1,"message":"900","line":29,"column":5,"nodeType":"869","messageId":"873","endLine":29,"endColumn":14},{"ruleId":"871","severity":1,"message":"901","line":30,"column":5,"nodeType":"869","messageId":"873","endLine":30,"endColumn":20},{"ruleId":"871","severity":1,"message":"902","line":34,"column":5,"nodeType":"869","messageId":"873","endLine":34,"endColumn":12},{"ruleId":"871","severity":1,"message":"903","line":36,"column":10,"nodeType":"869","messageId":"873","endLine":36,"endColumn":15},{"ruleId":"871","severity":1,"message":"886","line":13,"column":5,"nodeType":"869","messageId":"873","endLine":13,"endColumn":14},{"ruleId":"871","severity":1,"message":"887","line":14,"column":5,"nodeType":"869","messageId":"873","endLine":14,"endColumn":18},{"ruleId":"871","severity":1,"message":"888","line":15,"column":5,"nodeType":"869","messageId":"873","endLine":15,"endColumn":18},{"ruleId":"871","severity":1,"message":"889","line":16,"column":5,"nodeType":"869","messageId":"873","endLine":16,"endColumn":20},{"ruleId":"871","severity":1,"message":"890","line":17,"column":5,"nodeType":"869","messageId":"873","endLine":17,"endColumn":10},{"ruleId":"871","severity":1,"message":"877","line":20,"column":5,"nodeType":"869","messageId":"873","endLine":20,"endColumn":14},{"ruleId":"871","severity":1,"message":"891","line":21,"column":5,"nodeType":"869","messageId":"873","endLine":21,"endColumn":19},{"ruleId":"871","severity":1,"message":"892","line":22,"column":5,"nodeType":"869","messageId":"873","endLine":22,"endColumn":21},{"ruleId":"871","severity":1,"message":"893","line":23,"column":5,"nodeType":"869","messageId":"873","endLine":23,"endColumn":14},{"ruleId":"871","severity":1,"message":"894","line":25,"column":5,"nodeType":"869","messageId":"873","endLine":25,"endColumn":15},{"ruleId":"871","severity":1,"message":"895","line":26,"column":5,"nodeType":"869","messageId":"873","endLine":26,"endColumn":19},{"ruleId":"871","severity":1,"message":"896","line":27,"column":5,"nodeType":"869","messageId":"873","endLine":27,"endColumn":16},{"ruleId":"871","severity":1,"message":"897","line":28,"column":5,"nodeType":"869","messageId":"873","endLine":28,"endColumn":16},{"ruleId":"871","severity":1,"message":"898","line":29,"column":5,"nodeType":"869","messageId":"873","endLine":29,"endColumn":22},{"ruleId":"871","severity":1,"message":"899","line":30,"column":5,"nodeType":"869","messageId":"873","endLine":30,"endColumn":23},{"ruleId":"871","severity":1,"message":"900","line":31,"column":5,"nodeType":"869","messageId":"873","endLine":31,"endColumn":14},{"ruleId":"871","severity":1,"message":"901","line":32,"column":5,"nodeType":"869","messageId":"873","endLine":32,"endColumn":20},{"ruleId":"871","severity":1,"message":"902","line":36,"column":5,"nodeType":"869","messageId":"873","endLine":36,"endColumn":12},{"ruleId":"871","severity":1,"message":"904","line":10,"column":5,"nodeType":"869","messageId":"873","endLine":10,"endColumn":16},{"ruleId":"871","severity":1,"message":"886","line":13,"column":5,"nodeType":"869","messageId":"873","endLine":13,"endColumn":14},{"ruleId":"871","severity":1,"message":"887","line":14,"column":5,"nodeType":"869","messageId":"873","endLine":14,"endColumn":18},{"ruleId":"871","severity":1,"message":"888","line":15,"column":5,"nodeType":"869","messageId":"873","endLine":15,"endColumn":18},{"ruleId":"871","severity":1,"message":"889","line":16,"column":5,"nodeType":"869","messageId":"873","endLine":16,"endColumn":20},{"ruleId":"871","severity":1,"message":"890","line":17,"column":5,"nodeType":"869","messageId":"873","endLine":17,"endColumn":10},{"ruleId":"871","severity":1,"message":"877","line":20,"column":5,"nodeType":"869","messageId":"873","endLine":20,"endColumn":14},{"ruleId":"871","severity":1,"message":"891","line":21,"column":5,"nodeType":"869","messageId":"873","endLine":21,"endColumn":19},{"ruleId":"871","severity":1,"message":"892","line":22,"column":5,"nodeType":"869","messageId":"873","endLine":22,"endColumn":21},{"ruleId":"871","severity":1,"message":"893","line":23,"column":5,"nodeType":"869","messageId":"873","endLine":23,"endColumn":14},{"ruleId":"871","severity":1,"message":"905","line":24,"column":5,"nodeType":"869","messageId":"873","endLine":24,"endColumn":11},{"ruleId":"871","severity":1,"message":"894","line":25,"column":5,"nodeType":"869","messageId":"873","endLine":25,"endColumn":15},{"ruleId":"871","severity":1,"message":"895","line":26,"column":5,"nodeType":"869","messageId":"873","endLine":26,"endColumn":19},{"ruleId":"871","severity":1,"message":"896","line":27,"column":5,"nodeType":"869","messageId":"873","endLine":27,"endColumn":16},{"ruleId":"871","severity":1,"message":"897","line":28,"column":5,"nodeType":"869","messageId":"873","endLine":28,"endColumn":16},{"ruleId":"871","severity":1,"message":"898","line":29,"column":5,"nodeType":"869","messageId":"873","endLine":29,"endColumn":22},{"ruleId":"871","severity":1,"message":"899","line":30,"column":5,"nodeType":"869","messageId":"873","endLine":30,"endColumn":23},{"ruleId":"871","severity":1,"message":"900","line":31,"column":5,"nodeType":"869","messageId":"873","endLine":31,"endColumn":14},{"ruleId":"871","severity":1,"message":"901","line":32,"column":5,"nodeType":"869","messageId":"873","endLine":32,"endColumn":20},{"ruleId":"871","severity":1,"message":"906","line":34,"column":5,"nodeType":"869","messageId":"873","endLine":34,"endColumn":12},{"ruleId":"871","severity":1,"message":"902","line":36,"column":5,"nodeType":"869","messageId":"873","endLine":36,"endColumn":12},{"ruleId":"871","severity":1,"message":"903","line":38,"column":10,"nodeType":"869","messageId":"873","endLine":38,"endColumn":15},{"ruleId":"871","severity":1,"message":"881","line":39,"column":12,"nodeType":"869","messageId":"873","endLine":39,"endColumn":20},{"ruleId":"871","severity":1,"message":"907","line":4,"column":10,"nodeType":"869","messageId":"873","endLine":4,"endColumn":14},{"ruleId":"871","severity":1,"message":"881","line":5,"column":10,"nodeType":"869","messageId":"873","endLine":5,"endColumn":18},{"ruleId":"871","severity":1,"message":"908","line":8,"column":5,"nodeType":"869","messageId":"873","endLine":8,"endColumn":10},{"ruleId":"871","severity":1,"message":"879","line":9,"column":5,"nodeType":"869","messageId":"873","endLine":9,"endColumn":14},{"ruleId":"871","severity":1,"message":"904","line":10,"column":5,"nodeType":"869","messageId":"873","endLine":10,"endColumn":16},{"ruleId":"871","severity":1,"message":"880","line":11,"column":5,"nodeType":"869","messageId":"873","endLine":11,"endColumn":16},{"ruleId":"871","severity":1,"message":"886","line":13,"column":5,"nodeType":"869","messageId":"873","endLine":13,"endColumn":14},{"ruleId":"871","severity":1,"message":"887","line":14,"column":5,"nodeType":"869","messageId":"873","endLine":14,"endColumn":18},{"ruleId":"871","severity":1,"message":"888","line":15,"column":5,"nodeType":"869","messageId":"873","endLine":15,"endColumn":18},{"ruleId":"871","severity":1,"message":"889","line":16,"column":5,"nodeType":"869","messageId":"873","endLine":16,"endColumn":20},{"ruleId":"871","severity":1,"message":"890","line":17,"column":5,"nodeType":"869","messageId":"873","endLine":17,"endColumn":10},{"ruleId":"871","severity":1,"message":"909","line":18,"column":5,"nodeType":"869","messageId":"873","endLine":18,"endColumn":10},{"ruleId":"871","severity":1,"message":"877","line":20,"column":5,"nodeType":"869","messageId":"873","endLine":20,"endColumn":14},{"ruleId":"871","severity":1,"message":"891","line":21,"column":5,"nodeType":"869","messageId":"873","endLine":21,"endColumn":19},{"ruleId":"871","severity":1,"message":"892","line":22,"column":5,"nodeType":"869","messageId":"873","endLine":22,"endColumn":21},{"ruleId":"871","severity":1,"message":"893","line":23,"column":5,"nodeType":"869","messageId":"873","endLine":23,"endColumn":14},{"ruleId":"871","severity":1,"message":"905","line":24,"column":5,"nodeType":"869","messageId":"873","endLine":24,"endColumn":11},{"ruleId":"871","severity":1,"message":"894","line":25,"column":5,"nodeType":"869","messageId":"873","endLine":25,"endColumn":15},{"ruleId":"871","severity":1,"message":"895","line":26,"column":5,"nodeType":"869","messageId":"873","endLine":26,"endColumn":19},{"ruleId":"871","severity":1,"message":"897","line":28,"column":5,"nodeType":"869","messageId":"873","endLine":28,"endColumn":16},{"ruleId":"871","severity":1,"message":"898","line":29,"column":5,"nodeType":"869","messageId":"873","endLine":29,"endColumn":22},{"ruleId":"871","severity":1,"message":"899","line":30,"column":5,"nodeType":"869","messageId":"873","endLine":30,"endColumn":23},{"ruleId":"871","severity":1,"message":"900","line":31,"column":5,"nodeType":"869","messageId":"873","endLine":31,"endColumn":14},{"ruleId":"871","severity":1,"message":"901","line":32,"column":5,"nodeType":"869","messageId":"873","endLine":32,"endColumn":20},{"ruleId":"871","severity":1,"message":"906","line":34,"column":5,"nodeType":"869","messageId":"873","endLine":34,"endColumn":12},{"ruleId":"871","severity":1,"message":"910","line":35,"column":5,"nodeType":"869","messageId":"873","endLine":35,"endColumn":9},{"ruleId":"871","severity":1,"message":"902","line":36,"column":5,"nodeType":"869","messageId":"873","endLine":36,"endColumn":12},{"ruleId":"871","severity":1,"message":"911","line":39,"column":8,"nodeType":"869","messageId":"873","endLine":39,"endColumn":15},{"ruleId":"871","severity":1,"message":"878","line":1,"column":26,"nodeType":"869","messageId":"873","endLine":1,"endColumn":34},{"ruleId":"871","severity":1,"message":"912","line":13,"column":8,"nodeType":"869","messageId":"873","endLine":13,"endColumn":18},{"ruleId":"913","severity":1,"message":"914","line":57,"column":45,"nodeType":"915","messageId":"916","endLine":57,"endColumn":47},{"ruleId":"913","severity":1,"message":"914","line":58,"column":40,"nodeType":"915","messageId":"916","endLine":58,"endColumn":42},{"ruleId":"917","severity":1,"message":"918","line":59,"column":13,"nodeType":"919","endLine":59,"endColumn":23},{"ruleId":"913","severity":1,"message":"920","line":62,"column":53,"nodeType":"915","messageId":"916","endLine":62,"endColumn":55},{"ruleId":"871","severity":1,"message":"907","line":3,"column":10,"nodeType":"869","messageId":"873","endLine":3,"endColumn":14},{"ruleId":"871","severity":1,"message":"904","line":10,"column":5,"nodeType":"869","messageId":"873","endLine":10,"endColumn":16},{"ruleId":"871","severity":1,"message":"886","line":13,"column":5,"nodeType":"869","messageId":"873","endLine":13,"endColumn":14},{"ruleId":"871","severity":1,"message":"887","line":14,"column":5,"nodeType":"869","messageId":"873","endLine":14,"endColumn":18},{"ruleId":"871","severity":1,"message":"888","line":15,"column":5,"nodeType":"869","messageId":"873","endLine":15,"endColumn":18},{"ruleId":"871","severity":1,"message":"889","line":16,"column":5,"nodeType":"869","messageId":"873","endLine":16,"endColumn":20},{"ruleId":"871","severity":1,"message":"890","line":17,"column":5,"nodeType":"869","messageId":"873","endLine":17,"endColumn":10},{"ruleId":"871","severity":1,"message":"891","line":21,"column":5,"nodeType":"869","messageId":"873","endLine":21,"endColumn":19},{"ruleId":"871","severity":1,"message":"892","line":22,"column":5,"nodeType":"869","messageId":"873","endLine":22,"endColumn":21},{"ruleId":"871","severity":1,"message":"893","line":23,"column":5,"nodeType":"869","messageId":"873","endLine":23,"endColumn":14},{"ruleId":"871","severity":1,"message":"894","line":25,"column":5,"nodeType":"869","messageId":"873","endLine":25,"endColumn":15},{"ruleId":"871","severity":1,"message":"895","line":26,"column":5,"nodeType":"869","messageId":"873","endLine":26,"endColumn":19},{"ruleId":"871","severity":1,"message":"896","line":27,"column":5,"nodeType":"869","messageId":"873","endLine":27,"endColumn":16},{"ruleId":"871","severity":1,"message":"897","line":28,"column":5,"nodeType":"869","messageId":"873","endLine":28,"endColumn":16},{"ruleId":"871","severity":1,"message":"898","line":29,"column":5,"nodeType":"869","messageId":"873","endLine":29,"endColumn":22},{"ruleId":"871","severity":1,"message":"899","line":30,"column":5,"nodeType":"869","messageId":"873","endLine":30,"endColumn":23},{"ruleId":"871","severity":1,"message":"900","line":31,"column":5,"nodeType":"869","messageId":"873","endLine":31,"endColumn":14},{"ruleId":"871","severity":1,"message":"901","line":32,"column":5,"nodeType":"869","messageId":"873","endLine":32,"endColumn":20},{"ruleId":"871","severity":1,"message":"902","line":36,"column":5,"nodeType":"869","messageId":"873","endLine":36,"endColumn":12},{"ruleId":"871","severity":1,"message":"907","line":3,"column":10,"nodeType":"869","messageId":"873","endLine":3,"endColumn":14},{"ruleId":"871","severity":1,"message":"881","line":5,"column":10,"nodeType":"869","messageId":"873","endLine":5,"endColumn":18},{"ruleId":"871","severity":1,"message":"908","line":8,"column":5,"nodeType":"869","messageId":"873","endLine":8,"endColumn":10},{"ruleId":"871","severity":1,"message":"879","line":9,"column":5,"nodeType":"869","messageId":"873","endLine":9,"endColumn":14},{"ruleId":"871","severity":1,"message":"880","line":10,"column":5,"nodeType":"869","messageId":"873","endLine":10,"endColumn":16},{"ruleId":"871","severity":1,"message":"921","line":11,"column":5,"nodeType":"869","messageId":"873","endLine":11,"endColumn":16},{"ruleId":"871","severity":1,"message":"886","line":13,"column":5,"nodeType":"869","messageId":"873","endLine":13,"endColumn":14},{"ruleId":"871","severity":1,"message":"887","line":14,"column":5,"nodeType":"869","messageId":"873","endLine":14,"endColumn":18},{"ruleId":"871","severity":1,"message":"888","line":15,"column":5,"nodeType":"869","messageId":"873","endLine":15,"endColumn":18},{"ruleId":"871","severity":1,"message":"889","line":16,"column":5,"nodeType":"869","messageId":"873","endLine":16,"endColumn":20},{"ruleId":"871","severity":1,"message":"890","line":17,"column":5,"nodeType":"869","messageId":"873","endLine":17,"endColumn":10},{"ruleId":"871","severity":1,"message":"877","line":20,"column":5,"nodeType":"869","messageId":"873","endLine":20,"endColumn":14},{"ruleId":"871","severity":1,"message":"891","line":21,"column":5,"nodeType":"869","messageId":"873","endLine":21,"endColumn":19},{"ruleId":"871","severity":1,"message":"892","line":22,"column":5,"nodeType":"869","messageId":"873","endLine":22,"endColumn":21},{"ruleId":"871","severity":1,"message":"893","line":23,"column":5,"nodeType":"869","messageId":"873","endLine":23,"endColumn":14},{"ruleId":"871","severity":1,"message":"894","line":25,"column":5,"nodeType":"869","messageId":"873","endLine":25,"endColumn":15},{"ruleId":"871","severity":1,"message":"895","line":26,"column":5,"nodeType":"869","messageId":"873","endLine":26,"endColumn":19},{"ruleId":"871","severity":1,"message":"896","line":27,"column":5,"nodeType":"869","messageId":"873","endLine":27,"endColumn":16},{"ruleId":"871","severity":1,"message":"897","line":28,"column":5,"nodeType":"869","messageId":"873","endLine":28,"endColumn":16},{"ruleId":"871","severity":1,"message":"898","line":29,"column":5,"nodeType":"869","messageId":"873","endLine":29,"endColumn":22},{"ruleId":"871","severity":1,"message":"899","line":30,"column":5,"nodeType":"869","messageId":"873","endLine":30,"endColumn":23},{"ruleId":"871","severity":1,"message":"900","line":31,"column":5,"nodeType":"869","messageId":"873","endLine":31,"endColumn":14},{"ruleId":"871","severity":1,"message":"901","line":32,"column":5,"nodeType":"869","messageId":"873","endLine":32,"endColumn":20},{"ruleId":"871","severity":1,"message":"906","line":34,"column":5,"nodeType":"869","messageId":"873","endLine":34,"endColumn":12},{"ruleId":"871","severity":1,"message":"902","line":36,"column":5,"nodeType":"869","messageId":"873","endLine":36,"endColumn":12},{"ruleId":"871","severity":1,"message":"922","line":6,"column":8,"nodeType":"869","messageId":"873","endLine":6,"endColumn":14},{"ruleId":"917","severity":1,"message":"918","line":34,"column":15,"nodeType":"919","endLine":34,"endColumn":29},{"ruleId":"871","severity":1,"message":"923","line":13,"column":7,"nodeType":"869","messageId":"873","endLine":13,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":172,"column":32,"nodeType":"926","messageId":"927","endLine":172,"endColumn":34},{"ruleId":"871","severity":1,"message":"895","line":10,"column":35,"nodeType":"869","messageId":"873","endLine":10,"endColumn":49},{"ruleId":"871","severity":1,"message":"928","line":114,"column":9,"nodeType":"869","messageId":"873","endLine":114,"endColumn":14},{"ruleId":"929","severity":1,"message":"930","line":165,"column":47,"nodeType":"915","messageId":"931","endLine":165,"endColumn":48},{"ruleId":"871","severity":1,"message":"923","line":11,"column":7,"nodeType":"869","messageId":"873","endLine":11,"endColumn":16},{"ruleId":"871","severity":1,"message":"905","line":4,"column":27,"nodeType":"869","messageId":"873","endLine":4,"endColumn":33},{"ruleId":"871","severity":1,"message":"932","line":21,"column":19,"nodeType":"869","messageId":"873","endLine":21,"endColumn":23},{"ruleId":"871","severity":1,"message":"933","line":22,"column":11,"nodeType":"869","messageId":"873","endLine":22,"endColumn":19},{"ruleId":"934","severity":1,"message":"935","line":28,"column":8,"nodeType":"936","endLine":28,"endColumn":10,"suggestions":"937"},{"ruleId":"934","severity":1,"message":"935","line":28,"column":8,"nodeType":"936","endLine":28,"endColumn":10,"suggestions":"938"},{"ruleId":"871","severity":1,"message":"933","line":92,"column":11,"nodeType":"869","messageId":"873","endLine":92,"endColumn":19},{"ruleId":"939","severity":1,"message":"940","line":22,"column":37,"nodeType":"941","endLine":22,"endColumn":39},{"ruleId":"942","severity":1,"message":"943","line":264,"column":73,"nodeType":"944","endLine":264,"endColumn":157},{"ruleId":"942","severity":1,"message":"943","line":267,"column":54,"nodeType":"944","endLine":267,"endColumn":103},{"ruleId":"942","severity":1,"message":"943","line":269,"column":78,"nodeType":"944","endLine":269,"endColumn":125},{"ruleId":"942","severity":1,"message":"943","line":272,"column":96,"nodeType":"944","endLine":272,"endColumn":168},{"ruleId":"871","severity":1,"message":"932","line":22,"column":19,"nodeType":"869","messageId":"873","endLine":22,"endColumn":23},{"ruleId":"871","severity":1,"message":"933","line":23,"column":11,"nodeType":"869","messageId":"873","endLine":23,"endColumn":19},{"ruleId":"871","severity":1,"message":"945","line":113,"column":9,"nodeType":"869","messageId":"873","endLine":113,"endColumn":12},{"ruleId":"871","severity":1,"message":"946","line":135,"column":9,"nodeType":"869","messageId":"873","endLine":135,"endColumn":15},{"ruleId":"942","severity":1,"message":"943","line":312,"column":73,"nodeType":"944","endLine":312,"endColumn":157},{"ruleId":"942","severity":1,"message":"943","line":315,"column":54,"nodeType":"944","endLine":315,"endColumn":103},{"ruleId":"942","severity":1,"message":"943","line":317,"column":78,"nodeType":"944","endLine":317,"endColumn":125},{"ruleId":"942","severity":1,"message":"943","line":320,"column":96,"nodeType":"944","endLine":320,"endColumn":168},{"ruleId":"871","severity":1,"message":"947","line":17,"column":5,"nodeType":"869","messageId":"873","endLine":17,"endColumn":11},{"ruleId":"942","severity":1,"message":"943","line":337,"column":80,"nodeType":"944","endLine":337,"endColumn":164},{"ruleId":"942","severity":1,"message":"943","line":340,"column":56,"nodeType":"944","endLine":340,"endColumn":105},{"ruleId":"942","severity":1,"message":"943","line":342,"column":85,"nodeType":"944","endLine":342,"endColumn":132},{"ruleId":"942","severity":1,"message":"943","line":345,"column":125,"nodeType":"944","endLine":345,"endColumn":197},{"ruleId":"929","severity":1,"message":"930","line":8,"column":58,"nodeType":"915","messageId":"931","endLine":8,"endColumn":59},{"ruleId":"874","severity":1,"message":"875","line":2,"column":1,"nodeType":"876","endLine":8,"endColumn":5},{"ruleId":"913","severity":1,"message":"920","line":96,"column":31,"nodeType":"915","messageId":"916","endLine":96,"endColumn":33},{"ruleId":"913","severity":1,"message":"920","line":97,"column":30,"nodeType":"915","messageId":"916","endLine":97,"endColumn":32},{"ruleId":"913","severity":1,"message":"920","line":98,"column":30,"nodeType":"915","messageId":"916","endLine":98,"endColumn":32},{"ruleId":"871","severity":1,"message":"948","line":11,"column":9,"nodeType":"869","messageId":"873","endLine":11,"endColumn":13},{"ruleId":"871","severity":1,"message":"878","line":1,"column":27,"nodeType":"869","messageId":"873","endLine":1,"endColumn":35},{"ruleId":"942","severity":1,"message":"943","line":372,"column":82,"nodeType":"944","endLine":372,"endColumn":166},{"ruleId":"942","severity":1,"message":"943","line":375,"column":57,"nodeType":"944","endLine":375,"endColumn":106},{"ruleId":"942","severity":1,"message":"943","line":377,"column":86,"nodeType":"944","endLine":377,"endColumn":133},{"ruleId":"942","severity":1,"message":"943","line":380,"column":105,"nodeType":"944","endLine":380,"endColumn":177},{"ruleId":"871","severity":1,"message":"949","line":2,"column":9,"nodeType":"869","messageId":"873","endLine":2,"endColumn":19},{"ruleId":"942","severity":1,"message":"943","line":559,"column":82,"nodeType":"944","endLine":559,"endColumn":166},{"ruleId":"942","severity":1,"message":"943","line":562,"column":57,"nodeType":"944","endLine":562,"endColumn":106},{"ruleId":"942","severity":1,"message":"943","line":564,"column":86,"nodeType":"944","endLine":564,"endColumn":133},{"ruleId":"942","severity":1,"message":"943","line":567,"column":105,"nodeType":"944","endLine":567,"endColumn":177},{"ruleId":"871","severity":1,"message":"949","line":2,"column":9,"nodeType":"869","messageId":"873","endLine":2,"endColumn":19},{"ruleId":"874","severity":1,"message":"875","line":1,"column":1,"nodeType":"876","endLine":7,"endColumn":5},{"ruleId":"871","severity":1,"message":"880","line":4,"column":18,"nodeType":"869","messageId":"873","endLine":4,"endColumn":29},{"ruleId":"871","severity":1,"message":"909","line":4,"column":37,"nodeType":"869","messageId":"873","endLine":4,"endColumn":42},{"ruleId":"950","severity":1,"message":"951","line":206,"column":36,"nodeType":"952","endLine":206,"endColumn":50},{"ruleId":"871","severity":1,"message":"885","line":4,"column":9,"nodeType":"869","messageId":"873","endLine":4,"endColumn":16},{"ruleId":"871","severity":1,"message":"953","line":10,"column":29,"nodeType":"869","messageId":"873","endLine":10,"endColumn":35},{"ruleId":"871","severity":1,"message":"954","line":12,"column":8,"nodeType":"869","messageId":"873","endLine":12,"endColumn":18},{"ruleId":"871","severity":1,"message":"955","line":12,"column":8,"nodeType":"869","messageId":"873","endLine":12,"endColumn":16},{"ruleId":"871","severity":1,"message":"956","line":13,"column":8,"nodeType":"869","messageId":"873","endLine":13,"endColumn":12},{"ruleId":"871","severity":1,"message":"957","line":2,"column":8,"nodeType":"869","messageId":"873","endLine":2,"endColumn":13},{"ruleId":"871","severity":1,"message":"958","line":3,"column":9,"nodeType":"869","messageId":"873","endLine":3,"endColumn":15},{"ruleId":"871","severity":1,"message":"959","line":3,"column":17,"nodeType":"869","messageId":"873","endLine":3,"endColumn":23},{"ruleId":"871","severity":1,"message":"960","line":3,"column":25,"nodeType":"869","messageId":"873","endLine":3,"endColumn":38},{"ruleId":"871","severity":1,"message":"961","line":3,"column":40,"nodeType":"869","messageId":"873","endLine":3,"endColumn":53},{"ruleId":"871","severity":1,"message":"962","line":3,"column":55,"nodeType":"869","messageId":"873","endLine":3,"endColumn":66},{"ruleId":"871","severity":1,"message":"963","line":3,"column":68,"nodeType":"869","messageId":"873","endLine":3,"endColumn":77},{"ruleId":"871","severity":1,"message":"964","line":3,"column":79,"nodeType":"869","messageId":"873","endLine":3,"endColumn":89},{"ruleId":"871","severity":1,"message":"948","line":6,"column":3,"nodeType":"869","messageId":"873","endLine":6,"endColumn":7},{"ruleId":"871","severity":1,"message":"949","line":8,"column":3,"nodeType":"869","messageId":"873","endLine":8,"endColumn":13},{"ruleId":"871","severity":1,"message":"895","line":10,"column":3,"nodeType":"869","messageId":"873","endLine":10,"endColumn":17},{"ruleId":"871","severity":1,"message":"965","line":11,"column":3,"nodeType":"869","messageId":"873","endLine":11,"endColumn":9},{"ruleId":"871","severity":1,"message":"910","line":13,"column":3,"nodeType":"869","messageId":"873","endLine":13,"endColumn":7},{"ruleId":"871","severity":1,"message":"906","line":14,"column":3,"nodeType":"869","messageId":"873","endLine":14,"endColumn":10},{"ruleId":"871","severity":1,"message":"903","line":16,"column":8,"nodeType":"869","messageId":"873","endLine":16,"endColumn":13},{"ruleId":"871","severity":1,"message":"966","line":17,"column":9,"nodeType":"869","messageId":"873","endLine":17,"endColumn":17},"no-native-reassign",["967"],"no-negated-in-lhs",["968"],"no-redeclare","'i' is already defined.","Identifier","redeclared","no-unused-vars","'RegisterEmployee' is defined but never used.","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'CFormText' is defined but never used.","'useState' is defined but never used.","'CCardBody' is defined but never used.","'CCardHeader' is defined but never used.","'DocsLink' is defined but never used.","'employeeList' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'size' is assigned a value but never used.","'CButton' is defined but never used.","'CCollapse' is defined but never used.","'CDropdownItem' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownToggle' is defined but never used.","'CFade' is defined but never used.","'CValidFeedback' is defined but never used.","'CInvalidFeedback' is defined but never used.","'CTextarea' is defined but never used.","'CInputFile' is defined but never used.","'CInputCheckbox' is defined but never used.","'CInputRadio' is defined but never used.","'CInputGroup' is defined but never used.","'CInputGroupAppend' is defined but never used.","'CInputGroupPrepend' is defined but never used.","'CDropdown' is defined but never used.","'CInputGroupText' is defined but never used.","'CSwitch' is defined but never used.","'CIcon' is defined but never used.","'CCardFooter' is defined but never used.","'CInput' is defined but never used.","'CSelect' is defined but never used.","'Link' is defined but never used.","'CCard' is defined but never used.","'CForm' is defined but never used.","'CRow' is defined but never used.","'Lecture' is defined but never used.","'Pagination' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Expected '===' and instead saw '=='.","'CPagination' is defined but never used.","'events' is defined but never used.","'useStyles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'route' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'page' is assigned a value but never used.","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["969"],["970"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'del' is assigned a value but never used.","'update' is assigned a value but never used.","'fields' is assigned a value but never used.","'CCol' is defined but never used.","'CFormGroup' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Select' is defined but never used.","'RoomDelete' is defined but never used.","'SaveIcon' is defined but never used.","'Icon' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","'withStyles' is defined but never used.","'CLabel' is defined but never used.","'cilAlarm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"971","fix":"972"},{"desc":"971","fix":"973"},"Update the dependencies array to be: [getData]",{"range":"974","text":"975"},{"range":"976","text":"975"},[504,506],"[getData]",[491,493]]
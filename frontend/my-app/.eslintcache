[{"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\index.js":"1","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\App.js":"2","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js":"3","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js":"4","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\store.js":"5","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js":"6","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js":"7","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js":"8","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js":"9","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js":"10","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\login\\Login.js":"11","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js":"12","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js":"13","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js":"14","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js":"15","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js":"16","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js":"17","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js":"18","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js":"19","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js":"20","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js":"21","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js":"22","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js":"23","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js":"24","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js":"25","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js":"26","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js":"27","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js":"28","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js":"29","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js":"30","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js":"31","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js":"32","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js":"33","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js":"34","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js":"35","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js":"36","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js":"37","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js":"38","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js":"39","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js":"40","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js":"41","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js":"42","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js":"43","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js":"44","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js":"45","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js":"46","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js":"47","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js":"48","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js":"49","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js":"50","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js":"51","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js":"52","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js":"53","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js":"54","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js":"55","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\dashboard\\Dashboard.js":"56","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js":"57","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js":"58","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js":"59","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js":"60","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js":"61","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js":"62","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js":"63","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js":"64","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js":"65","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js":"66","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js":"67","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js":"68","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js":"69","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js":"70","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js":"71","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js":"72","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js":"73","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js":"74","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js":"75","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js":"76","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js":"77","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js":"78","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js":"79","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js":"80","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js":"81","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js":"82","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js":"83","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js":"84","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js":"85","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js":"86","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js":"87","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js":"88","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js":"89","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\MainChartExample.js":"90","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js":"91","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js":"92","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js":"93","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js":"94","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js":"95","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js":"96","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js":"97","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js":"98","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js":"99","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js":"100","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js":"101","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js":"102","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js":"103","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js":"104","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js":"105","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js":"106","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js":"107","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js":"108","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js":"109","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js":"110","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js":"111","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js":"112","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js":"113","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js":"114"},{"size":744,"mtime":1609519981903,"results":"115","hashOfConfig":"116"},{"size":1460,"mtime":1611572469365,"results":"117","hashOfConfig":"116"},{"size":1476,"mtime":1609519981906,"results":"118","hashOfConfig":"116"},{"size":4813,"mtime":1609519981920,"results":"119","hashOfConfig":"116"},{"size":340,"mtime":1609519981923,"results":"120","hashOfConfig":"116"},{"size":4074,"mtime":1609519981874,"results":"121","hashOfConfig":"116"},{"size":438,"mtime":1609519981895,"results":"122","hashOfConfig":"116"},{"size":1357,"mtime":1610274820206,"results":"123","hashOfConfig":"116"},{"size":2944,"mtime":1610274820158,"results":"124","hashOfConfig":"116"},{"size":1338,"mtime":1610274820293,"results":"125","hashOfConfig":"116"},{"size":2840,"mtime":1610274820341,"results":"126","hashOfConfig":"116"},{"size":617,"mtime":1609519981902,"results":"127","hashOfConfig":"116"},{"size":1827,"mtime":1609680618071,"results":"128","hashOfConfig":"116"},{"size":2612,"mtime":1609519981891,"results":"129","hashOfConfig":"116"},{"size":3216,"mtime":1609680618066,"results":"130","hashOfConfig":"116"},{"size":4914,"mtime":1609519981890,"results":"131","hashOfConfig":"116"},{"size":1141,"mtime":1609519981882,"results":"132","hashOfConfig":"116"},{"size":2311,"mtime":1609519981893,"results":"133","hashOfConfig":"116"},{"size":588,"mtime":1609519981884,"results":"134","hashOfConfig":"116"},{"size":3766,"mtime":1612641627176,"results":"135","hashOfConfig":"116"},{"size":6109,"mtime":1612452481719,"results":"136","hashOfConfig":"116"},{"size":10851,"mtime":1612702172381,"results":"137","hashOfConfig":"116"},{"size":6963,"mtime":1609519981875,"results":"138","hashOfConfig":"116"},{"size":987,"mtime":1609519981879,"results":"139","hashOfConfig":"116"},{"size":6949,"mtime":1609519981877,"results":"140","hashOfConfig":"116"},{"size":3233,"mtime":1610274814830,"results":"141","hashOfConfig":"116"},{"size":244,"mtime":1609680618108,"results":"142","hashOfConfig":"116"},{"size":12331,"mtime":1612631923589,"results":"143","hashOfConfig":"116"},{"size":965,"mtime":1609680618160,"results":"144","hashOfConfig":"116"},{"size":1849,"mtime":1609680618120,"results":"145","hashOfConfig":"116"},{"size":2028,"mtime":1609519981995,"results":"146","hashOfConfig":"116"},{"size":3483,"mtime":1609519981997,"results":"147","hashOfConfig":"116"},{"size":3669,"mtime":1609519981992,"results":"148","hashOfConfig":"116"},{"size":1659,"mtime":1609519981998,"results":"149","hashOfConfig":"116"},{"size":3136,"mtime":1609519981994,"results":"150","hashOfConfig":"116"},{"size":6297,"mtime":1612443409800,"results":"151","hashOfConfig":"116"},{"size":5138,"mtime":1612628209825,"results":"152","hashOfConfig":"116"},{"size":2786,"mtime":1612700260995,"results":"153","hashOfConfig":"116"},{"size":6657,"mtime":1612640234923,"results":"154","hashOfConfig":"116"},{"size":2011,"mtime":1612187915689,"results":"155","hashOfConfig":"116"},{"size":12753,"mtime":1612187915674,"results":"156","hashOfConfig":"116"},{"size":13635,"mtime":1610274815204,"results":"157","hashOfConfig":"116"},{"size":1783,"mtime":1610274814866,"results":"158","hashOfConfig":"116"},{"size":856,"mtime":1609680618053,"results":"159","hashOfConfig":"116"},{"size":25604,"mtime":1610274814840,"results":"160","hashOfConfig":"116"},{"size":2037,"mtime":1609680618088,"results":"161","hashOfConfig":"116"},{"size":6355,"mtime":1612197884380,"results":"162","hashOfConfig":"116"},{"size":4738,"mtime":1610274815188,"results":"163","hashOfConfig":"116"},{"size":3159,"mtime":1610274815217,"results":"164","hashOfConfig":"116"},{"size":2776,"mtime":1609680618144,"results":"165","hashOfConfig":"116"},{"size":6370,"mtime":1609519981942,"results":"166","hashOfConfig":"116"},{"size":6124,"mtime":1609519981943,"results":"167","hashOfConfig":"116"},{"size":7696,"mtime":1609519981945,"results":"168","hashOfConfig":"116"},{"size":2276,"mtime":1609519981946,"results":"169","hashOfConfig":"116"},{"size":12671,"mtime":1610274819958,"results":"170","hashOfConfig":"116"},{"size":24413,"mtime":1610274821545,"results":"171","hashOfConfig":"116"},{"size":5994,"mtime":1610274821752,"results":"172","hashOfConfig":"116"},{"size":7178,"mtime":1610274819986,"results":"173","hashOfConfig":"116"},{"size":3697,"mtime":1610274820920,"results":"174","hashOfConfig":"116"},{"size":11236,"mtime":1610274820496,"results":"175","hashOfConfig":"116"},{"size":3813,"mtime":1610274820108,"results":"176","hashOfConfig":"116"},{"size":6087,"mtime":1610274821034,"results":"177","hashOfConfig":"116"},{"size":5513,"mtime":1610274820370,"results":"178","hashOfConfig":"116"},{"size":613,"mtime":1610274821208,"results":"179","hashOfConfig":"116"},{"size":629,"mtime":1610274821291,"results":"180","hashOfConfig":"116"},{"size":999,"mtime":1610274821420,"results":"181","hashOfConfig":"116"},{"size":6366,"mtime":1610274822692,"results":"182","hashOfConfig":"116"},{"size":16914,"mtime":1610274822933,"results":"183","hashOfConfig":"116"},{"size":14022,"mtime":1610274823097,"results":"184","hashOfConfig":"116"},{"size":2816,"mtime":1610274823230,"results":"185","hashOfConfig":"116"},{"size":33892,"mtime":1610274822548,"results":"186","hashOfConfig":"116"},{"size":25145,"mtime":1610274823344,"results":"187","hashOfConfig":"116"},{"size":5808,"mtime":1610274823253,"results":"188","hashOfConfig":"116"},{"size":2259,"mtime":1610274823659,"results":"189","hashOfConfig":"116"},{"size":3069,"mtime":1610274823523,"results":"190","hashOfConfig":"116"},{"size":3011,"mtime":1610274823632,"results":"191","hashOfConfig":"116"},{"size":5977,"mtime":1610274823743,"results":"192","hashOfConfig":"116"},{"size":9733,"mtime":1610274823677,"results":"193","hashOfConfig":"116"},{"size":13135,"mtime":1610274823795,"results":"194","hashOfConfig":"116"},{"size":7017,"mtime":1610274824188,"results":"195","hashOfConfig":"116"},{"size":52712,"mtime":1612187915559,"results":"196","hashOfConfig":"116"},{"size":9481,"mtime":1610274824117,"results":"197","hashOfConfig":"116"},{"size":1795,"mtime":1610274824431,"results":"198","hashOfConfig":"116"},{"size":18597,"mtime":1610274824310,"results":"199","hashOfConfig":"116"},{"size":2156,"mtime":1610274823949,"results":"200","hashOfConfig":"116"},{"size":5265,"mtime":1610274823280,"results":"201","hashOfConfig":"116"},{"size":380,"mtime":1609680618157,"results":"202","hashOfConfig":"116"},{"size":4208,"mtime":1610274819896,"results":"203","hashOfConfig":"116"},{"size":4922,"mtime":1610274819804,"results":"204","hashOfConfig":"116"},{"size":2587,"mtime":1610274821729,"results":"205","hashOfConfig":"116"},{"size":1620,"mtime":1610274822062,"results":"206","hashOfConfig":"116"},{"size":3446,"mtime":1610274821851,"results":"207","hashOfConfig":"116"},{"size":60,"mtime":1609519981910,"results":"208","hashOfConfig":"116"},{"size":608,"mtime":1609519981908,"results":"209","hashOfConfig":"116"},{"size":2771,"mtime":1612702063955,"results":"210","hashOfConfig":"116"},{"size":4992,"mtime":1612603306861,"results":"211","hashOfConfig":"116"},{"size":967,"mtime":1611928519934,"results":"212","hashOfConfig":"116"},{"size":6943,"mtime":1612187915781,"results":"213","hashOfConfig":"116"},{"size":7019,"mtime":1612187915723,"results":"214","hashOfConfig":"116"},{"size":2014,"mtime":1612187915813,"results":"215","hashOfConfig":"116"},{"size":5925,"mtime":1612187915795,"results":"216","hashOfConfig":"116"},{"size":6218,"mtime":1612187915822,"results":"217","hashOfConfig":"116"},{"size":5294,"mtime":1612187915735,"results":"218","hashOfConfig":"116"},{"size":2011,"mtime":1612187915749,"results":"219","hashOfConfig":"116"},{"size":5554,"mtime":1612187915768,"results":"220","hashOfConfig":"116"},{"size":8202,"mtime":1612187915870,"results":"221","hashOfConfig":"116"},{"size":982,"mtime":1612187915897,"results":"222","hashOfConfig":"116"},{"size":2010,"mtime":1612187915882,"results":"223","hashOfConfig":"116"},{"size":7782,"mtime":1612187915571,"results":"224","hashOfConfig":"116"},{"size":5990,"mtime":1612187915580,"results":"225","hashOfConfig":"116"},{"size":6339,"mtime":1612187915599,"results":"226","hashOfConfig":"116"},{"size":2019,"mtime":1612187915590,"results":"227","hashOfConfig":"116"},{"size":2230,"mtime":1612641364154,"results":"228","hashOfConfig":"116"},{"size":2489,"mtime":1612702152998,"results":"229","hashOfConfig":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},"y8rh76",{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"232"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"232"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"232"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"232"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"232"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"232"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"232"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"232"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"232"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"232"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"232"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"232"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"232"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"232"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"232"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"232"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\index.js",[],["476","477"],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\App.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\polyfill.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\serviceWorker.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\store.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheLayout.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page500\\Page500.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\register\\Register.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\page404\\Page404.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\pages\\login\\Login.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheSidebar.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownNotif.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdown.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownMssg.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheContent.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeaderDropdownTasks.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheFooter.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\TheHeader.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\containers\\_nav.js",["478","479"],"import React from 'react'\r\n\r\nexport default [\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['직원']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '직원(데스크)',\r\n    route: '/base',\r\n    icon: 'cil-drop',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '수업관리',\r\n        to: '/lecture',\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '상담관리',\r\n        to: '/consult',\r\n      },\r\n    ]},\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '직원(강사)',\r\n    route: '/base',\r\n    icon: 'cil-drop',\r\n    _children: [\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: '성적관리',\r\n        to: '/score',\r\n      },\r\n    ]},\r\n    {\r\n      _tag: 'CSidebarNavDropdown',\r\n      name: '직원(재무)',\r\n      route: '/base',\r\n      icon: 'cil-drop',\r\n      _children: [\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: '수납관리',\r\n          to: '/receive',\r\n        },\r\n      ]},\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: '직원(인사)',\r\n        route: '/base',\r\n        icon: 'cil-drop',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: '공지사항관리',\r\n            to: '/notice',\r\n          },\r\n        ]},\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //템플릿\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Components']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavDropdown',\r\n    name: '템플릿',\r\n    route: '/base',\r\n    icon: 'cil-puzzle',\r\n    _children: [ {\r\n      _tag: 'CSidebarNavDropdown',\r\n      name: 'Base',\r\n      route: '/base',\r\n      icon: 'cil-puzzle',\r\n      _children: [\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Breadcrumb',\r\n          to: '/base/breadcrumbs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Cards',\r\n          to: '/base/cards',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Carousel',\r\n          to: '/base/carousels',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Collapse',\r\n          to: '/base/collapses',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Forms',\r\n          to: '/base/forms',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Jumbotron',\r\n          to: '/base/jumbotrons',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'List group',\r\n          to: '/base/list-groups',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Navs',\r\n          to: '/base/navs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Navbars',\r\n          to: '/base/navbars',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Pagination',\r\n          to: '/base/paginations',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Popovers',\r\n          to: '/base/popovers',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Progress',\r\n          to: '/base/progress-bar',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Switches',\r\n          to: '/base/switches',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tables',\r\n          to: '/base/tables',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tabs',\r\n          to: '/base/tabs',\r\n        },\r\n        {\r\n          _tag: 'CSidebarNavItem',\r\n          name: 'Tooltips',\r\n          to: '/base/tooltips',\r\n        },\r\n      ],\r\n    },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Buttons',\r\n        route: '/buttons',\r\n        icon: 'cil-cursor',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Buttons',\r\n            to: '/buttons/buttons',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Brand buttons',\r\n            to: '/buttons/brand-buttons',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Buttons groups',\r\n            to: '/buttons/button-groups',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Dropdowns',\r\n            to: '/buttons/button-dropdowns',\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Charts',\r\n        to: '/charts',\r\n        icon: 'cil-chart-pie'\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Icons',\r\n        route: '/icons',\r\n        icon: 'cil-star',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Free',\r\n            to: '/icons/coreui-icons',\r\n            badge: {\r\n              color: 'success',\r\n              text: 'NEW',\r\n            },\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Flags',\r\n            to: '/icons/flags',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'CoreUI Brands',\r\n            to: '/icons/brands',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavDropdown',\r\n        name: 'Notifications',\r\n        route: '/notifications',\r\n        icon: 'cil-bell',\r\n        _children: [\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Alerts',\r\n            to: '/notifications/alerts',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Badges',\r\n            to: '/notifications/badges',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Modal',\r\n            to: '/notifications/modals',\r\n          },\r\n          {\r\n            _tag: 'CSidebarNavItem',\r\n            name: 'Toaster',\r\n            to: '/notifications/toaster'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        _tag: 'CSidebarNavItem',\r\n        name: 'Widgets',\r\n        to: '/widgets',\r\n        icon: 'cil-calculator',\r\n        badge: {\r\n          color: 'info',\r\n          text: 'NEW',\r\n        },\r\n      },]\r\n  }\r\n]\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\routes.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo-negative.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\sygnet.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\assets\\icons\\logo.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttInOut.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\sessionLog.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\employee\\Employee.js",["480","481"],"import React, {Component} from 'react'\r\nimport ApiService from \"../../ApiService\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Employee extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      employeeList: [],\r\n      currentPage : 1,\r\n      size : 10\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    ApiService.getEmployee(this.state).then(res => {\r\n      this.setState({\r\n        employeeList : res.data.content,\r\n        totalPages : res.data.totalPages,\r\n        totalElements : res.data.totalElements,\r\n        currentPage : res.data.number+1\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {employeeList, currentPage, size} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>직원 목록</h2>\r\n         <table>\r\n           <thead>\r\n           <tr>\r\n             <th>번호</th>\r\n             <th>이름</th>\r\n             <th>전화번호</th>\r\n             <th>주소</th>\r\n             <th>생년월일</th>\r\n             <th>성별</th>\r\n             <th>직급</th>\r\n             <th>연봉</th>\r\n           </tr>\r\n           </thead>\r\n           <tbody>\r\n           {\r\n             this.state.employeeList.map(\r\n               data =>\r\n             <tr key = {data.no}>\r\n              <td>{data.no}</td>\r\n               <td>{data.name}</td>\r\n               <td>{data.hp}</td>\r\n               <td>{data.address}</td>\r\n               <td>{data.birth}</td>\r\n               <td>{data.sex}</td>\r\n               <td>{data.rank}</td>\r\n               <td>{data.salary}</td>\r\n             </tr>\r\n             )\r\n           }\r\n           </tbody>\r\n         </table>\r\n\r\n          <Button type=\"button\" variant=\"outline-info\" disabled={currentPage === 1 ? true : false}\r\n                  onClick={this.firstPage}>\r\n          </Button>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branch.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\Branches.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\branch\\BranchAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultUpdate.js",["482","483"],"//-----------------------\r\n// 제목 : 상담 수정\r\n// 파일명 : ConsultUpdate.js\r\n// 작성자 : 최인아\r\n// 작성일 : \r\n//-----------------------\r\nimport React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, withStyles} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CInputCheckbox, CLabel } from \"@coreui/react\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  }\r\n});\r\n\r\nclass ConsultUpdate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.ConsultList.name,\r\n      hp: this.props.ConsultList.hp,\r\n      schedule: this.props.ConsultList.schedule,\r\n      memo: this.props.ConsultList.memo,\r\n      route: this.props.ConsultList.route,\r\n      writer: this.props.ConsultList.writer\r\n    }\r\n\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.updateConsult = this.updateConsult.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.checkboxChange = this.checkboxChange.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.updateConsult()\r\n    this.setState({\r\n      name: '',\r\n      hp: '',\r\n      schedule: '',\r\n      memo: '',\r\n      route: '',\r\n      writer: ''\r\n\r\n    })\r\n    alert(\"수정되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  updateConsult() {\r\n    axios({\r\n      url: 'http://localhost:8080/consult/edit/' + this.props.ConsultList.no,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        name: this.state.name,\r\n        hp: this.state.hp,\r\n        schedule: this.state.schedule,\r\n        memo: this.state.memo,\r\n        route: this.state.route.toString(),\r\n        writer: this.state.writer\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n   checkboxChange = (e) => {\r\n     const route=this.state.route\r\n     let index\r\n     if (e.target.checked) {\r\n       route.push(e.target.value)\r\n     } else {\r\n       index = route.indexOf(e.target.value)\r\n       route.splice(index, 1)\r\n    }\r\n     this.setState({route:route})\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    let ConsultList = this.props.ConsultList;\r\n    let route = this.state.route;\r\n    console.log(ConsultList);\r\n\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n          수정\r\n        </Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>상담 수정</DialogTitle>\r\n          <DialogContent>\r\n          {/* <CFormGroup row>\r\n              <CCol md=\"9\">\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox1\" name=\"route\" value={\"CALL\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"CALL\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox1\">CALL</CLabel>\r\n                </CFormGroup>\r\n                <CFormGroup variant=\"custom-checkbox\" inline>\r\n                  <CInputCheckbox custom id=\"inline-checkbox2\" name=\"route\" value={\"ONLINE\"}\r\n                                  onChange={this.checkboxChange}\r\n                                  defaultChecked={route.includes(\"ONLINE\")}/>\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">ONLINE</CLabel>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CFormGroup> */}\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"name\">성명</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"name\" placeholder=\"성명\" defaultValue={ConsultList.name} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"hp\">전화번호</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"hp\" placeholder=\"전화번호\" defaultValue={ConsultList.hp} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"schedule\">상담날짜</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput type=\"date\" name=\"schedule\" placeholder=\"상담날짜\" defaultValue={ConsultList.schedule} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"memo\">상담내용</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"meom\" placeholder=\"상담내용\" defaultValue={ConsultList.memo} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"wrtier\">작성자</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"12\" md=\"9\">\r\n                <CInput name=\"writer\" placeholder=\"작성자\" defaultValue={ConsultList.writer} onChange={this.handleValueChange}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>수정완료</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ConsultUpdate)\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\ConsultInsert.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consult.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\consult\\Consults.js",["484"],"// import React, {Component} from \"react\";\r\n// import axios from \"axios\";\r\n// import './table.css';\r\n// import ConsultInsert from \"./ConsultInsert\";\r\n// import Consult from \"./Consult\";\r\n// import { CButton, CInput } from \"@coreui/react\";\r\n\r\n// class Consults extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       keyword: '', //공백으로 지정\r\n//         consultList: \"\"\r\n//     }\r\n//     this.stateRefresh = this.stateRefresh.bind(this);\r\n//     this.handleChange = this.handleChange.bind(this);\r\n// }\r\n\r\n// handleChange(e) { //위에 지정되는 걸 변화\r\n//   this.setState({\r\n//   keyword: e.target.value\r\n// });\r\n// }\r\n\r\n//   stateRefresh() {\r\n//     this.setState({\r\n//       consultList: \"\",\r\n//     });\r\n//     this.getApi(this.state.keyword);\r\n\r\n//   }\r\n\r\n// componentDidMount() {\r\n//     this.getApi(this.state.keyword);\r\n// }\r\n\r\n// getApi = (keyword) => {\r\n//     axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n//         .then(res => {\r\n//             this.setState({\r\n//               consultList: res.data.message\r\n//             })\r\n//         })\r\n//         .catch(res => console.log(res))\r\n// }\r\n\r\n//   render() {\r\n//     const { consultList } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <header>\r\n//           <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n//           <br></br>\r\n//         </header>\r\n//         <table id=\"table1\" border=\"0\">\r\n//          <tr id=\"table1\">\r\n//            <td id=\"table1\">\r\n//              <CInput\r\n//               name=\"keyword\"\r\n//               placeholder=\"Search\"\r\n//               value={this.state.keyword}\r\n//               onChange={this.handleChange}\r\n//               class=\"w-25 p-3\"\r\n//               //class=\"form-control\"\r\n//             />&nbsp;&nbsp;&nbsp;\r\n//             <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n//                      onClick = {(e) => {\r\n//                                 this.getApi(this.state.keyword)}}>검색</CButton>\r\n//           </td>\r\n//         </tr>\r\n//       </table>\r\n//         <table>\r\n//         <thead>\r\n//           <tr>\r\n//           <td>NO</td>\r\n//             <td>name</td>\r\n//              <td>  hp  </td>\r\n//            <td>schedule</td>\r\n//             <td>memo</td>\r\n//             <td>route</td>\r\n//              <td>writer</td>\r\n//            <td>regdate</td>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//          {consultList&&consultList.map((consultdata, insertIndex) => {\r\n//             return (\r\n//             <tr key={insertIndex}>\r\n//                 <td>{consultdata.no}</td>\r\n//                 <td> <Consult stateRefresh={this.stateRefresh} id={consultdata.no}/></td>\r\n//                 <td>{consultdata.hp}</td>\r\n//                <td>{consultdata.schedule}</td>\r\n//                <td>{consultdata.memo}</td>\r\n//                 <td>{consultdata.route}</td>\r\n//                  <td>{consultdata.writer}</td>\r\n//                  <td>{consultdata.regdate}</td>\r\n//               </tr>\r\n//             );\r\n//           })}\r\n//         </tbody>\r\n//       </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Consults;\r\n\r\n//-----------------------\r\n// 제목 : 상담 기록 리스트\r\n// 파일명 : Consults.js\r\n// 작성자 : 최인아\r\n//-----------------------\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { CButton, CInput } from \"@coreui/react\";\r\nimport ConsultInsert from \"./ConsultInsert\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nclass Consults extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        keyword: '', //공백으로 지정\r\n        ConsultList: \"\"\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this)\r\n    this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\nhandleChange(e) { //위에 지정되는 걸 변화\r\n  this.setState({\r\n  keyword: e.target.value\r\n});\r\n}\r\n\r\nstateRefresh() {\r\n  this.setState({\r\n    ConsultList: \"\"\r\n  });\r\n  this.getApi(this.state.keyword);\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.getApi(this.state.keyword);\r\n}\r\n\r\ngetApi = (keyword) => {\r\n    axios.get(\"http://localhost:8080/consult?\"+\"&keyword=\" + keyword)\r\n        .then(res => {\r\n            this.setState({\r\n              ConsultList: res.data.message\r\n            })\r\n        })\r\n        .catch(res => console.log(res))\r\n}\r\n\r\n  render() {\r\n    const { ConsultList } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      <table id=\"table1\" border=\"0\">\r\n        <tr id=\"table1\">\r\n          <td id=\"table1\">\r\n            <CInput\r\n              name=\"keyword\"\r\n              placeholder=\"Search\"\r\n              value={this.state.keyword}\r\n              onChange={this.handleChange}\r\n              class=\"w-25 p-3\"\r\n              //class=\"form-control\"\r\n            />&nbsp;&nbsp;&nbsp;\r\n            <CButton color=\"light\" class=\"btn btn-outline-info\" \r\n                     onClick = {(e) => {\r\n                                this.getApi(this.state.keyword)}}>검색</CButton>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <header>\r\n        <ConsultInsert stateRefresh={this.stateRefresh}/>\r\n      </header>\r\n        <br></br>\r\n    <table>\r\n        <thead>\r\n            <td>NO</td>\r\n            <td>name</td>\r\n            <td>  hp  </td>\r\n            <td>schedule</td>\r\n            <td>memo</td>\r\n            <td>route</td>\r\n            <td>writer</td>\r\n            <td>regdate</td>\r\n        </thead>\r\n          <tbody>\r\n           {ConsultList&&ConsultList.map((consultdata, insertIndex) => {\r\n            return (\r\n            <tr key={insertIndex}>\r\n                <td>{consultdata.no}</td>\r\n                <td><Link to={`/consult/${consultdata.no}`}>{consultdata.name}</Link></td>\r\n                <td>{consultdata.hp}</td>\r\n                <td>{consultdata.schedule}</td>\r\n                <td>{consultdata.memo}</td>\r\n                <td>{consultdata.route}</td>\r\n                <td>{consultdata.writer}</td>\r\n                <td>{consultdata.regdate}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody> \r\n      </table>\r\n      <br></br>\r\n      <div>\r\n        <Pagination count={10} color=\"primary\" />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Consults);\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\LectureUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\Attendance.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\ApiService.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Attendance\\AttTable.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\suminCP\\excel.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lectures.js",["485","486","487"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport LectureAdd from \"./LectureAdd\";\r\nimport Lecture from \"./Lecture\";\r\nimport {CButton, CCol, CForm, CInput, CRow, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport LectureRoom from \"../room/Room\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Room from \"../room/Room\";\r\nimport Part from \"../part/Part\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Lectures extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ItemList: \"\",\r\n      pagingList:\"\",\r\n      searchKeyword: \"\",\r\n      branchList:\"\",\r\n      findBranch:\"\",\r\n      condition:\"\",\r\n      currentPageNo:1,\r\n      recordsPerPage:5\r\n\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi(this.state.searchKeyword,this.state.currentPageNo);\r\n    this.getBranch();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      ItemList: \"\",\r\n    });\r\n    this.getApi(this.state.searchKeyword,this.state.currentPageNo);\r\n    this.getBranch();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  getApi(searchKeyword,currentPageNo) {\r\n    console.log(searchKeyword)\r\n    axios.get(\"http://localhost:8080/lecture?branch=\"+this.state.findBranch+\"&condition=\"+this.state.condition+\"&keyword=\" + searchKeyword+\"&currentPageNo=\"+currentPageNo+\"&recordsPerPage=\"+this.state.recordsPerPage)\r\n      .then(res => {\r\n        this.setState({\r\n          ItemList: res.data.message,\r\n          pagingList : res.data.paging,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n\r\n  }\r\n\r\n  getBranch = () => {\r\n    axios.get(\"http://localhost:8080/lecture/branches\")\r\n      .then(res => {\r\n        this.setState({\r\n          branchList: res.data.list\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  handleKeyPress = e => {\r\n    if (e.key === 'Enter') {\r\n      this.getApi(this.state.searchKeyword,this.state.currentPageNo);\r\n    }\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  branchSelect = (e) => {\r\n    this.setState({\r\n      findBranch: e.target.value\r\n    })\r\n  }\r\n  conditionSelect = (e) => {\r\n    this.setState({\r\n      condition:e.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {ItemList} = this.state;\r\n    const {pagingList} = this.state;\r\n    const {branchList} = this.state;\r\n\r\n    const handleChange = (event, value) => {\r\n      this.getApi(this.state.searchKeyword,value)\r\n       // this.getApi(value);\r\n      this.setState({\r\n        currentPageNo : value\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline onSubmit={this.handleSubmit.bind(this)}>\r\n            <CSelect custom id=\"branch\" onChange={this.branchSelect} value={this.state.findBranch}>\r\n              <option value=\"\">지점</option>\r\n              {branchList && branchList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n            <CSelect custom id=\"branch\" onChange={this.conditionSelect} value={this.state.condition}>\r\n              <option value=\"\">검색조건</option>\r\n              <option value=\"name\">강의명</option>\r\n              <option value=\"instructor\">강사</option>\r\n              <option value=\"part\">분야</option>\r\n\r\n            </CSelect>\r\n            &nbsp;&nbsp;\r\n            <CInput\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"Search\"\r\n              size=\"sm\"\r\n              name=\"searchKeyword\"\r\n              value={this.state.searchKeyword}\r\n              onChange={this.handleValueChange}\r\n              onKeyPress={this.handleKeyPress.bind(this)}\r\n            />\r\n            <CButton color=\"dark\" variant=\"outline\" className=\"my-2 my-sm-0\" onClick={(e) => {\r\n              this.getApi(this.state.searchKeyword,this.state.currentPageNo)\r\n            }}>검색</CButton>\r\n          </CForm>\r\n          <Grid container justify=\"flex-end\">\r\n          <LectureAdd stateRefresh={this.stateRefresh}/>\r\n          <Room stateRefresh={this.stateRefresh}/>\r\n          <Part stateRefresh={this.stateRefresh}/>\r\n          </Grid>\r\n\r\n        <br/><br/>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td>강의명</td>\r\n            <td>강사</td>\r\n            <td>수강료</td>\r\n            <td>정원수</td>\r\n            <td>강의실</td>\r\n            <td>개강일</td>\r\n            <td>종강일</td>\r\n            <td>요일</td>\r\n            <td>시작시간</td>\r\n            <td>종료시간</td>\r\n            <td>분야</td>\r\n            <td>지점</td>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {ItemList && ItemList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr key={insertIndex}>\r\n                <td>{itemdata.no}</td>\r\n                <td><Lecture stateRefresh={this.stateRefresh} id={itemdata.no}/></td>\r\n                <td>{itemdata.instructor}</td>\r\n                <td>{itemdata.price}</td>\r\n                <td>{itemdata.students}</td>\r\n                <td>{itemdata.classRoom}</td>\r\n                <td>{itemdata.start_date}</td>\r\n                <td>{itemdata.end_date}</td>\r\n                <td>{itemdata.day}</td>\r\n                <td>{itemdata.start_time}</td>\r\n                <td>{itemdata.end_time}</td>\r\n                <td>{itemdata.field}</td>\r\n                <td>{itemdata.office}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n          </tbody>\r\n        </table>\r\n        {ItemList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n        {ItemList.length !== 0 &&\r\n        <div className={useStyles.root}>\r\n          <Pagination count={pagingList.lastPage} onChange={handleChange} />\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lectures;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\lecture\\Lecture.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\Users.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\User.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Edit_stu.js",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  //import { DocsLink } from 'src/reusable'\r\n\r\n  class Edit_stu extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            no : '',\r\n            name : '',\r\n            hp : '',\r\n            email : '',\r\n            birth : '',\r\n            address : '',\r\n            curri : '',\r\n            gender : '',\r\n            regdate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Student(window.localStorage.getItem(\"StudentNO\"))\r\n            .then(res => {\r\n                let stu =  res.data.listdata;\r\n                this.setState({\r\n                    no : stu.no,\r\n                    name : stu.name,\r\n                    hp : stu.hp,\r\n                    email : stu.email,\r\n                    birth : stu.birth,\r\n                    address : stu.address,\r\n                    curri : stu.curri,\r\n                    gender : stu.gender,\r\n                    regdate : stu.regdate\r\n                })\r\n            })\r\n        .catch(err =>{\r\n            console.log('getApi() 에러', err);\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    saveStudent = (e) => {\r\n        e.preventDefault();\r\n\r\n        let student = {\r\n            no : this.state.no,\r\n            hp : this.state.hp,\r\n            email : this.state.email,\r\n            birth : this.state.birth,\r\n            address : this.state.address,\r\n            curri : this.state.curri,\r\n        }\r\n\r\n        ApiService.editStudent(student)\r\n            .then( res => {\r\n            this.setState({\r\n                message : student.name + '님의 정보가 수정되었습니다'\r\n            })\r\n            console.log(this.state.message);\r\n            this.props.history.push('/students');\r\n            })\r\n            .catch( err => {\r\n            console.log('saveStudent() 에러', err);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <CRow>\r\n            <CCol xs=\"12\" md=\"6\">\r\n              <CCard>\r\n                <CCardHeader>\r\n                  학생 정보 수정\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm>\r\n                   <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"name\" readOnly =\"true\" defualtValue={this.state.name}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"hp\" placeholder={this.state.hp} value={this.state.hp} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"email-input\">이메일주소</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"email\" placeholder={this.state.email} value={this.state.email} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"date-input\">생년월일</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput type=\"date\" name=\"birth\" placeholder={this.state.birth} value={this.state.birth} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup><CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"text-input\">주소 입력</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CInput name=\"address\" placeholder={this.state.address} value={this.state.address} onChange={this.onChange}/>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"3\">\r\n                        <CLabel htmlFor=\"select\">수강과목</CLabel>\r\n                      </CCol>\r\n                      <CCol xs=\"12\" md=\"9\">\r\n                        <CSelect custom name=\"curri\" onChange={this.onChange}>\r\n                        <option value=\"0\">과목을 선택하세요</option>\r\n                          <option value=\"JAVA\">JAVA</option>\r\n                          <option value=\"PYTHON\">PYTHON</option>\r\n                          <option value=\"C++\">C++</option>\r\n                          <option value=\"KOTLIN\">KOTLIN</option>\r\n                          <option value=\"\">수강과목 없음</option>\r\n                        </CSelect>\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton onClick={this.saveStudent} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> 저장 </CButton>\r\n                  <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> 초기화 </CButton>\r\n                </CCardFooter>\r\n              </CCard>\r\n              </CCol>\r\n            </CRow>\r\n        );}\r\n}\r\n\r\nexport default Edit_stu","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Ins_stu.js",["506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522"],"import React, { Component } from \"react\";\r\n//import axios from \"axios\";\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n   // import { DocsLink } from 'src/reusable'\r\n\r\nclass Ins_stu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      hp: '',\r\n      email: '',\r\n      bitrh: '',\r\n      address: '',\r\n      curri: '',\r\n      gender: '',\r\n      regdate:''\r\n    }\r\n  }\r\n\r\n  onChange =(e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  saveStudent = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.email)\r\n\r\n    let student = {\r\n      name : this.state.name,\r\n      hp : this.state.hp,\r\n      email : this.state.email,\r\n      birth : this.state.birth,\r\n      address : this.state.address,\r\n      curri : this.state.curri,\r\n      gender : this.state.gender,\r\n      //regdate : this.state.regdate\r\n    }\r\n\r\n    console.log(this.state.email)\r\n\r\n    ApiService.addStudent(student)\r\n    .then( res => {\r\n      this.setState({\r\n        message : student.name + '님이 성공적으로 등록되었습니다'\r\n      })\r\n      console.log(this.state.message);\r\n      this.props.history.push('/students');\r\n    })\r\n    .catch( err => {\r\n      console.log('saveStudent() 에러', err);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              학생 정보 등록\r\n              <small> Elements</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm>\r\n               <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"name\" placeholder=\"이름\" value={this.state.name} onChange={this.onChange} />\r\n                    <CFormText>이름을 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">핸드폰 번호</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"hp\" placeholder=\"핸드폰 번호\" value={this.state.hp} onChange={this.onChange}/>\r\n                    <CFormText>숫자만 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"email-input\">이메일주소</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"email\" placeholder=\"이메일 주소\" value={this.state.email} onChange={this.onChange}/>\r\n                    <CFormText className=\"help-block\">이메일주소를 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"date-input\">생년월일</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput type=\"date\" name=\"birth\" placeholder=\"생년월일\" value={this.state.birth} onChange={this.onChange}/>\r\n                  </CCol>\r\n                </CFormGroup><CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"text-input\">주소 입력</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CInput name=\"address\" placeholder=\"주소\" value={this.state.address} onChange={this.onChange}/>\r\n                    <CFormText>주소를 입력하세요</CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">수강과목</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"curri\" onChange={this.onChange}>\r\n                    <option value=\"0\">과목을 선택하세요</option>\r\n                      <option value=\"JAVA\">JAVA</option>\r\n                      <option value=\"PYTHON\">PYTHON</option>\r\n                      <option value=\"C++\">C++</option>\r\n                      <option value=\"KOTLIN\">KOTLIN</option>\r\n                      <option value=\"\">수강과목 없음</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"select\">성별</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CSelect custom name=\"gender\" onChange={this.onChange}>\r\n                    <option value=\"0\">성별을 선택하세요</option>\r\n                      <option value=\"male\">male</option>\r\n                      <option value=\"female\">female</option>\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton onClick={this.saveStudent} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n          </CCol>\r\n        </CRow>\r\n    );}\r\n}\r\n\r\nexport default Ins_stu;","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Student.js",["523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\n//import { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CCollapse,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CDropdownToggle,\r\n    CFade,\r\n    CForm,\r\n    CFormGroup,\r\n    CFormText,\r\n    CValidFeedback,\r\n    CInvalidFeedback,\r\n    CTextarea,\r\n    CInput,\r\n    CInputFile,\r\n    CInputCheckbox,\r\n    CInputRadio,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CDropdown,\r\n    CInputGroupText,\r\n    CLabel,\r\n    CSelect,\r\n    CRow,\r\n    CSwitch\r\n  } from '@coreui/react'\r\n  import CIcon from '@coreui/icons-react'\r\n  import { DocsLink } from 'src/reusable'\r\n\r\nclass Student extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            no : '',\r\n            name : '',\r\n            hp : '',\r\n            email : '',\r\n            birth : '',\r\n            address : '',\r\n            curri : '',\r\n            gender : '',\r\n            regdate : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n            ApiService.Student(window.localStorage.getItem(\"StudentNO\"))\r\n                .then(res => {\r\n                    let stu =  res.data.listdata;\r\n                    this.setState({\r\n                        no : stu.no,\r\n                        name : stu.name,\r\n                        hp : stu.hp,\r\n                        email : stu.email,\r\n                        birth : stu.birth,\r\n                        address : stu.address,\r\n                        curri : stu.curri,\r\n                        gender : stu.gender,\r\n                        regdate : stu.regdate\r\n                    })\r\n                })\r\n            .catch(err =>{\r\n                console.log('getApi() 에러', err);\r\n            });\r\n        }\r\n\r\n    delStu = (NO) => {\r\n        ApiService.deleteStudent(NO)\r\n        .then( res => {\r\n            this.setState({\r\n                message : 'User Deleted Suscces'\r\n            });\r\n            alert(this.state.message);\r\n            this.props.history.push('/students');\r\n        })\r\n        .catch(err => {\r\n            console.log('delStu() Error!', err);\r\n        })\r\n    }\r\n\r\n    editStu = (NO) => {\r\n        window.localStorage.setItem(\"StudentNO\", NO);\r\n        this.props.history.push('/edit_stu');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CRow>\r\n                <CCol xs=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            학생 상세 정보\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CForm>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">등록번호</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.no}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">이름</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.name}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">전화번호</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.hp}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">이메일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.email}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">생년월일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.birth}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">주소</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.address}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">교육과정</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.curri}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">성별</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.gender}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                        <CLabel htmlFor=\"text-input\">등록일</CLabel>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"9\">\r\n                                    <CLabel>{this.state.regdate}</CLabel>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                                <CFormGroup row>\r\n                                    <CCol md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={() => this.editStu(this.state.no)}>수정</CButton>\r\n                                    </CCol>\r\n                                    <CCol xs=\"12\" md=\"3\">\r\n                                    <CButton block color=\"secondary\" onClick={() => this.delStu(this.state.no)}>삭제</CButton>\r\n                                    </CCol>\r\n                                </CFormGroup>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Student;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Student\\Students.js",["546","547","548","549","550"],"import React,{ Component } from \"react\";\r\nimport './table.css';\r\nimport { Link } from 'react-router-dom';\r\nimport ApiService from \"../../ApiService\";\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CRow\r\n  } from '@coreui/react'\r\n\r\nclass Students extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            StudentList: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getApi();\r\n    }\r\n\r\n    getApi = () => {\r\n        ApiService.Students()\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    StudentList : res.data.listdata\r\n                })\r\n            })\r\n            .catch(res => console.log(res))\r\n    }\r\n\r\n    selStu = (NO) => {\r\n        console.log(NO)\r\n        window.localStorage.setItem(\"StudentNO\", NO);\r\n        this.props.history.push('/student');\r\n    }\r\n\r\n    render() {\r\n        const { StudentList } =  this.state;\r\n        console.log(StudentList);\r\n        return (\r\n            <div>\r\n            <table>\r\n            \r\n            <tr><td>no</td><td>name</td><td>hp</td><td>email</td><td>birth</td><td>address</td><td>curri</td>\r\n            <td>gender</td><td>regdate</td><td></td></tr>\r\n           \r\n            \r\n                {StudentList&&StudentList.map((itemdata, insertIndex) => {\r\n                    return (\r\n                    <tr>\r\n                    <td>{itemdata.no}</td>\r\n                    <td>{itemdata.name}</td>\r\n                    <td>{itemdata.hp}</td>\r\n                    <td>{itemdata.email}</td>\r\n                    <td>{itemdata.birth}</td>\r\n                    <td>{itemdata.address}</td>\r\n                    <td>{itemdata.curri}</td>\r\n                    <td>{itemdata.gender}</td>\r\n                    <td>{itemdata.regdate}</td>\r\n                    <td width =\"80\"><CButton block color=\"secondary\" onClick={() => this.selStu(itemdata.no)}>상세</CButton></td>\r\n                    </tr>\r\n                    );\r\n                })}\r\n            <tr><td>\r\n                <Link to={\"/ins_stu\"}>학생등록하기</Link>\r\n                </td></tr>\r\n            </table>\r\n            </div>\r\n        );\r\n \r\n    }\r\n\r\n}\r\n\r\nexport default Students;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\Widgets.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\dashboard\\Dashboard.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\Charts.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\typography\\Typography.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\badges\\Badges.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\modals\\Modals.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\theme\\colors\\Colors.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\alerts\\Alerts.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\notifications\\toaster\\Toaster.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\flags\\Flags.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\coreui-icons\\CoreUIIcons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\icons\\brands\\Brands.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-groups\\ButtonGroups.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\brand-buttons\\BrandButtons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tooltips\\Tooltips.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\buttons\\buttons\\Buttons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\switches\\Switches.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tabs\\Tabs.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\paginations\\Pagnations.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\progress-bar\\ProgressBar.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\popovers\\Popovers.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navbars\\Navbars.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\navs\\Navs.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\list-groups\\ListGroups.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\carousels\\Carousels.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\forms\\BasicForms.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\collapses\\Collapses.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\breadcrumbs\\Breadcrumbs.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\cards\\Cards.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\jumbotrons\\Jumbotrons.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\base\\tables\\Tables.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\users\\UsersData.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsBrand.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\widgets\\WidgetsDropdown.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\MainChartExample.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartBarSimple.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\Template\\charts\\ChartLineSimple.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\index.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\reusable\\DocsLink.js",[],["551","552"],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notice.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeWrite.js",["553"],"import React from 'react'\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, withStyles, Grid} from \"@material-ui/core\";\r\nimport {CCol, CFormGroup, CInput, CTextarea} from '@coreui/react'\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n    display: 'none'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 210,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nclass NoticeWrite extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.noticeWrite = this.noticeWrite.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.noticeWrite()\r\n    this.setState({\r\n      section: '',\r\n      title: '',\r\n      content: ''\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.title] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let nextState = {};\r\n    nextState[event.target.name] = event.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  noticeWrite() {\r\n    axios({\r\n      url: 'http://localhost:8080/notice',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        section: this.state.section,\r\n        title: this.state.title,\r\n        content: this.state.content\r\n      }\r\n    })\r\n      .then(function (response){\r\n        console.log(response)\r\n      })\r\n      .catch(function (error){\r\n        console.log(error)\r\n      })\r\n  }\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      section: '',\r\n      title : '',\r\n      content: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n  \r\n    return (\r\n      <div>\r\n        <Grid container justify=\"flex-end\">\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>글쓰기</Button>\r\n        </Grid>\r\n        <Dialog open={this.state.open} onClose={this.handleClose} fullWidth={true} maxWidth = {'xs'}>\r\n          <DialogTitle>공 지 사 항</DialogTitle>\r\n\r\n          <DialogContent>\r\n            <Grid>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">구분</InputLabel>\r\n                <Select\r\n                    native\r\n                    value={this.state.section}\r\n                    onChange={this.handleChange}\r\n                    label=\"구분\"\r\n                    inputProps={{ name: 'section', id: 'outlined-age-native-simple',}}>\r\n                      <option aria-label=\"None\" value=\"section\" />\r\n                      <option value={\"공지\"}>공지</option>\r\n                      <option value={\"결혼\"}>결혼</option>\r\n                      <option value={\"출산\"}>출산</option>\r\n                      <option value={\"입양\"}>입양</option>\r\n                      <option value={\"사망\"}>사망</option>\r\n                </Select>\r\n              </FormControl>\r\n              </Grid>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                <CCol xs=\"12\" md=\"9\">\r\n                  <TextField label=\"제목\" type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange}/><br/>\r\n                </CCol>\r\n              </CFormGroup>\r\n              <br></br>\r\n              <CFormGroup row>\r\n                  <CCol xs=\"12\" md=\"9\">\r\n                    <CTextarea \r\n                      name=\"content\" \r\n                      id=\"textarea-input\" \r\n                      rows=\"9\"\r\n                      placeholder=\"...\" \r\n                      value={this.state.content} onChange={this.handleChange}\r\n                    />\r\n                  </CCol>\r\n                </CFormGroup>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>글등록</Button>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n            </DialogActions>\r\n          </DialogContent>\r\n        \r\n          </Dialog>\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(NoticeWrite)\r\n\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\receive\\receive.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\Room.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\Part.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomAdd.js",["554","555"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CCol, CFormGroup, CInput, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, IconButton, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass RoomAdd extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name: \"\",\r\n      branch: \"\",\r\n\r\n    }\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.addRoom = this.addRoom.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.branchSelect = this.branchSelect.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/lecture/branches\")\r\n      .then(res => {\r\n        this.setState({\r\n          branchList: res.data.list\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.addRoom()\r\n    this.setState({\r\n      branch: '',\r\n      max_person: '',\r\n      name: '',\r\n    })\r\n    alert(\"등록되었습니다.\");\r\n    this.props.stateRefresh();\r\n    this.handleClose()\r\n    /*this.props.history.push('/lecture')*/\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  addRoom() {\r\n    axios({\r\n      url: 'http://localhost:8080/room',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        branch: this.state.branch,\r\n        max_person: this.state.max_person,\r\n        name: this.state.name,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      branch:this.props.branch,\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      branch: '',\r\n      max_person: '',\r\n      name: '',\r\n      roomList: '',\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  branchSelect = (e) => {\r\n    this.setState({\r\n      branch: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {branchList} = this.state;\r\n    return (\r\n      <div>\r\n          <Button color=\"primary\" onClick={this.handleClickOpen}>추가</Button>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            강의실 등록</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.branchSelect} defaultValue={this.props.branch} >\r\n                    <option value=\"\">지점</option>\r\n                    {branchList && branchList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n            <CFormGroup>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"name\">강의실명</CLabel>\r\n                  <CInput type=\"text\" id=\"name\" name=\"name\" placeholder=\"강의실명\" value={this.state.name}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              </CRow>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CLabel htmlFor=\"name\">최대인원수</CLabel>\r\n                <CInput type=\"text\" id=\"max_person\" name=\"max_person\" placeholder=\"숫자만 입력하세요\" value={this.state.max_person}\r\n                        onChange={this.handleValueChange}/>\r\n              </CCol>\r\n              </CRow>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>등록</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoomAdd)\r\n\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\room\\RoomUpdate.js",["556","557","558"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CButton, CCol, CFormGroup, CInput, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, IconButton, Select, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RoomDelete from \"./RoomDelete\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass RoomUpdate extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name: \"\",\r\n      branch:\"\",\r\n\r\n    }\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.updateRoom = this.updateRoom.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.branchSelect = this.branchSelect.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi()\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/lecture/branches\")\r\n      .then(res => {\r\n        this.setState({\r\n          branchList: res.data.list\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    this.updateRoom()\r\n    this.setState({\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name: \"\",\r\n      branch:\"\",\r\n    })\r\n    alert(\"수정되었습니다.\");\r\n    this.props.stateRefresh();\r\n    this.handleClose()\r\n    /*this.props.history.push('/lecture')*/\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  updateRoom() {\r\n    axios({\r\n      url: 'http://localhost:8080/room/' + this.props.roomDetail.no,\r\n      method: \"PUT\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        branch: this.state.branch,\r\n        max_person: this.state.max_person,\r\n        name: this.state.name,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleClickOpen() {\r\n    if(this.props.roomDetail !== '') {\r\n      this.setState({\r\n        branch:this.props.roomDetail.branch,\r\n        max_person: this.props.roomDetail.max_person,\r\n        name: this.props.roomDetail.name,\r\n        open: true,\r\n      });\r\n    }else{\r\n      alert(\"수정항목을 선택하세요\")\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      branchList:\"\",\r\n      max_person: \"\",\r\n      name:\"\",\r\n      branch:\"\",\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  branchSelect = (e) => {\r\n    this.setState({\r\n      branch: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {branchList} = this.state;\r\n\r\n    return (\r\n      <div>\r\n          <Button onClick={this.handleClickOpen}>수정</Button>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            강의실 수정</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.branchSelect} defaultValue={this.props.branch} disabled={true}>\r\n                    <option value=\"\">지점</option>\r\n                    {branchList && branchList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n            <CFormGroup>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"name\">강의실명</CLabel>\r\n                  <CInput type=\"text\" id=\"name\" name=\"name\" placeholder=\"강의실명\" defaultValue={this.props.roomDetail.name}\r\n                          onChange={this.handleValueChange}/>\r\n                </CFormGroup>\r\n              </CCol>\r\n              </CRow>\r\n              <CRow>\r\n              <CCol xs=\"10\">\r\n                <CLabel htmlFor=\"name\">최대인원수</CLabel>\r\n                <CInput type=\"text\" id=\"max_person\" name=\"max_person\" placeholder=\"숫자만 입력하세요\" defaultValue={this.props.roomDetail.max_person}\r\n                        onChange={this.handleValueChange}/>\r\n              </CCol>\r\n              </CRow>\r\n            </CFormGroup>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>수정완료</Button>\r\n          </DialogActions>\r\n\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(RoomUpdate)\r\n\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\part\\PartUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\Score.js",["559","560"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './table.css';\r\nimport {CCol, CForm, CSelect} from \"@coreui/react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, Grid, IconButton} from \"@material-ui/core\";\r\nimport Exam from \"../exam/Exam\";\r\nimport ScoreEdit from \"./ScoreEdit\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ScoreTotal from \"./ScoreTotal\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nclass Score extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      studentList: \"\",\r\n      lectureList: \"\",\r\n      teacher: 1,\r\n      lecture: \"\",\r\n      examList: \"\",\r\n      scoreArray: [],\r\n      disabled: true,\r\n      title: \"수정\",\r\n      totalWeight: \"\",\r\n    }\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.editScore = this.editScore.bind(this);\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  stateRefresh() {\r\n    this.setState({\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n    });\r\n    this.getLecture();\r\n  }\r\n\r\n\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getLecture() {\r\n    axios.get(\"http://localhost:8080/score/\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value,\r\n      studentList: \"\",\r\n      scoreArray: [],\r\n      examList: \"\",\r\n      totalWeight: \"\",\r\n      disabled: true,\r\n    })\r\n    axios.get(\"http://localhost:8080/score/\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          studentList: res.data.studentList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight: res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    if (this.state.disabled) {\r\n      this.setState({\r\n        disabled: false,\r\n      })\r\n    } else {\r\n      if (this.state.scoreArray.length > 0) {\r\n        this.editScore()\r\n        this.setState({\r\n          studentList: \"\",\r\n          scoreArray: [],\r\n          examList: \"\",\r\n          totalWeight: \"\",\r\n          disabled: true,\r\n        })\r\n        alert(\"등록되었습니다.\");\r\n        this.stateRefresh();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  editScore() {\r\n    axios({\r\n      url: 'http://localhost:8080/score',\r\n      method: \"POST\",\r\n      headers: {'content-type': 'application/json'},\r\n      data: {\r\n        scoreArray: this.state.scoreArray,\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(response)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  setData(scoreArray) {\r\n    let no\r\n    let exam\r\n    let lecture\r\n    let score\r\n    let student\r\n    let regdate = new Date();\r\n    let array = this.state.scoreArray;\r\n    let index = scoreArray.findIndex(isScore);\r\n\r\n    function isScore(element) {\r\n      if (element.exam === exam && element.lecture === lecture && element.student === student) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    scoreArray.map((scoreList) => {\r\n      exam = scoreList.exam;\r\n      lecture = scoreList.lecture;\r\n      score = scoreList.score;\r\n      student = scoreList.student;\r\n      no = scoreList.no;\r\n    })\r\n\r\n    if (score === \"\") {\r\n      score = 0;\r\n    }\r\n\r\n    if (index > -1) {\r\n      array[index].score = score;\r\n      array[index].regdate = regdate;\r\n    } else {\r\n      if (no === \"\") {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n        })\r\n      } else {\r\n        array.push({\r\n          student: student,\r\n          lecture: lecture,\r\n          score: score,\r\n          exam: exam,\r\n          regdate: regdate,\r\n          no: no,\r\n        })\r\n      }\r\n    }\r\n    this.setState({\r\n      scoreArray: array,\r\n    })\r\n    console.log(array)\r\n  }\r\n\r\n  render() {\r\n    const {studentList} = this.state;\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state\r\n    let name = \"수정\"\r\n    if (this.state.disabled) {\r\n      name = \"수정\"\r\n    } else {\r\n      name = \"수정완료\"\r\n    }\r\n    return (\r\n      <div>\r\n        <header>\r\n          <CForm inline>\r\n            <CSelect custom id=\"lecture\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n              <option value=\"\">강의</option>\r\n              {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n              })}\r\n            </CSelect>\r\n            <Grid container justify=\"flex-end\">\r\n              <Exam stateRefresh={this.stateRefresh} teacher={this.state.teacher}/>\r\n            </Grid>\r\n          </CForm>\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <IconButton aria-label=\"refresh\" onClick={this.stateRefresh}><RefreshIcon/></IconButton>\r\n          </Grid>\r\n        </header>\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <td>NO</td>\r\n            <td width=\"10%\">학생명</td>\r\n            {examList && examList.map((itemdata) => {\r\n              return (<td>{itemdata.name}&nbsp;({itemdata.weight}%)</td>);\r\n            })}\r\n            <td bgcolor=\"#eee8aa\">총점&nbsp;({this.state.totalWeight}%)</td>\r\n          </tr>\r\n          <tr>\r\n\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n          {studentList && studentList.map((itemdata, insertIndex) => {\r\n            return (\r\n              <tr>\r\n                <td key={insertIndex}>{itemdata.no}</td>\r\n                <td>{itemdata.name}</td>\r\n                {\r\n                  examList && examList.map((examdata) => {\r\n                    return (\r\n                      <td key={examdata.no}>\r\n                        <ScoreEdit\r\n                          id={itemdata.no}\r\n                          lecture={this.state.lecture}\r\n                          exam={examdata.no}\r\n                          setData={this.setData}\r\n                          disabled={this.state.disabled}/>\r\n                      </td>);\r\n                  })\r\n                }\r\n                <td bgcolor=\"#eee8aa\"><ScoreTotal\r\n                  id={itemdata.no}\r\n                  lecture={this.state.lecture}/></td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          </tbody>\r\n        </table>\r\n        {studentList.length === 0 &&\r\n        <div align=\"center\">\r\n          <p>검색결과가 없습니다</p>\r\n          <hr></hr>\r\n        </div>\r\n        }\r\n        <br/>\r\n        <Grid container justify=\"flex-end\">\r\n          {studentList.length > 0 &&\r\n          <CCol md=\"1\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>{name}</Button>\r\n          </CCol>\r\n          }\r\n          {this.state.disabled === false &&\r\n          <Button variant=\"contained\" onClick={this.stateRefresh}>취소</Button>\r\n          }\r\n        </Grid>\r\n        <br/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreTotal.js",["561"],"import React from 'react'\r\nimport {CFormGroup, CInput} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\n\r\nclass ScoreTotal extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      student :this.props.id,\r\n      lecture :this.props.lecture,\r\n      totalScore:\"\",\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/score-total?student=\"+this.props.id+\"&lecture=\"+this.props.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          totalScore: res.data.totalScore,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(\"test\")\r\n    return (\r\n      <div>\r\n        <CInput type=\"text\"\r\n                id=\"totalScore\"\r\n                name=\"totalScore\"\r\n                defaultValue={this.state.totalScore}\r\n                disabled={true}\r\n        />\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\nexport default ScoreTotal\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\score\\ScoreEdit.js",["562"],"import React from 'react'\r\nimport {CFormGroup, CInput} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\n\r\nclass ScoreEdit extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      scoreList:\"\",\r\n      student :this.props.id,\r\n      lecture :this.props.lecture,\r\n      score:\"\",\r\n      exam:this.props.exam,\r\n      disabled:this.props.disabled,\r\n      no:\"\",\r\n    }\r\n\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.setScoreArray = this.setScoreArray.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  getApi = () => {\r\n    axios.get(\"http://localhost:8080/score?student=\"+this.props.id+\"&lecture=\"+this.props.lecture+\"&exam=\"+this.props.exam)\r\n\r\n      .then(res => {\r\n        this.setState({\r\n          scoreList : res.data.scoreList,\r\n          no : res.data.scoreList.no,\r\n          score : res.data.scoreList.score,\r\n        })\r\n\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n  handleNumChange(evt) {\r\n    const score = (evt.target.validity.valid) ? evt.target.value : this.state.score;\r\n    this.setState({ score });\r\n  }\r\n\r\n  setScoreArray(){\r\n    const scoreArray=[];\r\n    scoreArray.push({\r\n      student :this.state.student,\r\n      lecture :this.state.lecture,\r\n      score:this.state.score,\r\n      exam:this.state.exam,\r\n      no:this.state.no,\r\n    })\r\n    this.props.setData(scoreArray)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n            <CInput onBlur={(e) => {\r\n              this.setScoreArray();\r\n            }} name=\"score\"\r\n                    placeholder=\"점수\"\r\n                    pattern=\"[0-9]*\"\r\n                    value={this.state.score}\r\n                    disabled={this.props.disabled}\r\n                    onInput={this.handleNumChange.bind(this)}\r\n                    />\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\nexport default ScoreEdit\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\Exam.js",["563","564","565"],"import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport {CButton, CCardHeader, CCol, CForm, CFormGroup, CLabel, CRow, CSelect} from '@coreui/react'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport {Dialog, Grid, IconButton, Select, withStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExamAdd from \"./ExamAdd\";\r\nimport ExamUpdate from \"./ExamUpdate\";\r\nimport ExamDelete from \"./ExamDelete\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    paddingRight:theme.spacing(10)\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nclass Exam extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lectureList: \"\",\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n    }\r\n\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleClickOpen = this.handleClickOpen.bind(this)\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.lectureSelect = this.lectureSelect.bind(this);\r\n    this.stateRefresh = this.stateRefresh.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getApi();\r\n\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(this.props.id !== prevProps.id)\r\n    {\r\n      this.getDetail()\r\n    }\r\n  }\r\n  getApi() {\r\n    axios.get(\"http://localhost:8080/teacher/\" + this.state.teacher)\r\n      .then(res => {\r\n        this.setState({\r\n          lectureList: res.data.lectureList,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getExam = () => {\r\n    axios.get(\"http://localhost:8080/exam?lecture=\"+this.state.lecture)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n  getDetail = () => {\r\n    axios.get(\"http://localhost:8080/exam/\"+this.state.exam)\r\n      .then(res => {\r\n        if(res.data.list !== null){\r\n          this.setState({\r\n            partDetail: res.data.list,\r\n          })}else{this.setState({\r\n          partDetail:\"\",\r\n        })}\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n\r\n  handleClickOpen() {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  }\r\n\r\n  handleClose() {\r\n\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      teacher: this.props.teacher,\r\n      exam: \"\",\r\n      lecture: \"\",\r\n      totalWeight:\"\",\r\n      open: false\r\n    })\r\n    this.props.stateRefresh();\r\n  }\r\n\r\n  lectureSelect = (e) => {\r\n    this.setState({\r\n      lecture: e.target.value\r\n    })\r\n    axios.get(\"http://localhost:8080/exam?lecture=\" + e.target.value)\r\n      .then(res => {\r\n        this.setState({\r\n          examList: res.data.list,\r\n          totalWeight:res.data.totalWeight,\r\n        })\r\n      })\r\n      .catch(res => console.log(res))\r\n  }\r\n\r\n\r\n  stateRefresh() {\r\n    console.log(\"refresh\")\r\n    this.setState({\r\n      examList: \"\",\r\n      examDetail: \"\",\r\n      exam: \"\",\r\n      totalWeight:\"\",\r\n    });\r\n    this.getExam();\r\n    this.getDetail();\r\n\r\n  }\r\n\r\n  render() {\r\n    const {lectureList} = this.state;\r\n    const {examList} = this.state;\r\n    const {examDetail} = this.state;\r\n    const handleChangeMultiple = (event) => {\r\n      const {options} = event.target;\r\n      const value = [];\r\n      for (let i = 0, l = options.length; i < l; i += 1) {\r\n        if (options[i].selected) {\r\n          value.push(options[i].value);\r\n        }\r\n      }\r\n      axios.get(\"http://localhost:8080/exam/\"+ value)\r\n        .then(res => {\r\n          this.setState({\r\n            examDetail: res.data.list,\r\n            exam: value,\r\n          })\r\n        })\r\n        .catch(res => console.log(res))\r\n    };\r\n    return (\r\n      <div>\r\n        <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n          <CButton color=\"primary\" color=\"danger\" onClick={this.handleClickOpen}>시험항목 관리</CButton>\r\n        </CCol>\r\n        <Dialog onClose={this.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.state.open}>\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            시험항목 조회</DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <CSelect custom id=\"branch\" onChange={this.lectureSelect} value={this.state.lecture}>\r\n                    <option value=\"\">강의</option>\r\n                    {lectureList && lectureList.map((itemdata, insertIndex) => {\r\n                      return (<option value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}</option>);\r\n                    })}\r\n                  </CSelect><br/>\r\n                </CFormGroup>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Button onClick={this.stateRefresh}>새로고침</Button>\r\n                </Grid>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                  <Select\r\n                    multiple\r\n                    native\r\n                    onChange={handleChangeMultiple} value={this.state.exam}\r\n\r\n                  >\r\n                    {examList && examList.map((itemdata, insertIndex) => {\r\n                      return (<option\r\n                        value={itemdata.no}>{insertIndex + 1}.&nbsp;{itemdata.name}&nbsp;({itemdata.weight}%)</option>);\r\n                    })}\r\n                  </Select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup row>\r\n                  <CCol md=\"6\">\r\n                    <CLabel>가중치 합계</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <p className=\"form-control-static\">{this.state.totalWeight}%</p>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n\r\n          </DialogContent>\r\n          {examList.length !== 0 &&\r\n          <DialogActions>\r\n            <ExamAdd stateRefresh={this.stateRefresh} lecture={this.state.lecture} teacher={this.state.teacher}/>\r\n            <ExamUpdate stateRefresh={this.stateRefresh} teacher={this.state.teacher} examDetail={examDetail}/>\r\n            <ExamDelete stateRefresh={this.stateRefresh} id={this.state.exam}/>\r\n          </DialogActions>\r\n          }\r\n        </Dialog>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Exam)\r\n\r\n\r\n","C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamAdd.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamUpdate.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\exam\\ExamDelete.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\Notices.js",[],"C:\\Eight\\AcademyERP-Project\\frontend\\my-app\\src\\views\\notice\\NoticeUpdate.js",[],{"ruleId":"566","replacedBy":"567"},{"ruleId":"568","replacedBy":"569"},{"ruleId":"570","severity":1,"message":"571","line":1,"column":8,"nodeType":"572","messageId":"573","endLine":1,"endColumn":13},{"ruleId":"574","severity":1,"message":"575","line":3,"column":1,"nodeType":"576","endLine":273,"endColumn":2},{"ruleId":"570","severity":1,"message":"577","line":28,"column":12,"nodeType":"572","messageId":"573","endLine":28,"endColumn":24},{"ruleId":"570","severity":1,"message":"578","line":28,"column":39,"nodeType":"572","messageId":"573","endLine":28,"endColumn":43},{"ruleId":"570","severity":1,"message":"579","line":10,"column":35,"nodeType":"572","messageId":"573","endLine":10,"endColumn":49},{"ruleId":"570","severity":1,"message":"580","line":114,"column":9,"nodeType":"572","messageId":"573","endLine":114,"endColumn":14},{"ruleId":"581","severity":1,"message":"582","line":165,"column":47,"nodeType":"583","messageId":"584","endLine":165,"endColumn":48},{"ruleId":"570","severity":1,"message":"585","line":6,"column":18,"nodeType":"572","messageId":"573","endLine":6,"endColumn":22},{"ruleId":"570","severity":1,"message":"586","line":6,"column":39,"nodeType":"572","messageId":"573","endLine":6,"endColumn":43},{"ruleId":"570","severity":1,"message":"587","line":9,"column":8,"nodeType":"572","messageId":"573","endLine":9,"endColumn":19},{"ruleId":"570","severity":1,"message":"588","line":13,"column":5,"nodeType":"572","messageId":"573","endLine":13,"endColumn":14},{"ruleId":"570","severity":1,"message":"589","line":14,"column":5,"nodeType":"572","messageId":"573","endLine":14,"endColumn":18},{"ruleId":"570","severity":1,"message":"590","line":15,"column":5,"nodeType":"572","messageId":"573","endLine":15,"endColumn":18},{"ruleId":"570","severity":1,"message":"591","line":16,"column":5,"nodeType":"572","messageId":"573","endLine":16,"endColumn":20},{"ruleId":"570","severity":1,"message":"592","line":17,"column":5,"nodeType":"572","messageId":"573","endLine":17,"endColumn":10},{"ruleId":"570","severity":1,"message":"593","line":20,"column":5,"nodeType":"572","messageId":"573","endLine":20,"endColumn":14},{"ruleId":"570","severity":1,"message":"594","line":21,"column":5,"nodeType":"572","messageId":"573","endLine":21,"endColumn":19},{"ruleId":"570","severity":1,"message":"595","line":22,"column":5,"nodeType":"572","messageId":"573","endLine":22,"endColumn":21},{"ruleId":"570","severity":1,"message":"596","line":23,"column":5,"nodeType":"572","messageId":"573","endLine":23,"endColumn":14},{"ruleId":"570","severity":1,"message":"597","line":25,"column":5,"nodeType":"572","messageId":"573","endLine":25,"endColumn":15},{"ruleId":"570","severity":1,"message":"579","line":26,"column":5,"nodeType":"572","messageId":"573","endLine":26,"endColumn":19},{"ruleId":"570","severity":1,"message":"598","line":27,"column":5,"nodeType":"572","messageId":"573","endLine":27,"endColumn":16},{"ruleId":"570","severity":1,"message":"599","line":28,"column":5,"nodeType":"572","messageId":"573","endLine":28,"endColumn":16},{"ruleId":"570","severity":1,"message":"600","line":29,"column":5,"nodeType":"572","messageId":"573","endLine":29,"endColumn":22},{"ruleId":"570","severity":1,"message":"601","line":30,"column":5,"nodeType":"572","messageId":"573","endLine":30,"endColumn":23},{"ruleId":"570","severity":1,"message":"602","line":31,"column":5,"nodeType":"572","messageId":"573","endLine":31,"endColumn":14},{"ruleId":"570","severity":1,"message":"603","line":32,"column":5,"nodeType":"572","messageId":"573","endLine":32,"endColumn":20},{"ruleId":"570","severity":1,"message":"604","line":36,"column":5,"nodeType":"572","messageId":"573","endLine":36,"endColumn":12},{"ruleId":"570","severity":1,"message":"588","line":11,"column":5,"nodeType":"572","messageId":"573","endLine":11,"endColumn":14},{"ruleId":"570","severity":1,"message":"589","line":12,"column":5,"nodeType":"572","messageId":"573","endLine":12,"endColumn":18},{"ruleId":"570","severity":1,"message":"590","line":13,"column":5,"nodeType":"572","messageId":"573","endLine":13,"endColumn":18},{"ruleId":"570","severity":1,"message":"591","line":14,"column":5,"nodeType":"572","messageId":"573","endLine":14,"endColumn":20},{"ruleId":"570","severity":1,"message":"592","line":15,"column":5,"nodeType":"572","messageId":"573","endLine":15,"endColumn":10},{"ruleId":"570","severity":1,"message":"594","line":19,"column":5,"nodeType":"572","messageId":"573","endLine":19,"endColumn":19},{"ruleId":"570","severity":1,"message":"595","line":20,"column":5,"nodeType":"572","messageId":"573","endLine":20,"endColumn":21},{"ruleId":"570","severity":1,"message":"596","line":21,"column":5,"nodeType":"572","messageId":"573","endLine":21,"endColumn":14},{"ruleId":"570","severity":1,"message":"597","line":23,"column":5,"nodeType":"572","messageId":"573","endLine":23,"endColumn":15},{"ruleId":"570","severity":1,"message":"579","line":24,"column":5,"nodeType":"572","messageId":"573","endLine":24,"endColumn":19},{"ruleId":"570","severity":1,"message":"598","line":25,"column":5,"nodeType":"572","messageId":"573","endLine":25,"endColumn":16},{"ruleId":"570","severity":1,"message":"599","line":26,"column":5,"nodeType":"572","messageId":"573","endLine":26,"endColumn":16},{"ruleId":"570","severity":1,"message":"600","line":27,"column":5,"nodeType":"572","messageId":"573","endLine":27,"endColumn":22},{"ruleId":"570","severity":1,"message":"601","line":28,"column":5,"nodeType":"572","messageId":"573","endLine":28,"endColumn":23},{"ruleId":"570","severity":1,"message":"602","line":29,"column":5,"nodeType":"572","messageId":"573","endLine":29,"endColumn":14},{"ruleId":"570","severity":1,"message":"603","line":30,"column":5,"nodeType":"572","messageId":"573","endLine":30,"endColumn":20},{"ruleId":"570","severity":1,"message":"604","line":34,"column":5,"nodeType":"572","messageId":"573","endLine":34,"endColumn":12},{"ruleId":"570","severity":1,"message":"605","line":10,"column":5,"nodeType":"572","messageId":"573","endLine":10,"endColumn":16},{"ruleId":"570","severity":1,"message":"588","line":13,"column":5,"nodeType":"572","messageId":"573","endLine":13,"endColumn":14},{"ruleId":"570","severity":1,"message":"589","line":14,"column":5,"nodeType":"572","messageId":"573","endLine":14,"endColumn":18},{"ruleId":"570","severity":1,"message":"590","line":15,"column":5,"nodeType":"572","messageId":"573","endLine":15,"endColumn":18},{"ruleId":"570","severity":1,"message":"591","line":16,"column":5,"nodeType":"572","messageId":"573","endLine":16,"endColumn":20},{"ruleId":"570","severity":1,"message":"592","line":17,"column":5,"nodeType":"572","messageId":"573","endLine":17,"endColumn":10},{"ruleId":"570","severity":1,"message":"593","line":20,"column":5,"nodeType":"572","messageId":"573","endLine":20,"endColumn":14},{"ruleId":"570","severity":1,"message":"594","line":21,"column":5,"nodeType":"572","messageId":"573","endLine":21,"endColumn":19},{"ruleId":"570","severity":1,"message":"595","line":22,"column":5,"nodeType":"572","messageId":"573","endLine":22,"endColumn":21},{"ruleId":"570","severity":1,"message":"596","line":23,"column":5,"nodeType":"572","messageId":"573","endLine":23,"endColumn":14},{"ruleId":"570","severity":1,"message":"606","line":24,"column":5,"nodeType":"572","messageId":"573","endLine":24,"endColumn":11},{"ruleId":"570","severity":1,"message":"597","line":25,"column":5,"nodeType":"572","messageId":"573","endLine":25,"endColumn":15},{"ruleId":"570","severity":1,"message":"579","line":26,"column":5,"nodeType":"572","messageId":"573","endLine":26,"endColumn":19},{"ruleId":"570","severity":1,"message":"598","line":27,"column":5,"nodeType":"572","messageId":"573","endLine":27,"endColumn":16},{"ruleId":"570","severity":1,"message":"599","line":28,"column":5,"nodeType":"572","messageId":"573","endLine":28,"endColumn":16},{"ruleId":"570","severity":1,"message":"600","line":29,"column":5,"nodeType":"572","messageId":"573","endLine":29,"endColumn":22},{"ruleId":"570","severity":1,"message":"601","line":30,"column":5,"nodeType":"572","messageId":"573","endLine":30,"endColumn":23},{"ruleId":"570","severity":1,"message":"602","line":31,"column":5,"nodeType":"572","messageId":"573","endLine":31,"endColumn":14},{"ruleId":"570","severity":1,"message":"603","line":32,"column":5,"nodeType":"572","messageId":"573","endLine":32,"endColumn":20},{"ruleId":"570","severity":1,"message":"607","line":34,"column":5,"nodeType":"572","messageId":"573","endLine":34,"endColumn":12},{"ruleId":"570","severity":1,"message":"604","line":36,"column":5,"nodeType":"572","messageId":"573","endLine":36,"endColumn":12},{"ruleId":"570","severity":1,"message":"608","line":38,"column":10,"nodeType":"572","messageId":"573","endLine":38,"endColumn":15},{"ruleId":"570","severity":1,"message":"609","line":39,"column":12,"nodeType":"572","messageId":"573","endLine":39,"endColumn":20},{"ruleId":"570","severity":1,"message":"610","line":7,"column":5,"nodeType":"572","messageId":"573","endLine":7,"endColumn":10},{"ruleId":"570","severity":1,"message":"611","line":8,"column":5,"nodeType":"572","messageId":"573","endLine":8,"endColumn":14},{"ruleId":"570","severity":1,"message":"612","line":9,"column":5,"nodeType":"572","messageId":"573","endLine":9,"endColumn":16},{"ruleId":"570","severity":1,"message":"585","line":10,"column":5,"nodeType":"572","messageId":"573","endLine":10,"endColumn":9},{"ruleId":"570","severity":1,"message":"586","line":11,"column":5,"nodeType":"572","messageId":"573","endLine":11,"endColumn":9},{"ruleId":"566","replacedBy":"613"},{"ruleId":"568","replacedBy":"614"},{"ruleId":"570","severity":1,"message":"606","line":4,"column":27,"nodeType":"572","messageId":"573","endLine":4,"endColumn":33},{"ruleId":"570","severity":1,"message":"615","line":12,"column":8,"nodeType":"572","messageId":"573","endLine":12,"endColumn":16},{"ruleId":"570","severity":1,"message":"616","line":13,"column":8,"nodeType":"572","messageId":"573","endLine":13,"endColumn":12},{"ruleId":"570","severity":1,"message":"617","line":4,"column":9,"nodeType":"572","messageId":"573","endLine":4,"endColumn":16},{"ruleId":"570","severity":1,"message":"618","line":10,"column":29,"nodeType":"572","messageId":"573","endLine":10,"endColumn":35},{"ruleId":"570","severity":1,"message":"619","line":12,"column":8,"nodeType":"572","messageId":"573","endLine":12,"endColumn":18},{"ruleId":"570","severity":1,"message":"620","line":13,"column":7,"nodeType":"572","messageId":"573","endLine":13,"endColumn":16},{"ruleId":"621","severity":1,"message":"622","line":175,"column":32,"nodeType":"623","messageId":"624","endLine":175,"endColumn":34},{"ruleId":"570","severity":1,"message":"625","line":2,"column":9,"nodeType":"572","messageId":"573","endLine":2,"endColumn":19},{"ruleId":"570","severity":1,"message":"625","line":2,"column":9,"nodeType":"572","messageId":"573","endLine":2,"endColumn":19},{"ruleId":"570","severity":1,"message":"612","line":4,"column":18,"nodeType":"572","messageId":"573","endLine":4,"endColumn":29},{"ruleId":"570","severity":1,"message":"626","line":4,"column":37,"nodeType":"572","messageId":"573","endLine":4,"endColumn":42},{"ruleId":"627","severity":1,"message":"628","line":204,"column":36,"nodeType":"629","endLine":204,"endColumn":50},"no-native-reassign",["630"],"no-negated-in-lhs",["631"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'employeeList' is assigned a value but never used.","'size' is assigned a value but never used.","'CInputCheckbox' is defined but never used.","'route' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'CCol' is defined but never used.","'CRow' is defined but never used.","'LectureRoom' is defined but never used.","'CCollapse' is defined but never used.","'CDropdownItem' is defined but never used.","'CDropdownMenu' is defined but never used.","'CDropdownToggle' is defined but never used.","'CFade' is defined but never used.","'CFormText' is defined but never used.","'CValidFeedback' is defined but never used.","'CInvalidFeedback' is defined but never used.","'CTextarea' is defined but never used.","'CInputFile' is defined but never used.","'CInputRadio' is defined but never used.","'CInputGroup' is defined but never used.","'CInputGroupAppend' is defined but never used.","'CInputGroupPrepend' is defined but never used.","'CDropdown' is defined but never used.","'CInputGroupText' is defined but never used.","'CSwitch' is defined but never used.","'CCardFooter' is defined but never used.","'CInput' is defined but never used.","'CSelect' is defined but never used.","'CIcon' is defined but never used.","'DocsLink' is defined but never used.","'CCard' is defined but never used.","'CCardBody' is defined but never used.","'CCardHeader' is defined but never used.",["630"],["631"],"'SaveIcon' is defined but never used.","'Icon' is defined but never used.","'CButton' is defined but never used.","'Select' is defined but never used.","'RoomDelete' is defined but never used.","'useStyles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'CFormGroup' is defined but never used.","'CForm' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]
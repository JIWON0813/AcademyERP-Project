<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<<<<<<< HEAD
<mapper namespace="com.example.demo.database.Repository.DBInterface">
    <select id="att" resultType="DTO">
        SELECT a.`no`,a.employee_no,a.DAY,department,NAME,rank,a.start_time,a.end_time,a.night FROM attendance a inner join employee b ON  a.employee_no=b.`no` ORDER BY no ASC
    </select>

    <select id="attfind" resultType="DTO">
        SELECT a.`no`,a.employee_no,a.DAY,department,NAME,rank,a.start_time,a.end_time,a.night FROM attendance a inner join employee b ON  a.employee_no=b.`no` where date(a.day) = date(#{day}) and name like CONCAT('%',#{name},'%') and department like CONCAT('%',#{dep},'%') ORDER BY no ASC
    </select>

    <select id="attfind2" resultType="DTO">
        SELECT a.`no`,a.employee_no,a.DAY,department,NAME,rank,a.start_time,a.end_time,a.night FROM attendance a inner join employee b ON  a.employee_no=b.`no` where name like CONCAT('%',#{name},'%') and department like CONCAT('%',#{dep},'%') ORDER BY no ASC
    </select> 

    <select id="attfind3" resultType="DTO">
        SELECT a.`no`,a.employee_no,a.DAY,department,NAME,rank,a.start_time,a.end_time,a.night FROM attendance a inner join employee b ON  a.employee_no=b.`no` where name like CONCAT('%',#{name},'%') and department like CONCAT('%',#{dep},'%') and a.day BETWEEN #{start} AND #{end} ORDER BY name ASC, day
    </select> 

    <insert id="intest" parameterType="int">
        insert into attendance values (null,#{no},SYSDATE(),SYSDATE(),null,0)
    </insert>

    <select id="datecheck" resultType="DTO" parameterType="java.util.HashMap"> 
        select no from attendance where day=date(now()) and employee_no=#{no} 
    </select>

    <update id="out" parameterType="int">
        update attendance set end_time=SYSDATE() where employee_no=#{no} and date(day) = date(now())
    </update>

    <select id="cyear" parameterType="int" resultType="DTO"> 
       SELECT department, MONTH(day) AS name, COUNT(*) AS rank FROM attendance a JOIN employee b WHERE a.employee_no=b.`no` AND YEAR(day) = #{year} GROUP BY b.department,MONTH(day);
    </select>

</mapper>  
=======
<mapper namespace="com.example.demo.database.Repository.LectureMapper">

    <select id="getBranch" resultType="BranchEntity">
    select no,name from branch
    </select>

    <select id="getTeacher" resultType="BoardEntity" parameterType="int">
        select no,name from employee where branch=#{branch} and department=3
    </select>

    <select id="getRoom" resultType="RoomEntity" parameterType="int">
        select * from room where branch=#{branch}
    </select>

    <select id="getLectureList" resultType="LectureDTO">
        SELECT a.no,a.name,b.name as 'instructor',a.price,a.students,c.name as 'classroom',a.start_date,a.end_date,a.day,a.start_time,a.end_time,
               a.part,d.name as 'office'
        FROM lecture a
                 inner join employee b ON  a.teacher=b.no
                 inner join room c ON  a.room=c.no
                 inner join branch d ON  a.branch=d.no
        ORDER BY no ASC;
    </select>

    <select id="getListDetail" parameterType="Long" resultType="LectureDTO">
        SELECT a.*,b.name as 'instructor',c.name as 'classroom',d.name as 'office'
        FROM lecture a
                 inner join employee b ON  a.teacher=b.no
                 inner join room c ON  a.room=c.no
                 inner join branch d ON  a.branch=d.no
        WHERE a.no = #{id}
        ORDER BY no ASC;
    </select>
</mapper>
>>>>>>> f12f9191e61f18a407d84447628ed8a617cd72c6
